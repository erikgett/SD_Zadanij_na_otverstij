{
  "Uuid": "13c43291-cf2b-418a-b8f8-03e738a2805c",
  "IsCustomNode": false,
  "Description": null,
  "Name": "430_1_Создать задание на отв",
  "ElementResolver": {
    "ResolutionMap": {
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "Point.X": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "List.GetItemAtIndex": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [
    {
      "Id": "608b346f1db844f2ad6d5fe2ad01858b",
      "Name": "1.1 Создано новых заданий (стены):",
      "Type": "integer",
      "InitialValue": "348",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "Id": "de5a0664f27846b888b72dfecaaac2bc",
      "Name": "1.2 Создано новых заданий (перекрытия):",
      "Type": "integer",
      "InitialValue": "10",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "Id": "d96cae55afe849909996dc526acaddec",
      "Name": "2.1 Всего заданий в проекте было (перекрытия):",
      "Type": "integer",
      "InitialValue": "0",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "Id": "1fb0efdb5dbc4a6f87ef28f797c65695",
      "Name": "2.2 Всего заданий в проекте было (стены):",
      "Type": "integer",
      "InitialValue": "0",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "Id": "4573a20c13f74b5e98288fd8cb53d96d",
      "Name": "Напоминание:",
      "Type": "string",
      "InitialValue": "Запускать скрипт с плана, разреза, фасада, 3д вида!!",
      "Description": "Визуализация входного элемента узла."
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\nNameFile\n];",
      "Id": "b4a164cc0ba2421fab62f07fe0d3f1ae",
      "Inputs": [
        {
          "Id": "e88e6577f0f147978d60eed2d126628f",
          "Name": "NameFile",
          "Description": "NameFile",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c329822c5b1a462f83d653bd998bc035",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "c6557d9429eb47068cfd470c9560fc26",
      "Inputs": [
        {
          "Id": "e06f4c4c24e54ea1ad67787b96dbf447",
          "Name": "Category",
          "Description": "Категория",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3920c9d8a5ce4ebcb30c0e8f6567d732",
          "Name": "Elements",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенной категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 68,
      "SelectedString": "OST_DuctCurves",
      "NodeType": "ExtensionNode",
      "Id": "15b27af1a37349198fb47ca528da7475",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3cec46894bb04b3798b37d90a22f0aec",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "cc78674de7fd4c2eadd4fae4b1b2afa2",
      "Inputs": [
        {
          "Id": "4caddfb222044077b9d22012901f27f2",
          "Name": "element type",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6155c81bbecd44e389f65f970305e669",
          "Name": "elements",
          "Description": "Все элементы в активном документе данного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все элементы в активном документе данного типа."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementTypes, DSRevitNodesUI",
      "SelectedIndex": 278,
      "SelectedString": "RevitLinkInstance",
      "NodeType": "ExtensionNode",
      "Id": "27d193b6764047caba60bf8356a3a8fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47a8beb69b304479a19d2234dd577b0d",
          "Name": "Types",
          "Description": "Выбрано Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все подтипы элементов."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "bfc6de6303ba47cfa5fe97d2120dcd86",
      "Inputs": [
        {
          "Id": "39946ea605c94256a65490b27541b829",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a6a89cda60642cbaf143a02aca8e554",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "1180aecc304346cea1bb6d60a2132a34",
      "Inputs": [
        {
          "Id": "4d26abb2ee094de1b839f1efb563c549",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6e81149a4dd473a8e55570eb8592f0e",
          "Name": "ElementType",
          "Description": "Тип элемента или нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возврат типа ElementType для элемента. Возврат нулевого значения, если элементу нельзя назначить тип ElementType.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "64ab9b4659d549d2a2bce7762ceb5560",
      "Inputs": [
        {
          "Id": "2c7387b123bc486b85ffe4c80f418943",
          "Name": "str",
          "Description": "Строка для поиска.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f004075f561c4ed6adaf033f4ec699d6",
          "Name": "searchFor",
          "Description": "Подстрока для поиска.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5278ef1c2d9349f0905ee893591ec63d",
          "Name": "ignoreCase",
          "Description": "Учитывается ли при сравнении регистр.\n\nbool\nЗначение по умолчанию : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21e689a28de2438496c0943be1c2062e",
          "Name": "bool",
          "Description": "Содержит ли строка подстроку.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Определение того, содержит ли данная строка подстроку.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "22c83e0e20df480b960fa71fa7da6157",
      "Inputs": [
        {
          "Id": "3ee3531ebdc149ef85ec23a27b81723f",
          "Name": "list",
          "Description": "Список, который необходимо проверить на присвоение всем элементам значения «False».\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0a9b11311d249c687ec9bb4894e3e35",
          "Name": "bool",
          "Description": "Присвоение всем элементам значения «False».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определяет, являются ли все элементы заданного списка логическими и имеют ли они значение «False».\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "042a89521da2466596ea139d0132de6a",
      "Inputs": [
        {
          "Id": "919ea9a5b97f4fffb5d1a630c30f2676",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51fce86777b643d2889613754cbf2c60",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "065ed2184fd348f4b5b06f7824178b95",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9ad8f76bfc045bfa98e28bb34bc2cb6",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 588,
      "SelectedString": "OST_PipeCurves",
      "NodeType": "ExtensionNode",
      "Id": "60f82a3df44643cf8e6162ccf9d7d0d0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd23938b517c4ae7b7571381c64c672b",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "f90abcbcbe6e47e789984ea9051e05e1",
      "Inputs": [
        {
          "Id": "2e02e7ce2b5d49cfa5048e4c55681c38",
          "Name": "Category",
          "Description": "Категория",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f725de22aab4b2d95cb5042a09eeed1",
          "Name": "Elements",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенной категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4548dd8801c2405cb66dd3c432d7b77f",
      "Inputs": [
        {
          "Id": "6267e6a0b3214380b0a20c3ecbeda029",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfc57beca84144fcb3ecc333400890c3",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75056bd5ffd24777a120e9ee4231a9e8",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfc9fbda632f400987fd395ee5b42bde",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "f974e19caa5f426e8bdb1da1c3287cd7",
      "Inputs": [
        {
          "Id": "c7f32b9245f7407d870be2c347476485",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fc02cf3bf13477787a49682758bdda8",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.BoundingBox.GetElementsIntersect@Autodesk.DesignScript.Geometry.BoundingBox,Revit.Elements.Element[],double",
      "Id": "c280c3b7a811448d8f9c1a8523e50da0",
      "Inputs": [
        {
          "Id": "6714d65a50244986b802787382e15785",
          "Name": "boundingBox",
          "Description": "Input a Bounding Box.\n\nBoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b20922e92c54d8a8c153c4f4f2806f9",
          "Name": "elements",
          "Description": "Input a list of Revit elements.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c3cb8cc2c3342a48222a0b5eb37672a",
          "Name": "tolerance",
          "Description": "Enter values in active document units to control the match criteria in the geometry comparison. Use positive values to consider gaps, and negative values to consider overlaps.\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9db941d9fdc8441e9ab82e1c7bc673bf",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filter and return Revit elements intersecting or inside a bounding box. Element Outlines (BoundingBox) are used to determine the result.\r\rUtilises the ElementQuickFilter class which operates only on the ElementRecord, a low-memory class, for rapid results.\r\rVisit bimorph.com/bimorph-nodes for support\n\nBoundingBox.GetElementsIntersect (boundingBox: BoundingBox, elements: Element[], tolerance: double = 0): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Диаметр\";",
      "Id": "513152f8e1294eb88f3f617656f58c41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e193d8f444c44dbaaec6150476159119",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,m>=D)[\"in\"];",
      "Id": "9e2b830b47b345539ad56aa74d6d349c",
      "Inputs": [
        {
          "Id": "e2ad1aaa5fc340a19dcb25fd48bb2e5d",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4cfb3b991d4c4fec9e7d8597e950544a",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72844a094f3743a4bef8e26b784b84e8",
          "Name": "D",
          "Description": "D",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17d54e8ee18b4c05b611a2fee6c0e8ba",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8c7d8b4f80234c76b3e7cd67c9516c10",
      "Inputs": [
        {
          "Id": "c6c4dc0f47594bd0bcb65fbfc248c3a5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7f6e8403d27443eb52543e6a22ee817",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "167122cb10b843828b1dbae60b8f0b32",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,ln>lnmin)[\"in\"];",
      "Id": "d45056c512de41b385322c5339a9e377",
      "Inputs": [
        {
          "Id": "5380b6bedb59428f8f713448034711a1",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5604078702a4081870a72571cacc895",
          "Name": "ln",
          "Description": "ln",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38bcbe62272a4cdcbcc6127c42023bcd",
          "Name": "lnmin",
          "Description": "lnmin",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4bf0ac7dd1d9425db1742a86da2c19bc",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "436cdaaef754459086f9e9a188c37a38",
      "Inputs": [
        {
          "Id": "61b67d2ff46a46d780b47f98693ee710",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de489fab4b4d4da798bb936cb590a309",
          "Name": "Geometry",
          "Description": "Геометрия местоположения",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение местоположения для имеющегося элемента\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "8c289f2b05c94c4d9be1c3125fc008bc",
      "Inputs": [
        {
          "Id": "f687c7bb3c974821b5e1f26343e078d1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4bb569711d4430287cefb68c03420b1",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Общая длина дуги кривой\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.BoundingBox",
      "Id": "7aa6bd20bc324bd68562accb6f293e28",
      "Inputs": [
        {
          "Id": "4651483d83084b9db27ff4a97a9602e3",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05c2c53c33f74f53a7f1144b36f6257e",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get this LinkElement's bounding box at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.BoundingBox: BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,DSCore.String.Contains(m,\"Вн_О\")||DSCore.String.Contains(m,\"Нр_О\"))[\"out\"];",
      "Id": "7c9ca365545d4b9cb5f10fb73991d66b",
      "Inputs": [
        {
          "Id": "5da8415847e24db8a8848ee7083d2d57",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a58eeb7c2774defb6cb222ab507706a",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26453b820bb74be9bcc7541b5e982941",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "8090d45fe19e4c6f96bb265a79dd7580",
      "Inputs": [
        {
          "Id": "41880e7b358645908c1f50c45a719559",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77064e322d8e4a4ba190f0a4ddd2a653",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "211edfb135534e5089ebb4c1ed41a605",
      "Inputs": [
        {
          "Id": "3a35ac5154ce42a28c2d53dfcc83188a",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee86d2e9d8824655948c3bfd3c6932ee",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a6991127ab24fadac42830150ca2621",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.OfCategory@var,Revit.Elements.Category",
      "Id": "2930ff65bcf74490aeb307c7d0baf4ca",
      "Inputs": [
        {
          "Id": "beff5ad3cd454b6fa4491eb73b4443c6",
          "Name": "linkInstance",
          "Description": "Input the Revit link instance.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "046f906e790943f184522f2718055633",
          "Name": "Category",
          "Description": "Input the Element Category.\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6e999c1aaff4fa188e3d28fcde04d7f",
          "Name": "LinkElement[]",
          "Description": "LinkElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get LinkElements from a Revit LinkInstance by Category. LinkElements are optimised for use with BimorphNodes Element and BoundingBox nodes and are compatible with all nodes that accept Elements as inputs.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.OfCategory (linkInstance: var, Category: Category): LinkElement[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 550,
      "SelectedString": "OST_Walls",
      "NodeType": "ExtensionNode",
      "Id": "a3a610de36d3467698cd807302ac2356",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4e110a9a7744575a45b08c759671b30",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 128,
      "SelectedString": "OST_CableTray",
      "NodeType": "ExtensionNode",
      "Id": "7819ac03e3de4bd7994f08b7f7d94906",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3f9dfefacce401488fe2b2f5211ecd2",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "416d7c65bd2c424d8bbaaadaa0d18241",
      "Inputs": [
        {
          "Id": "3df4b52fd9784701865dfed1fcedcb52",
          "Name": "Category",
          "Description": "Категория",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "585889bc6341459682ac5de9f35f56f6",
          "Name": "Elements",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенной категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Element",
      "Id": "9d395c921b234a90a2fba88c3a6abb07",
      "Inputs": [
        {
          "Id": "14c47b29e30044ec8f8cea85a3b6f2f1",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ce2977ab923446e890076c760f06786",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element stored in this LinkElement. Use the Element with any nodes that are incompatible with the LinkElement.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Element: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4796d57c-a1a0-4676-b524-57abb5fa73be",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "086ca2ad74224171a3534bd9de110f18",
      "Inputs": [
        {
          "Id": "823699a343664bef9acc6bc44a1ef920",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ac95ff6e5104e2a833ce5e92fb59520",
          "Name": "type",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the family type of a given element (if applicable). Unlike the OOTB node, it also works for elements in linked models."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "str==null?\"Вн_О\":str;",
      "Id": "bb96bae4aa8c40d78f85d3f42981064f",
      "Inputs": [
        {
          "Id": "460c974c613645dfadaa8fd9247db348",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3e5caded40c45c3b95fb9466508cf99",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Solids",
      "Id": "796f2f2cb1c04cafb57b5435d0c37353",
      "Inputs": [
        {
          "Id": "9c6eef08e92045a8ae804c61def2c09c",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa99286819964c8d8043d531bade11c4",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "02edcbd751c84cf09fb46e95e9b9a879",
      "Inputs": [
        {
          "Id": "7791dd8a8ac849ada7a5d949deb628ca",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f397c95181a64f6d9e4fc38d4d636016",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2bc35e82c3d473fac91a111f62f8387",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd94793d3ad64c20b6d9ac2324c8fb59",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "edaf13dc93074a3a831f1a7e28e3d128",
      "Inputs": [
        {
          "Id": "41a62d7d1de04c6098f53c72b8a895ca",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de9a8dd57a6e4603b5e5c5fb67ee0a1d",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "!x;",
      "Id": "85251ad7a4c144948ea46bb89396283a",
      "Inputs": [
        {
          "Id": "7841316ae56049768525b963ab3e520a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d630f4252cb546889dfbf10b1a5cebd8",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "40e81aa433464f53814fa2be65f46635",
      "Inputs": [
        {
          "Id": "07cb0ceb35f443beb23b9d4b8826ee0c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a13fb8186704415c907d6b4ea815d789",
          "Name": "Geometry",
          "Description": "Геометрия местоположения",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение местоположения для имеющегося элемента\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "c2de62ce459a460c8cb1725c764e7a8c",
      "Inputs": [
        {
          "Id": "b15c62e31a464425b9dcbcf762c0b76d",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56845c7505a3403c934135702a76a603",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "7dcfb3aed8d54894be98f53733af6825",
      "Inputs": [
        {
          "Id": "a5dca9e6c5c9411e81cf2b7ad3f21644",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e658c35133794b2aad8e87e3a14fac0d",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb7f3f98997b4c41b9a8c9c7337f0e9b",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57956c3e32074eb781e4434e29b5adc9",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fa47ebd0c5e542c2bdc9f41e95e92974",
      "Inputs": [
        {
          "Id": "57526048f8fb4ab39b6f457079ecb834",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3eb26725236548d7a7af113fa939c4b9",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb689405617e4c5d9e7bfacdedc28272",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4040d753d7d145378a6a36b4b5757491",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9508a69d954b4d93bc12b74c5f2364b6",
      "Inputs": [
        {
          "Id": "a9783ba34e274d49b8c841e58a832bac",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ad47ef42bd94eaea1d6345654939728",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "31c9038812f54c96a7f079b333cf5746",
      "Inputs": [
        {
          "Id": "3654eb16d1aa4843a52f70938e3119f9",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af9c5a1fea8a4887b05ed39c36e18063",
          "Name": "param",
          "Description": "Параметр для оценки\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31fea5b50c644594a93daa4ccfb433ca",
          "Name": "Point",
          "Description": "Точка",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение точки на кривой при заданном параметре между StartParameter() и EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "41415614014b407aab4f08d548664021",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a36a000cc2f142ed8bf4e0fe199013b4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "72c737b467164369b13e3160e43c6450",
      "Inputs": [
        {
          "Id": "de200480d88743c4a4ee115d33c218f7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54c14f2f303840a692d10109578e9ff3",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "112bb5b0ae0140c1be7e1b3b9a450c0b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "547c601087104b5789bdadbc6c2d29a1",
      "Inputs": [
        {
          "Id": "f19ee70aab5d4a499e3356c89fa4e090",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "908f7e1e54204eb4a7f91b1f791214b5",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da2881b150a24d6a944bd6bb351778a7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";\n\"Высота\";\n\"Диаметр\";",
      "Id": "1bb4773e0c4842c99b50b6d771e0ad69",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2642c6f84224752852e10d58117dc51",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15e4e04782844e37bec26857c6371d88",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1780accb643f46db8b83a0e197d1f517",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(d!=\"\"?d:x);",
      "Id": "09286e9966c94a09b2271d406bbdeb25",
      "Inputs": [
        {
          "Id": "22efed95398e41eeb44be6754fa37603",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e6e3dbd41c040919d996acb14b5e9dc",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "496f9e348f904fa7a7b6865f58b6b5de",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "bd201e1035154278a9f4a57da34e7d50",
      "Inputs": [
        {
          "Id": "c04af1209b534b0f972ebb642eb18a47",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c61cfda81af44ad0aed7efbcdbaeb734",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0df10ede049544eabbd8df878a1912ad",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f346fb3d5bf4a55af6065840100fc34",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79fe0121f60b481e936ee51448dfd9c0",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "28864f58d44f49e69e910044f9437aab",
      "Inputs": [
        {
          "Id": "48b2c7064aa14645a6276caa1ef4e4a1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f25c776e1144e569e75941173962c0c",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "01dd619c0e98498994e56bcf3927d256",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "087ac04eaf6b43a68138836a5b19880c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "d293e216805a4fa8b90f8bbe6daf31bb",
      "Inputs": [
        {
          "Id": "108f1affa15c4de797cf677377d78ea5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b06ac977f6394ef78072946652586366",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "028362c6d26f49e3a32d5280b6c24c13",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c64e95cac53b40d6ade35cb33a1657af",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Высота\";",
      "Id": "6607f5d80cb04ec59f92c50faac6061f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98a4a9e1066b429bb1039aa7a76c5516",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";",
      "Id": "3b8d2b4294a64386b1dacd275dc099c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "053cda3c01214c16a93fae99ac8bbfbe",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "47ac816cfa9349c8b319466722c07879",
      "Inputs": [
        {
          "Id": "6f36ead92a984798be6aded022a081f2",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea4f3615bdc74f6994fcfa5b9ce41803",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Направление кривой\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "32eee341164848e786ef3482f2699316",
      "Inputs": [
        {
          "Id": "637c890ba6a34cbca79c170d11ad8dd8",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a955f91622ba4ad2b5312a5e954655bb",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8fa96cdd86f492a81f8cd7ae95d8bd3",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "022ad34561954d93bb6886bf43e00ab8",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "b57a25722b794d5987ae455706824e5d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "358baf478cde4fd896f0660f809b27ae",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "6d15642ff40142e8a41b9144bc28492d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bdcc4d6b90f44ea9903a9344e77b91e0",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "fbac7c0eb8b94a3bb25c22e9912fcb12",
      "Inputs": [
        {
          "Id": "6f35dd127a8d41339173f379497b0620",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "618d87c7fddd4ba1a350a4de5a2808b9",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcf33e8d36e54e878b8ae8c4eb956242",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(x+60);",
      "Id": "f4ea9ec78e8c41e9b5a5b804bd12d934",
      "Inputs": [
        {
          "Id": "4f83bee6fc0e48adb5135f8e5aa870fd",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "657545bc72de4e9bb7e267f37c00f6d6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Глубина\";",
      "Id": "fd1277087d114a16a99a830688a73f85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5913b8258ceb453ab21b20c5fe8d2e77",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "8166ad7926c54adba337b438327e069a",
      "Inputs": [
        {
          "Id": "871dc1586a994a9396309e195dce3d1e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6ed9ed1f00a499da5558553d8e433ba",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35eaa65516594d9da48e68840e4dffdd",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43d9f10b456c4b2cade89e9340510d66",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(w*0.5)/Math.Cos(A);",
      "Id": "ca2b8551f96d47b8817b775db1536c79",
      "Inputs": [
        {
          "Id": "0eb49a0856ad4c64b195f4027b7d7344",
          "Name": "w",
          "Description": "w",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c6b2d0e6ef241c696154bda5f99bf20",
          "Name": "A",
          "Description": "A",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b16879892624aa68f2198104af3d984",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "3c1cf434477743298858531246cc5cb7",
      "Inputs": [
        {
          "Id": "877bdbbddfc442e3bd3e6f3fee6dba8b",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37d0a0cc14ff430cb6b1e70a14458b25",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Направление кривой\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Vector.ByCoordinates(v.X,v.Y,0);",
      "Id": "d05df6c030b04e4b8b20cfd0cb818704",
      "Inputs": [
        {
          "Id": "84ab91e7fa3b41ea83e942f982306fa9",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35d3c8e1e2a4486a85bfd8f7e0b14486",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Vector.ByCoordinates(v.X,v.Y,0);",
      "Id": "06e6b3f95f7742e797c37b8b61496144",
      "Inputs": [
        {
          "Id": "bb7279545e264316a3f975c7e3f4c78c",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "054293c925984abfb3ff818a7d58cfc1",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleWithVector@Autodesk.DesignScript.Geometry.Vector",
      "Id": "605a6812c9b740b7b3c539131c2ae040",
      "Inputs": [
        {
          "Id": "9ff9316331ce43fdb7602d091d7fd1c9",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57935d312b5048d19913c2dacbec0d5d",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e83aa02eff8948879ebb254f912ecabe",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 180].\n\nVector.AngleWithVector (otherVector: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(b*0.5)*Math.Tan(A);",
      "Id": "8ab7346284ac4c5bba63df0aac2d2ae2",
      "Inputs": [
        {
          "Id": "b8314e74eb1f4cae9408bbc2ea32bcfe",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66314c0f7e2a47b4a86e006bbf0b3df7",
          "Name": "A",
          "Description": "A",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13817bdff67943b9886023d2ca71d73e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\ndelta;\nx=(bt+mt)*2+delta;\nMath.Ceiling(x/round)*round;",
      "Id": "84ef4b9ce8284e8f9b86de6656158c9a",
      "Inputs": [
        {
          "Id": "668bd3aa72c04996bca9db03cb2eb924",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0d77c799f6e4aefb9d367de5d114253",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e1681f921c44b4fbfe5cf60b0bc290d",
          "Name": "bt",
          "Description": "bt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b71ce4f650e247399145619a09d0e48b",
          "Name": "mt",
          "Description": "mt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43e60346db8d43269c5555cb829af709",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c06486863cd54703b4d5fb762e206be3",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7574864561bf462287dd3df2597bd2e2",
          "Name": "",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "609fffc8c8c745878921548a2b870503",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ar=Math.Round(a,1);\n90-(ar>90?180-ar:ar);",
      "Id": "166974e1b2274ed993c119b496ad1504",
      "Inputs": [
        {
          "Id": "eb1c93d9425a4570903bb9265bee0a00",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb602e4162214bf7a6d3c3fd5838ce9f",
          "Name": "",
          "Description": "ar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "710b9a4864b74f33b128e2be6c5be7b9",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,m)[\"out\"];",
      "Id": "e5c8fe2a6dcf45d8828e610db1474e31",
      "Inputs": [
        {
          "Id": "f4f6678bff9e4b52b9fd47df2bf50d41",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2891c4fc992d4ab09f31a5034c3a9a3b",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "226464c1bcc14e3f8cfba6ec328b532f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,m)[\"out\"];",
      "Id": "fac13e6eb9f14cb5b0d930f5e4378898",
      "Inputs": [
        {
          "Id": "8b7e5b8850b842c3822f5a4b17f4e629",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f9d985d358940918f6cee9362c2d190",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a62dfceba0947ada66e28907d0e0e97",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d0e57e2ca2884bcbbc3e392023b23656",
      "Inputs": [
        {
          "Id": "faf0c8f4d4b344ebbb9db9ab334be014",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43c5c2bdee1a47afbdc85d6be04bc544",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "c3cf40baa784454581b3104b8996bff9",
      "Inputs": [
        {
          "Id": "a72f96ebdd904f99b952c5886d6565f5",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83d874fa2e034d6c93c062d1463a27a8",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "065aa7343e7544849e8c88ac83fd79a1",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be57ead994ab42ffb70e5837756cb272",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "61f3f0ea6293470e832c5506fda79019",
      "Inputs": [
        {
          "Id": "d3b3dac7eb974cf2a5cf866ae937af77",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "013cdaf6b3b54094a890a858658106db",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Location",
      "Id": "8905a8258e8f47d0ad959748e14d3bc9",
      "Inputs": [
        {
          "Id": "b96027ea4c6d4257b92dc680946fb3f1",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ebe0394eb604a27b36212bc7f77cedb",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the location of this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Location: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "691f4a72b217403491b4b6475d0b3cb9",
      "Inputs": [
        {
          "Id": "df1281fc30424cc89c3f1620a6ad2a3a",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a903d6d86bb47759b43277eda44b29a",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "296199f432de4f9d93ffaf29ddb93450",
      "Inputs": [
        {
          "Id": "e99707e3296e49d8a90174394423e791",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "568b50ebb3d34ca192f8580866de74bf",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcd9134996944f1d8a41d95356378ad0",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f9f639d7ea94791a428377527bd1365",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a130439d50b24990b82eed3b36327a47",
      "Inputs": [
        {
          "Id": "6f633c1056e54681b826f1f541aff6da",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f2ecde008f94aa0ada296672d42af00",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "637fcefb0adf4c55972c451cbfdf7ec8",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f63933a42ccd4025b177c7b99087db14",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "70607cbcd2cb45bba14f1c26090ecba8",
      "Inputs": [
        {
          "Id": "6fda9889b01f4ec5bda9dee8e000d595",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3fffb20a44d54e24b60d6434fa219498",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "4ac5b5948b8e4199a8b21e2729f64302",
      "Inputs": [
        {
          "Id": "22c56a496581417db274eb029a56a1eb",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "164274d6bbf04b99bf0386fbef0d6a44",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82d6da3c0f0a4bc0851712dfea01edc8",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac5eab98d76641cb8af98fe5d3cd0dd5",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nwalls = UnwrapElement(IN[0])\r\nOUT = map(lambda x: x.WallType.Width*304.8,walls)",
      "VariableInputPorts": true,
      "Id": "5a555e44b36c4b2ebf7b438cf1ed6668",
      "Inputs": [
        {
          "Id": "68eadfcab9d14a989524d22d53d775b8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d655e6442fa46718a06f8befece8991",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nfs = UnwrapElement(IN[0])\r\nop = Options()\r\nop.View = doc.ActiveView\r\n\r\nOUT=[]\r\n\r\nlines = IN[1]\r\ncss = IN[2]\r\n\r\nTEST=list()\r\n\r\nfor i, f in enumerate(fs):\r\n\t\r\n\tge = [list(f.get_Geometry(op))[-1]]\r\n\t\r\n\t#TEST.append(ge)\r\n\t\r\n\tfor g in ge:\r\n\t\ts = SolidUtils.CreateTransformed(g,css[i].ToTransform())\r\n\t\tgroup=[]\r\n\t\t\r\n\t\tfor c in lines[i]:\r\n\t\t\ttry:\t\t\r\n\t\t\t\tres = s.IntersectWithCurve(c.ToRevitType(),SolidCurveIntersectionOptions())\r\n\t\t\t\t\r\n\t\t\t\tif res.SegmentCount>0:\r\n\t\t\t\t\tgroup.Add(res.GetCurveSegment(0).ToProtoType())\r\n\t\t\t\telse:\r\n\t\t\t\t\tgroup.Add(None)\r\n\t\t\texcept:\r\n\t\t\t\tgroup.Add(None)\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\tOUT.Add(group)\r\n\r\n#OUT.Add(ge)\r\n#TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n#TransactionManager.Instance.TransactionTaskDone()\r\n",
      "VariableInputPorts": true,
      "Id": "23b8c2eaf07e447d96299421a295426a",
      "Inputs": [
        {
          "Id": "9ca6481218a24ceba725ccb22954c877",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9832010e95f5467b86a7a76385aac4c0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34f8034ff8114809b3989a3e227885ee",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57b7f1e6a7ee4894828fbaea2ffde045",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.TotalTransform",
      "Id": "fdc58490c12f46e7b1962c43aa6431ef",
      "Inputs": [
        {
          "Id": "90e6c5f44a234a9e9c339df14537aab4",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5aad5121576486f8a22a78f3206dfc0",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total transform of the RevitLinkInstance from where this LinkElement derived.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.TotalTransform: CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "6df4c15a922842a793a1b77766837e3f",
      "Inputs": [
        {
          "Id": "4b273ce8beb7434eb0f8f554d6e1db2f",
          "Name": "number",
          "Description": "Число для округления.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7437218682964255b06abbd639554a8b",
          "Name": "number",
          "Description": "Ближайшее интегральное значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Округление числа до ближайшего интегрального значения. Обратите внимание на то, что этот метод возвращает число с плавающей точкой двойной точности вместо интегрального типа.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a=tochnoct;\nr=razdelitel;\n\n\nMath.Round(Point.X(x)/a)*a+r+\nMath.Round(Point.Y(x)/a)*a+r+\nMath.Round(Point.Z(x)/a)*a+r+\nShirina+r+\nVisota+r+\nGlubina+r+\nYgol;",
      "Id": "26776f5878934b3a81a2061d6f43f01a",
      "Inputs": [
        {
          "Id": "0911700220b84b2b9e143832cb3d4ac8",
          "Name": "tochnoct",
          "Description": "tochnoct",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d90a106a42f4a048416e11f936aef26",
          "Name": "razdelitel",
          "Description": "razdelitel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf473181f2ed47ddbc82a87ebe8cca45",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "455cb259f6be462a9bd151f62c6c6868",
          "Name": "Shirina",
          "Description": "Shirina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b518cb4d5cfb4bc0aefe9140c5179dc0",
          "Name": "Visota",
          "Description": "Visota",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cc9b4c5d7ba4d1ebd9c94b5f91d6067",
          "Name": "Glubina",
          "Description": "Glubina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1f0f40962614a46a19e4260a6017e62",
          "Name": "Ygol",
          "Description": "Ygol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d64a56ad066a4fec9ada369a50f8fd19",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e5847cc97354e5bbf59779cc5affeb8",
          "Name": "",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a6d53e7935842f384cd8c932c930d88",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8d7434c83cb0448c80d99bf11af1e2f0",
      "Inputs": [
        {
          "Id": "a844a18508434b18bded4dc48ed0e237",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd7fdd0a87f54f42a0d10fe796036de7",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "8dc82f97a4254170b40072fdf8f6b148",
      "Inputs": [
        {
          "Id": "925dc42f4f6e402eb78f15309a1fd2d6",
          "Name": "item",
          "Description": "Элемент для повтора.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b7108da49b274feda565612a2909092a",
          "Name": "amount",
          "Description": "Число повторений.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc1eb3316b4f4deca84ea24094947753",
          "Name": "list",
          "Description": "Список повторяющихся элементов.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание списка, содержащего данный элемент, заданное количество раз.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "3e9130dd34684ffb8ccd5d2cc2dc5be0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64a20c69198340d5ab793747a5bd3b86",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";\n\",000000\";\n\"\";",
      "Id": "819d729a1bcc47309383b0bbc4d372d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c9cd482201384cb5a628ab233952d024",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3087f9bb46b493193095f9e24f01faa",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12e09bfae059407fb4a6552d93ed14bf",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "187bc8006cac4b1d9c5d34d76114595c",
      "Inputs": [
        {
          "Id": "5e1ba27475984eff9af5ab70f9ad1d32",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1a40d43916e46a2a669ebfd4e748836",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0673c4741c3845998f09efcfb1b352c0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "e6eb3183e61b4b75a58d72ea5954af5d",
      "Inputs": [
        {
          "Id": "1c2dbad638f0497ab240201184adf775",
          "Name": "item",
          "Description": "Элемент для повтора.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "372691207aea4ace8de1fcfdb4148af9",
          "Name": "amount",
          "Description": "Число повторений.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c363adf4559c47c7993a2b764cbccdb5",
          "Name": "list",
          "Description": "Список повторяющихся элементов.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание списка, содержащего данный элемент, заданное количество раз.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6af88980147241469560a8598d6e4fff",
      "Inputs": [
        {
          "Id": "3566f67e4bc7478ebe306aafc8a7c7b5",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "93f11ce2ad1f4afb95e68945e60fa85f",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff7856072b274b2689ad0f2af9f71b98",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "82f13d504d3f453aafa4699b7476cf04",
      "Inputs": [
        {
          "Id": "f8d864bce26b4c1b99d0334f6c53c88f",
          "Name": "x",
          "Description": "double\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab5593acd04449a682a2ba2f9414599d",
          "Name": "y",
          "Description": "double\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ec07c7dad7a4ff080ed35f7aa772718",
          "Name": "z",
          "Description": "double\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d7f79038217487c8a6043d54f90275a",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Построение точки на основе трех заданных декартовых координат\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n2;\n3;\n4;\n5;\n6;",
      "Id": "ca6140ebdc9e499a9cad4cd3cd25f823",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5448f28694e5456a8f14c4f3c4af927c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07623120fc3645ebb16fb232abf3e65a",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42a59e151a93423b9e692c9712e9b915",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c207f871dc6b491497dcaf96056541d3",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a8a07a7cd804b94a8bb7106e4e8fff2",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de08db2ff30d4f4fbfaf845a5dc97916",
          "Name": "",
          "Description": "Значение выражения в строке 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d49d50db77c4174ba2a508f3634eaf4",
          "Name": "",
          "Description": "Значение выражения в строке 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b822bf1a1dda4fae8e047dfd4a428fd8",
      "Inputs": [
        {
          "Id": "2a722f6f1b4949b8b2857cbb57384325",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "db7cda9353444d87a145dde2ba51b9bc",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "deccf794f4354992ad5a78a25909ca30",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6964f482e3bb4092adf1779bf493bf9a",
      "Inputs": [
        {
          "Id": "d662f6eac0fb43b29e119bdd5179d198",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "e7a1020009554771b2ab7af2a28e713b",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29047e37223a4537ae473e5073feb7a4",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "c246e431118142e4ac311afe34a9799d",
      "Inputs": [
        {
          "Id": "b83eadb49fac411eb9ad0f593142e263",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0a8346acd5147fb9cc11c0b773592f8",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "dce07c1dfdd740608c19e53a1047e553",
      "Inputs": [
        {
          "Id": "f07b1b31d54849459e0922fdd94b5c16",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f36d210b890c42d6968a279899cc12f8",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "0db80bd4d97e46a59fee0b24d47c898f",
      "Inputs": [
        {
          "Id": "bebaba10b76945a197c5013c9aa7bc20",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "feb2008ee0b64f759e3c921985a823c8",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f8eea8c5fddf4ea781728329decb9868",
      "Inputs": [
        {
          "Id": "948cdb0feef646e6aded35d606e15d2b",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "dae0a56c1b54465fad542f96719dc605",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7271138634434171b7ca193011269bd2",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "6e5f897f3ab1479da985d1c128e55367",
      "Inputs": [
        {
          "Id": "9188a4d5ed6847bfaf2af6679b3cd888",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37f730f21c5745c5bba47aca271a234e",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b3ab149391f14224a017182174605c1f",
      "Inputs": [
        {
          "Id": "4b3e016bc47a477fa8dab8b591a35ae6",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "8031fc30da7449d4974ac18007281d1a",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e782c222e7a04e2c9f1f01b3bf90e7c2",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "15706ca1a7f44c14ab371c6325a4bc11",
      "Inputs": [
        {
          "Id": "f8388c2119b742d5a97f346574fc6110",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8129d2064fa14e8086d4a289e809fa58",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "697a9a4de9f545908e7136e81079e4b3",
      "Inputs": [
        {
          "Id": "ffc493b502a8463d820805548a3d0676",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "af2628de312546e98c451616ecbf7460",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fd71f766ee045ff8ab68dcda3b0b5eb",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "9a92afbd03e54a4d9dece24d05b1865a",
      "Inputs": [
        {
          "Id": "a6badd571d44462caebd2adab648616f",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc35ef4996684da9abf319f6a66e400b",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8590d9df23be40d48a03f1a5a7927d50",
      "Inputs": [
        {
          "Id": "092b8cb9a47345a4b4d6b69dcc1bd51d",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "8bc72a1befd446e4b2c44f04d3c3b7f6",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f8725272e2c40099d08474bf2660055",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ccf5ee2128984535b3f086a3e4fb96b1",
      "Inputs": [
        {
          "Id": "f96ff5bc046849d2bb6514d65a13a078",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d32a7ba2941b4e88a774f77c398b62a7",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87a8959477bd49e79c1b7e6e1b8de782",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ad8a54001db4e1d89363486137ace86",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";",
      "Id": "5ebb746fb0c64d5588725414cdca4a9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aad4390d84674cf5a295a7342de2f899",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "23a1151ade4f462c919fa789ee897bc6",
      "Inputs": [
        {
          "Id": "6742e86c542c4a5a980999157b7999c0",
          "Name": "str",
          "Description": "Строка для разделения.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1a8e373340f40e99cc039cf18a05400",
          "Name": "separator0",
          "Description": "Строки, которые (при наличии) определяют конец и начало разделения.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85d2c57c5a3c4a36909326c9fa7ca4e2",
          "Name": "strings",
          "Description": "Список строк, созданных на основе строки ввода.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Разделение одной строки на список строк, деления которого определяются заданными строками-разделителями.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "770907c6371942ceb86f4fd95b4804be",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b0072e9a011469287493465b54772ba",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "4d322f62d0284178951b031c5f5a8514",
      "Inputs": [
        {
          "Id": "2eaa712d72d34d48ba997e6a11800740",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89b33a70fac44ef096c02559aaf02e60",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "073f39978171401a84906ef83c1bca46",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1de19af52f4244cd887e495e7913d1b4",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "27ba4573ac88422891af1eaad1ac483e",
      "Inputs": [
        {
          "Id": "c7520ed1bf4e4bba8e66a059a692a186",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a71ef2bdce444a8b5ee2b6c381bd64b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"V0|\"+x;",
      "Id": "8adae1320ff84dfcb44b6a3ed41ae471",
      "Inputs": [
        {
          "Id": "4e886e247d98407a92936bf18b9e5dd0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "867f0ba3cd884439b6241294d72a1a6e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Стены_Прямоугольное\";",
      "Id": "c0abb70df80c4ac7b0a249289c806503",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "32d342dbe9a640199dede5b1fcce8e54",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "93f0fdfcd21545b19e2c5de744b2e48b",
      "Inputs": [
        {
          "Id": "e278e594df3e475d89f9ca6798061b16",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b13e628504cc44f196945287537b8c6b",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.BoundingBox",
      "Id": "11007de08b9549389f9356ed5f5fa5de",
      "Inputs": [
        {
          "Id": "3d928220209248cd98266f9b865a5995",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dabbb2acba124e76a47f41dc20258c72",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get this LinkElement's bounding box at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.BoundingBox: BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,DSCore.String.Contains(m,\"Вн_О\")||DSCore.String.Contains(m,\"Нр_О\"))[\"out\"];",
      "Id": "d5d35195d8214182bdcca384f3190aa2",
      "Inputs": [
        {
          "Id": "1e28caf9ee0a4a3289ced49db8b11ea7",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50957df5508642c998d632db2a0697dc",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d0060f07cd9468c834af98712d2be6b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "66e308730ef3430ebe4d3bbdbc2bdc19",
      "Inputs": [
        {
          "Id": "e415aef5bfd841799651483705fb0ef6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47e1e9b769cf447f8e98f38cd84efdc7",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a9d6022ccb4946dfb08c9918ca45e170",
      "Inputs": [
        {
          "Id": "f575fc37d7644cb1952ad8d30bb04ded",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ac576b0aab247ab9b78547941480a96",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b8b347a3eb84f6bbfc684d0f3792d91",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.OfCategory@var,Revit.Elements.Category",
      "Id": "47cb71e23e724f3591dc257c06f98242",
      "Inputs": [
        {
          "Id": "de5c1f857cfe46ca86ee53d4cb0b52eb",
          "Name": "linkInstance",
          "Description": "Input the Revit link instance.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ff446391b844fec8f141fb7b2acbc62",
          "Name": "Category",
          "Description": "Input the Element Category.\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc009466edaf4608b1c59c3824898fa3",
          "Name": "LinkElement[]",
          "Description": "LinkElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get LinkElements from a Revit LinkInstance by Category. LinkElements are optimised for use with BimorphNodes Element and BoundingBox nodes and are compatible with all nodes that accept Elements as inputs.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.OfCategory (linkInstance: var, Category: Category): LinkElement[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 459,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "f18d69827053418da1129678c0f50487",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5a9b0150b3df472ba55870231f7a90b5",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Element",
      "Id": "cb523c729bde4828a6fd73ff28e2b513",
      "Inputs": [
        {
          "Id": "52a055bb5848442684b54f80b54e6cc3",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3be59af2d8e040038b500858a38d4e93",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element stored in this LinkElement. Use the Element with any nodes that are incompatible with the LinkElement.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Element: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4796d57c-a1a0-4676-b524-57abb5fa73be",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3a0c290b5f9e4093aade4ef08a29c5e4",
      "Inputs": [
        {
          "Id": "3837a977810b4ea8b3d7b9185685c6e3",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d9b4e2b43c5459cab23238cfe9b2d29",
          "Name": "type",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the family type of a given element (if applicable). Unlike the OOTB node, it also works for elements in linked models."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "str==null?\"Вн_О\":str;",
      "Id": "6f2b2984e63940ceb56d525309e7b64c",
      "Inputs": [
        {
          "Id": "81375dee9031459f9e57bb280c5c49a8",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c35264e534144e3fb64f3038c2e630ad",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Solids",
      "Id": "b277522ebbb54814be18b503f46930bb",
      "Inputs": [
        {
          "Id": "0d6988b25aa64b36b7a272ba1f8c8e6a",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25dc5ce37a2346029bce065c666ccff8",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "644f0afafa1c41e7893899cb88e16c0b",
      "Inputs": [
        {
          "Id": "f8ecbf546f1249f2b0bd913d98318fe7",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89bd83dd02ff412eab156f3c46c021ad",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ceb690a783342a2b88fa69f8e7cdfe9",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4849eda2c064b4390bc2ab22878fc9d",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "be436ece7bc84d35a95bd958fe27ca26",
      "Inputs": [
        {
          "Id": "4ce6bf87f0314091b07afc27cbb2aec8",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72a8cf065d8c4d39adf082e172e8f2d5",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "!x;",
      "Id": "7fb6d89d7c1b49b39fe09700364bb6e1",
      "Inputs": [
        {
          "Id": "2fd037ff7ff142a3934291964f073e6b",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "584ec42fa109465d96558f29a6c0e07f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "ec7be3ee06534cc68bf0b1bb91b8026c",
      "Inputs": [
        {
          "Id": "af7223971fbd4d3f9e51a2bb7bda2f53",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8c936279d0c4621be4c07a9100a5777",
          "Name": "Geometry",
          "Description": "Геометрия местоположения",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение местоположения для имеющегося элемента\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "ea8ff5712ae7458982279bcebe99ba35",
      "Inputs": [
        {
          "Id": "48811369e99e4a6887dffb2ea3351126",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e70f4aa4fb24467b87743bc6dfc9f47d",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,m)[\"out\"];",
      "Id": "e5077b2fddaa42bab48493555baeaf84",
      "Inputs": [
        {
          "Id": "0ba199787f3b4bf5832954bd408a7b96",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3db3398b011d462fb30f9403e46371c2",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec00916b328480f8dc1470432a1b8f9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,m)[\"out\"];",
      "Id": "77a445d53d8847d09715c3b8614819e8",
      "Inputs": [
        {
          "Id": "e4ab4e0ded584b06ae0ece9307407f29",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3790ac502bf4766a9777857493d0fa5",
          "Name": "m",
          "Description": "m",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f09791691b64b54b725749baf5bb37b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.BoundingBox.GetElementsIntersect@Autodesk.DesignScript.Geometry.BoundingBox,Revit.Elements.Element[],double",
      "Id": "a80c0667de844bd0a19a4acf52adfcc6",
      "Inputs": [
        {
          "Id": "27c40503cf8e4258abaf63b53e7aba73",
          "Name": "boundingBox",
          "Description": "Input a Bounding Box.\n\nBoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cefd3c02ae84ca7a8fae5a967ab5b60",
          "Name": "elements",
          "Description": "Input a list of Revit elements.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b668da81d8154811806d4ad53493bd96",
          "Name": "tolerance",
          "Description": "Enter values in active document units to control the match criteria in the geometry comparison. Use positive values to consider gaps, and negative values to consider overlaps.\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ac0d0379f8e45728a4df83573edd603",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filter and return Revit elements intersecting or inside a bounding box. Element Outlines (BoundingBox) are used to determine the result.\r\rUtilises the ElementQuickFilter class which operates only on the ElementRecord, a low-memory class, for rapid results.\r\rVisit bimorph.com/bimorph-nodes for support\n\nBoundingBox.GetElementsIntersect (boundingBox: BoundingBox, elements: Element[], tolerance: double = 0): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "46e63759dec144ba895face00849f093",
      "Inputs": [
        {
          "Id": "ca5b7a94c87d4825a4d7b6d52569a286",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35b954b5b2bb450f892670fc0e63d3fa",
          "Name": "param",
          "Description": "Параметр для оценки\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a03a4cfcc4b8470ba3a0f1c2c342d1cc",
          "Name": "Point",
          "Description": "Точка",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение точки на кривой при заданном параметре между StartParameter() и EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "edbf69fc37b44026b36cd3bb180cd146",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5ba3598954d4bc09a15387b3afcfe31",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7d800634cf8c459f8627994cde8cf986",
      "Inputs": [
        {
          "Id": "8dcb8f6d8edf4dec888bba96bb711a4d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf615775d1124e22a5f3323dd0b706bb",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "689c072dbc5a4affbdbaf4f1641c11d0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "12a9df0df8dc489ea5aaea268ab8f260",
      "Inputs": [
        {
          "Id": "faea1e1557884f58ae82fb82f9681b02",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db0bb9817cd149ae960d2fe513fecc79",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "374310f97ec14f9fa64d79519890c1e5",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";\n\"Высота\";\n\"Диаметр\";",
      "Id": "5ea5389d0f41412b8b52f59cd2e0009f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6858b64688ed4cceaeb670c24ce199cf",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c77466eb81244bc98569150d0c32a26",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9953f8db2eec47da80bcfa7a1ffd7ad7",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "307093a6bd9447cfb4b6740787b125b4",
      "Inputs": [
        {
          "Id": "c30605bd61e94ab49d78c18022b105b5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "582527b513624129a3b12c18ab75eb10",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1db5532e791f4875afc1e4ffb2cf5d74",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "a3a614e71f5b41cd95b97673df6c1429",
      "Inputs": [
        {
          "Id": "507906924f1f49feb5057b4d02ce9f78",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db444efa68204c35af2734d476e0d141",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1127da2a9864e9a9a51d1b7b581221d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Толщина\";",
      "Id": "37e9fab3a6f142c48ad698fbbeed7a1d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "76e16b578eb34f8e8fe0b3d1c9b95d77",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(x+60);",
      "Id": "8bd2b69c2f314eb989414ac5e8bd1a10",
      "Inputs": [
        {
          "Id": "584e33b3e0d1453c875a5e5ba8a2bd3a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9c2ccbf384f496da3eedbd17dcae4a6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import Floor, Element\r\n\r\nfloors = UnwrapElement(IN[0])\r\nOUT = []\r\n\r\nfor f in floors:\r\n\tif f.GetType() == Floor:\r\n\t\tOUT.Add(f.FloorType)\r\n\telse:\r\n\t\tOUT.Add(f.Symbol)",
      "VariableInputPorts": true,
      "Id": "54e465d146b84e549764a33e83acbcb7",
      "Inputs": [
        {
          "Id": "8e87beb13d244e859c26dec8bd4687a1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19a3a4c1a45644ce9a3c71c6a1215ed0",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "dd1dc07f79814ac6bc55ee118d619eb6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8d8c3db05464e7cbff03247af753e6c",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "edb79d730a2e4dd6ab7b6149be950c60",
      "Inputs": [
        {
          "Id": "3c5c48d5eb2b4c00a0fb2125fb5cbcab",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89f51187a09d4d35b0d5052b680374d1",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc9b314b4f0d46e885de06831757cec1",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2514b1be713c4874b7ce34686b87bfc5",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "7b8e2deb24904979a6aa32004a502ae8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c623db0b9c024a26b8a2855d8fe24960",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nducts = UnwrapElement(IN[0])\r\n\r\nOUT = []\r\n\r\nfor dg in ducts:\r\n\tog=[]\r\n\tfor d in dg:\r\n\t\tfor c in d.ConnectorManager.Connectors:\r\n\t\t\tog.Add(c.CoordinateSystem.BasisX.ToVector())\r\n\t\t\tbreak\r\n\tOUT.Add(og)",
      "VariableInputPorts": true,
      "Id": "88f2bd2290fe4bd896ca5978875d1e77",
      "Inputs": [
        {
          "Id": "0600fa38f0694a2c95a08edcefae68b2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2de306e3e98349cd96e713683e14e9e8",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "764f98a0b6ea4860bccd8e912a6f1a67",
      "Inputs": [
        {
          "Id": "b9d84df946744523b624547c058b28a1",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b60ce6ae027b4faa8cc9e3a3f8564e97",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b8207d9bd4fb4318b2dbe3d9abda549e",
      "Inputs": [
        {
          "Id": "66f584f20a9b4607b7d0279bf3a3fa6a",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "627aa14c4d764126964b97677cb92705",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ccd1955e667a49fab5f3d85210cb6431",
      "Inputs": [
        {
          "Id": "c5d8550df60f4371bb565d40b0173c2d",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b432753864964eee95974bd571daa1d0",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "40d16ad077ca47e091b638d11ab4e118",
      "Inputs": [
        {
          "Id": "5cdca0f3a09b4c998a664d3af58c704a",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06ed1a39f3e74fec821893d04006d1ce",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "247769710063429798951dc78aca04b5",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7e7a2726044442ba30b2a9ac4db87fd",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "8fd7983c852540dcb00fe1171e052a46",
      "Inputs": [
        {
          "Id": "96a4c4be548f43f39f06b603a17bce18",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d133fdfc371c4c9394e3b10d50d6b8f3",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "ac0fa1e0dbb04d488f67d0ee7806c27f",
      "Inputs": [
        {
          "Id": "b52cc0042cd6468d9315692077eb5b3a",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57224162b2394fcba183cef80aa95628",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3bdf1c5da729419a8b5a2179aef287eb",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc98e0bbb61040e29149e91f20c19502",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "2dc17ad3052a4266b0b5a34afc3739ff",
      "Inputs": [
        {
          "Id": "2e21c12acb3d4a7c80706025a518c854",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8e77a8c04664cfa80d462b5d44d81d3",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb2866c441f34931a0443ab7230fec82",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9194611cc5444918efd1e02a2e33c2a",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "a661a69e4e01439f83a58a3d6e9d92cf",
      "Inputs": [
        {
          "Id": "072a74ab05624f08bea5f22c7611fbc4",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b402ee96f2894651ab54d1d592d027a2",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a26c7efc379b41a39523e3966f1f3293",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa6b2fa1be0e4740a9de9400f91c1e8a",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "7af30a12bac44952807a1da7a6b6a067",
      "Inputs": [
        {
          "Id": "576cee7d519344fb9866929f6483bf85",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd01fef27970441488bc4a88fc5a72c5",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a82bf4990e354ec8ac74f4c353d6b198",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6c011486c9a47de9176043a3ccf7078",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "60af0bfa21c041e4b25d0ff420f9be95",
      "Inputs": [
        {
          "Id": "4d764a541d764c3fbd470a9c806d41ee",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d39b260f213b49bb90b5b857fb8e0d85",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "acb41e0836c54c9da3ac31a280fd55c1",
      "Inputs": [
        {
          "Id": "20f19657f4a940b29d62d6afd4d9b310",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67b1080f32094b039050d7db291396e5",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nfs = UnwrapElement(IN[0])\r\nop = Options()\r\nop.View = doc.ActiveView\r\n\r\nOUT=[]\r\n\r\nlines = IN[1]\r\ncss = IN[2]\r\n\r\nTEST=list()\r\n\r\nfor i, f in enumerate(fs):\r\n\t\r\n\tge = [list(f.get_Geometry(op))[-1]]\r\n\t\r\n\t#TEST.append(ge)\r\n\t\r\n\tfor g in ge:\r\n\t\ts = SolidUtils.CreateTransformed(g,css[i].ToTransform())\r\n\t\tgroup=[]\r\n\t\tfor c in lines[i]:\r\n\t\t\ttry:\t\t\r\n\t\t\t\tres = s.IntersectWithCurve(c.ToRevitType(),SolidCurveIntersectionOptions())\r\n\t\t\t\tif res.SegmentCount>0:\r\n\t\t\t\t\tgroup.Add(res.GetCurveSegment(0).ToProtoType())\r\n\t\t\t\telse:\r\n\t\t\t\t\tgroup.Add(None)\r\n\t\t\texcept:\r\n\t\t\t\tgroup.Add(None)\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\tOUT.Add(group)\r\n\r\n#OUT.Add(ge)\r\n#TransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n\t\r\n\t\r\n\t\r\n\t\r\n#TransactionManager.Instance.TransactionTaskDone()\r\n",
      "VariableInputPorts": true,
      "Id": "00609c42d99d40148445697c5fe997b5",
      "Inputs": [
        {
          "Id": "288c8850598d4065af1deb07fce46ecd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d729791628fd4f3195820171738a845c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc615b0dd4a7427faa10aedd7796726b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c5f544d05924a6cb392b3383f19992d",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.TotalTransform",
      "Id": "3849a2a31cc24850b09cfb60d4b72a2d",
      "Inputs": [
        {
          "Id": "fa4f93cbe77e41de907ded39c09c6304",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7662a0f68bef4321970ac257fd545fa5",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total transform of the RevitLinkInstance from where this LinkElement derived.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.TotalTransform: CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a=tochnoct;\nr=razdelitel;\n\n\nMath.Round(Point.X(x)/a)*a+r+\nMath.Round(Point.Y(x)/a)*a+r+\nMath.Round(Point.Z(x)/a)*a+r+\nShirina+r+\nVisota+r+\nGlubina+r+\nYgol;",
      "Id": "a47a153f1c6d4a3bb59aa36be931a37d",
      "Inputs": [
        {
          "Id": "bc5a3a73282240b39e201b8ce2569bb7",
          "Name": "tochnoct",
          "Description": "tochnoct",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52be9a9936b74f46a64e6a23c041245d",
          "Name": "razdelitel",
          "Description": "razdelitel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d94a86cb6ff4f2e91619da356cacbde",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfc0aead391344af95c6865cd7b52204",
          "Name": "Shirina",
          "Description": "Shirina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3bb107d798f4419b1ea5a84d9fb3019",
          "Name": "Visota",
          "Description": "Visota",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c408c2ac53b0408a80ca04b6e23e8f91",
          "Name": "Glubina",
          "Description": "Glubina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2d88c1e19f64da3970064d191a567c4",
          "Name": "Ygol",
          "Description": "Ygol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45080e5e7797438aa995546015cded61",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7aa6591053a74ea2902e5b1f1c61e46f",
          "Name": "",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76d7c2d4ff5f4ef0a37850431fd98c7e",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c0b319f6c1454e8582fa21d8d262c658",
      "Inputs": [
        {
          "Id": "01b52c7b5ee246d78e9406158d092dbd",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e6fa7b0054849f9b4df6485a203632a",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "4788a7de0e774091a0d7f43a6600e5a4",
      "Inputs": [
        {
          "Id": "ff45eb00c00d417497fe2b6ba77e33be",
          "Name": "item",
          "Description": "Элемент для повтора.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "03940896be7b4b55836f234cebadb371",
          "Name": "amount",
          "Description": "Число повторений.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecaa5260328e47cc901e025a48276b61",
          "Name": "list",
          "Description": "Список повторяющихся элементов.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание списка, содержащего данный элемент, заданное количество раз.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "aa12941ccb4044ed8412a6b278ce27d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d7d1fd0b5624d66b86151a6274897e9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";\n\",000000\";\n\"\";",
      "Id": "b5ca242df79746afb6eaf0bddd2fb88d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c15c850afff349239f22a2e8c571535a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c4b5523b8c244e0b67f7ed4abefc83d",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f283acbfeb0e480da373548d1c9e2d77",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bd6a707be6874f509abf1be1556f9336",
      "Inputs": [
        {
          "Id": "de5dd971e2164b26b8d192bb6886c19f",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf3e2d256df8421d82992a3e3f3eef82",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc9c669c562a4d53a145b1299f8e0504",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "f1e25be755d54affa77192fd275a2748",
      "Inputs": [
        {
          "Id": "e981f6682a6841168ef03391d804da03",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70844180f69e474392e95f3ebb0242a1",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5a97abf8b934c6baf2c67db168063ff",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "133372ca068242fcb641c6701e53073e",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "5b9ec9fa1f4d46398617ca7051c4fe58",
      "Inputs": [
        {
          "Id": "8770d116d19d47a6bc159275125c38a8",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19d7875ba3b3467c8426e9cf0f8e7e42",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "4a916974193347608f91e0578f38ee9c",
      "Inputs": [
        {
          "Id": "278b1826955041e297b7e109bd627043",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1f1c1ba8c5848f6b6b4b7b3f2e030d0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"V0|\"+x;",
      "Id": "60f913373efb4d358fc2dec9db2943b5",
      "Inputs": [
        {
          "Id": "97f7067c626f44158ca35dd6a6cd51a4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b85a3903acd74ced8b3d7d669ef511aa",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "45a597eedae34a82878bb11d54b8488d",
      "Inputs": [
        {
          "Id": "83d40def04d04f1b8dd02ab9b1d878a6",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "9f04aa34a9154fc0b61d293ad92cbd72",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce977202d59c48cea1fbf207f052cabc",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "a3e3a698bad64304a41fd2e8fe510cfd",
      "Inputs": [
        {
          "Id": "9dd98a9cb70641459e638f3850a8c683",
          "Name": "x",
          "Description": "double\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae4ec558a8d44c76bc5a7e0b667cf067",
          "Name": "y",
          "Description": "double\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "154d864e0024415a8cd04b93523d568e",
          "Name": "z",
          "Description": "double\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "428c4679a2a24ab9afff3aa2d9660700",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Построение точки на основе трех заданных декартовых координат\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "1aa9640a8ddf4c289aae2119c2b90b73",
      "Inputs": [
        {
          "Id": "ef534ee2c9394f8490df7df7d4a0cded",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3caedf20be3a4b6ab83402f60e0e280b",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6661aa9c504e40e49626bb717c84b1a8",
      "Inputs": [
        {
          "Id": "21fb43c787f54147b920e68648a7dc3a",
          "Name": "str",
          "Description": "Строка для разделения.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a5f12061de9434982193af886f133bc",
          "Name": "separator0",
          "Description": "Строки, которые (при наличии) определяют конец и начало разделения.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eea1e185e5da4f508a433526c0f788ed",
          "Name": "strings",
          "Description": "Список строк, созданных на основе строки ввода.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Разделение одной строки на список строк, деления которого определяются заданными строками-разделителями.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "de7938411fc94f6294d6ea982f78870b",
      "Inputs": [
        {
          "Id": "dad5e5af023943a68b23ade80d50f9cf",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "46d0e07893d4403083fe56d623da6874",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "446034b50bce425aad95b402c8233a96",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";",
      "Id": "9048e76702874aa1ae457fc283a814d2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ed35b906ad574d6681990fff82827010",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b990ffe35d4b4cfdb64166d024cdd6b7",
      "Inputs": [
        {
          "Id": "58642c84aee54971b0f0c581358c5210",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "e02656ea537a41dc91d9e9c1c63eac46",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf3c282ccd654a34808e1f3636e2db93",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "4d5ac08a00de4b53a5f98fd15188c128",
      "Inputs": [
        {
          "Id": "573d8f28532444e99eed1d3435786bf5",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f932e682a2584f9d9974653346230a77",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Перекрытия_Прямоугольное\";",
      "Id": "b3e6d06e663b4a81a777338c426c59a9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dcc3ce8a0d6b47998c9776f2af4e1699",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "c2a2bb4115274ceea7d9569addfe723e",
      "Inputs": [
        {
          "Id": "67ed09a7f0324df18fe688fcebd6802c",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f41cb9f4b70341268862c94cc081fe19",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Высота\";",
      "Id": "1b015074db53481191ba8c11fca3dad3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c9700dd7675e4bd28a6b22b85150d0dc",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";",
      "Id": "2326c1b55ceb42bcbf544b0304ca4ad1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca5ede3005ae43aaa4ddc3fb997faf4f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n2;\n3;\n4;\n5;\n6;",
      "Id": "3af92355588149848e96109f4763acab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6f56d43570094c628bce9365eb0f5830",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99d59f4e6ac6458a8791bc035f747a30",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33a50e55134b4a4298d38ad15eb4dd7a",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "232332e59d3c4db9921ecffd7b825e2c",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "242de6e1bdae419c803332503be2884b",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae1449141d2442e1a992ae95daf23af6",
          "Name": "",
          "Description": "Значение выражения в строке 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fa948eab2b041f9906d755139afa0fc",
          "Name": "",
          "Description": "Значение выражения в строке 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "89ea1e64e21b4439b15deb317901d378",
      "Inputs": [
        {
          "Id": "709957549068494984bfdd395ab004b8",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "2415c7caf285477a9e4317f2f2afe0b6",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cfa19a162574464b1aedf09beba9114",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "7771088193a145eea71609d8bba841e3",
      "Inputs": [
        {
          "Id": "4de562e9725544d9a89d92d4a2a1152c",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "555d58cff1a342b6b71bd9168f03768d",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "12fd8d54961f472581a1b80da1dc909d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0655da26209b4368964cd6007b8dde1f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "2dee30f61b454b368d3f2f797596ba35",
      "Inputs": [
        {
          "Id": "de2894759b414be7b2c3c665dc165595",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86132157f2574e91b219d9ff3d11250d",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf010a443b984e92a61883a216fb8f6b",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e86d69755ba043d78ca5192075b6e6e9",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "ad9aec8a39654018800a8617053ed8a2",
      "Inputs": [
        {
          "Id": "35bb8cdbeac64e84bb4d7c7b45157ecd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20a846b558ec40398598cf0fc55bf43e",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59c4682168d34e4ea675e58eaee9a7ff",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79d5a10229374cae9015e1be724d9c62",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Глубина\";",
      "Id": "a4f2a287893c457a89cbea3ca7c006ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66deb570c0924b48b5cb295d35e66199",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9b0f939032c44f74a6373a67de8094fa",
      "Inputs": [
        {
          "Id": "1f3a7155aa4e4af490b93b2b7549e2e9",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "f38ff907794a41319b79f130aacd90da",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b713886de284b4b8a5bc3d08bc470f1",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "53f5171857e448eea6dce1ef51ecd45b",
      "Inputs": [
        {
          "Id": "a44d664c22bf40aa8d487dfce9b68929",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a08fcd3bdea84830a245393a000c1aaa",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "5731f7d7d4cf4bc88856b360d2d2fc2a",
      "Inputs": [
        {
          "Id": "2023e7d02d0e473d993abe65f6d5d1e7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "237cf34af85c401d889afeec673d01f7",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdd06ca07a004ca9b8a16bdb06ef7693",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce837f4732e34820b862b5eeae2d0c22",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "8d329085151748098a13210aae2afecf",
      "Inputs": [
        {
          "Id": "8d5670ae90cb490cb795709b9d805b4f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfff8a2bd61c49b3b9777b364ffdff30",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ded258b56b6a4ad8a438f170a6311671",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d5e493f9133456a8d9f87e383f2c2a6",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a401b45c2e464fb5ad90136be28055d4",
      "Inputs": [
        {
          "Id": "ddfc2dd9851c48d796b77c9de9934b23",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "7a19878bc20e4107805dbda4f4274222",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7cd3055dda3488caa6a2900cafb0533",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "632bb83b0e6e4ba385791571afcb3172",
      "Inputs": [
        {
          "Id": "81f45657eb7a472c819dfe48a2b2920b",
          "Name": "str",
          "Description": "Строка для преобразования.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "702686503f7c4f728aacc4777a9d28ce",
          "Name": "number",
          "Description": "Целое число или число двойного типа.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Преобразование строки в целое число или двойное значение.\n\nString.ToNumber (str: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "07a68bd7f237419692b5aa81ee005b3a",
      "Inputs": [
        {
          "Id": "9fa6133fb2fa46079f6a86ab97634b3e",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "d8474039eccb475bb6ec09a8412ee98f",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17d684a02d9d402c8f575c02868620a1",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(x>=-360)&&(x<-180)\n\t?\n\tx+360:\n\t(x>=-180)&&(x<0)\n\t\t?\n\t\tx+180:\n\t\t\t(x>=0)&&(x<180)\n\t\t\t?\n\t\t\tx:\n\t\t\t\t(x>=180)&&(x<360)\n\t\t\t\t?\n\t\t\t\tx-180:\n\t\t\t\tx-360;",
      "Id": "5c921514b77a4b68836a74306f446398",
      "Inputs": [
        {
          "Id": "6696ce8a240b4478877da5f81641a48f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33cfd82878d545ff91cd85f1facf60b9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "4183ae793fea4d6c816b4176b2746dfa",
      "Inputs": [
        {
          "Id": "9897c1025ad747428d3449a8814d530f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1d3b56549f94b919a4ce0d9cc0bd944",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebab988983704394bfcdfe3911705297",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "467c1e9db94f446f9b1a2d25c50ac3e5",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\":Назначение отверстия\";\n\":Примечание\";",
      "Id": "1ad8a088153e4bb5a5e54a56b7d7126c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2ec9e89bdc948f2b2c508e37c33033e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "602a13b86dd3472bb0154e04045a3326",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "3bec285a87464063ad7d099f4e137c93",
      "Inputs": [
        {
          "Id": "6d9a88e6bce94c5c830638ccf328a2b0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac7737caede4433db3ce34c3b7e60acf",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49a0028fe92240dca644e99b14a87a9d",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db07bc5af3144608836fc8bf1bb3e1cc",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Комментарии\";\n\"dd/MM/yyyy\";",
      "Id": "c26fcb7b4f3e414ca9373fa19c164784",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7312b956eeea4968893823364ff8cdad",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8959e5b866404da6b5c70f168a88fa51",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.DateTime.Format@var,string",
      "Id": "f6c0ff5f33d940c0ae709baae24061e9",
      "Inputs": [
        {
          "Id": "69fab7b74cfe4f9aa9f20231ae410e90",
          "Name": "dateTime",
          "Description": "DateTime для формата.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb73ada838a54536b2dd929cc5420889",
          "Name": "format",
          "Description": "Строчное представление формата даты. По умолчанию используется стандартный формат «F», соответствующий региональному стандарту операционной системы: «Вторник, 21 февраля 2017 23:02:43».Чтобы найти полный список форматов, выполните поиск по запросу «Строки настраиваемых форматов даты и времени».\n\nstring\nЗначение по умолчанию : \"F\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f68e0361b40b4ebe80b5dfb57eb88492",
          "Name": "string",
          "Description": "Указанная дата и время в виде строки, в определенном формате.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает указанные дату и время в качестве строки в определенном формате.\n\nDateTime.Format (dateTime: var, format: string = \"F\"): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.DateTime.Today",
      "Id": "f1284f9e80924f4a812d3d149d6091ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e700ef21a1de42119125d98b3543dba6",
          "Name": "dateTime",
          "Description": "DateTime",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Текущая дата в системе и время, установленное на полночь.\n\nDateTime.Today: var"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.FilePath",
      "Id": "304b69893e3345c89c6037dd1fe29968",
      "Inputs": [
        {
          "Id": "ffc4d0e828894ba0a393a97deb9a50fb",
          "Name": "document",
          "Description": "Revit.Application.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e60cb9050a74ed285a4d4549bbc2f32",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Полный путь к документу.\n\nDocument.FilePath: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Application.Document.Current",
      "Id": "3a9e794ec34a44d6a727bcff7de468e8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1bd42a37ba9d4fe49e6c727345c984cf",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение текущего документа\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2682d92c8ac04349bae971875d53356d",
      "Inputs": [
        {
          "Id": "6ee5b9ae860848bbb5ecfe7b0a17e4d9",
          "Name": "str",
          "Description": "Строка для разделения.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37da1292a39e4fcba46438005f7ea0b0",
          "Name": "separator0",
          "Description": "Строки, которые (при наличии) определяют конец и начало разделения.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92b88fa1b8c74c44a3d779c5cf6f73f0",
          "Name": "strings",
          "Description": "Список строк, созданных на основе строки ввода.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Разделение одной строки на список строк, деления которого определяются заданными строками-разделителями.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "\\",
      "Id": "dcf0075d28454660b94555d4f5cac56a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb8c0e22872549568813427ab8ff4196",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "80adb66827ec4ea2ad86befba53a15a3",
      "Inputs": [
        {
          "Id": "d6d0e9c434f5459ba79a59e7efd99efe",
          "Name": "list",
          "Description": "Список, из которого требуется получить последний элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7831da4f94d0472a88e26ba163fc7d91",
          "Name": "last",
          "Description": "Последний элемент в списке.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Извлечение последнего элемента в списке.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "a3a055cee16c41bbbfad68083f2ef178",
      "Inputs": [
        {
          "Id": "b410e1b95d0445b2aa335908c2fdb728",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ab15836092b47909399f070c907438b",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5036813961e84c6fbb2c5e4bf18a8bc1",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56b6c45f648c41e3a73c7d5f83dfaf57",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\".rvt\";\n\"\";",
      "Id": "48df1124b0a04402a66c5ffd9c60f9c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "84cff7b04f3c4685b0ff3675af745bcf",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c28296fb86764bc4aa438644d091e08f",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "b69d59d947304b46a9141692744e523d",
      "Inputs": [
        {
          "Id": "5ae7fa4ecb574560a2e655e84d4c7ffb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33976f7bfd2e4f0cbdb16efc343a1d30",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa6ebdaa9892416c83cdbd5eac5468e1",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c726e36e4454bd4bac3a1ce0375cc26",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "_",
      "Id": "40114be0495b4fbd9b4fbd7ac40a865f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e70f08367bdf4338a2d1beae49c99b7f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c8e00cce9e274f45be0c176ecb1c5c5c",
      "Inputs": [
        {
          "Id": "b2e79ecbd53d40ba9c2be47713988230",
          "Name": "str",
          "Description": "Строка для разделения.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89e1adb9dd08412fbdbe68a904bb731b",
          "Name": "separator0",
          "Description": "Строки, которые (при наличии) определяют конец и начало разделения.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80614c3fac2c4a19bad28df1035e3ab0",
          "Name": "strings",
          "Description": "Список строк, созданных на основе строки ввода.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Разделение одной строки на список строк, деления которого определяются заданными строками-разделителями.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "98b3f4429c4849699a99809669006d1f",
      "Inputs": [
        {
          "Id": "d9d9c2261ef54021908bcbd0e14cefd4",
          "Name": "list",
          "Description": "Список, из которого требуется извлечь элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2fd6a88c4d634b749d786f3123d81dd0",
          "Name": "index",
          "Description": "Индекс элемента для включения в выборку.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03bdcee8f74c49659b2627c3708dc731",
          "Name": "item",
          "Description": "Элемент в списке по заданному индексу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение элемента из данного списка, расположенного по указанному индексу.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "01ae8d13ef6642d6b192c6d2a9b7aa8b",
      "Inputs": [
        {
          "Id": "fad0de840bf947b8bb8dd5c772d32bce",
          "Name": "item0",
          "Description": "Индекс элемента #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3daba3c86eea48349cf515ffa2c23199",
          "Name": "item1",
          "Description": "Индекс элемента #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a45bb2fb066348bd8bf587ca703126de",
          "Name": "list",
          "Description": "Список",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового списка из заданных входных значений"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "b49f4d96c1104ba4bad0d0c9db495e56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "30d59ce819ec42beaf1bbdfd12a6fbe6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e68299b83b754482ac229624421c487a",
      "Inputs": [
        {
          "Id": "33707a4151b34430974fb2da3998a757",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe9176c465eb450ab19ab87bb680b509",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6a099f35091a48aabb52f9dc4b164908",
      "Inputs": [
        {
          "Id": "f18d1f85044f4d3199605a9e42efead9",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0541f8861eb48b98b2aad82e9edd5f7",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f937dda6f90b4225873f2468c8af73e7",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbf199d48060473a9f10c26baee85087",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83a660763a474345b1cb628dbe466f63",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3b44953bcfe94ff0870403480f53b797",
      "Inputs": [
        {
          "Id": "1e39061d39f2483ea7156a3827163320",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ddcd5e30a954a8eaab16dade099a898",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea5bda0fb1ab44eea0f52697de93656a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "406bc09d638c4a358fab010414884657",
      "Inputs": [
        {
          "Id": "3cd9042c7b5244168c6415bf3dbae838",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f41c866b572741c4896fb544f6dfea15",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a80575e3dcd426580cf3b6997896d6b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fb0eabe0b5704cf3a8cc1eedec2e5d56",
      "Inputs": [
        {
          "Id": "db19cb289a0942c69989ea4e7d8ada95",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cdc08091b8641c0b1f85e14538d3caa",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4b6a2bf565146b9988016c3f98f80b2",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "282924c0be8b40d7acf17dcd21f7728f",
      "Inputs": [
        {
          "Id": "14b8109073034b679261ce87fb668af9",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2b6f81ea0ba424391c796cbd6435592",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55dc1f9eb75d43f999eab609285e5830",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3185da8155c446db76b6c9247e890a5",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c09a6eb308f54506be341cbb5c8066d5",
      "Inputs": [
        {
          "Id": "c1c0240933d244ecaeaf89fae8f8618f",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4773caeba6b045e4b4c2cbeca2c82067",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f6d226385c6a4b96977d675fc04e6847",
      "Inputs": [
        {
          "Id": "f7f66ed272234fc0bde8ef11f13b180e",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6460604385cb45f6a2ca61737d5b3f88",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91b72a194508445e9595c3f485a68e00",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ea96a3086f741fc8d0da7936b7d73c7",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "6fdc1600ef844cef960cab5fb5ab8b9b",
      "Inputs": [
        {
          "Id": "419f3301acfe4a30aaea154dd3e8f66e",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28363f6bf7f2472d9291b8d7718fe312",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34b99f17535546b8aac0973a0f4c144d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a07686a4c4c645f8b235ee1697651d94",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f235634fa57341408a255d78ee6f7733",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "c47ed99904484e34b75b7d29c7a6179e",
      "Inputs": [
        {
          "Id": "0de4cabd00f747eeac8fdf525c72de67",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6e5411b2d5e4fc8826f009fc6cd839c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0acfc82891064ad58d60b563734891c0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2fbbc172020487d9d2580d94ed8610d",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "1dd68cc6ed634db8b069fe3bf5c6b047",
      "Inputs": [
        {
          "Id": "03c7ad2ed8eb4ccea9af3ad18baac456",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "126f5a45546647bb8c81a0fa7fdedf2a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93b98654a07e4efd8503eba8ad2eaa02",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c38f52e30a144bdb5a0b72c423cd245",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "82cd8b026bc7430db100ebac197ed99a",
      "Inputs": [
        {
          "Id": "23c56342d9204c208aaed225ebb705a2",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f29c6fb54d9c493d8a7c7f18220ae563",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d613aa72489449aa8e525b345650c418",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9fc1a0551774baabc88fae7b787bb79",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "079eaa6817ad4d25a3ea024ef19aeda3",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;\ny=-x;",
      "Id": "6f5b1c0b27af40cebecf553192a4cd39",
      "Inputs": [
        {
          "Id": "4ba37fe78f0c4a48a56cd087027beb90",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "825538612210483ebc773cc4ba77bebe",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4665fe036cd24d2d93e744e353387589",
          "Name": "",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "35bbcbb25b0e4a5d9e19adfd4545a8b5",
      "Inputs": [
        {
          "Id": "55a699b69d154cc4aca772e1f114df78",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8a15601ca844b91bd5a649615afee72",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "51592b824aab4465b039e0317e1735a8",
      "Inputs": [
        {
          "Id": "4ea6d768caeb4ab8a6ca6e015649ca5b",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31bca941c05148c69681614185358a2b",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f4b0a38ee904cd097a6a62e74fbb68f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.OfCategory@var,Revit.Elements.Category",
      "Id": "be0282af998b4b51910888e206edf2f7",
      "Inputs": [
        {
          "Id": "cae09ddb5ef04e51a25d3e64906eab9b",
          "Name": "linkInstance",
          "Description": "Input the Revit link instance.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30f1d20f744d41f887f9f3d22f4c5f4e",
          "Name": "Category",
          "Description": "Input the Element Category.\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4aeee16a41e44fb987e26e02ad02fb9f",
          "Name": "LinkElement[]",
          "Description": "LinkElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get LinkElements from a Revit LinkInstance by Category. LinkElements are optimised for use with BimorphNodes Element and BoundingBox nodes and are compatible with all nodes that accept Elements as inputs.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.OfCategory (linkInstance: var, Category: Category): LinkElement[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 390,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "9e4f540592d34f33b1c2a8316a2ada41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9509f3b5b29b4a6aaedca4c8b1cc4470",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Element",
      "Id": "df9a1910cfe74742b709e0418acc2e2a",
      "Inputs": [
        {
          "Id": "ed38655e693c4d37b4c379901ab2e6ac",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8da9ebc155c145a9b1460aa8adba41fd",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element stored in this LinkElement. Use the Element with any nodes that are incompatible with the LinkElement.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Element: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetFamily",
      "Id": "a8b6fedd5dd8499cbc70e1427fd1e897",
      "Inputs": [
        {
          "Id": "f5b8b5825bb942cc91bf1e13b9b05ea2",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4d522cbd93f4d96af5b5061e9da496a",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение семейства для данного экземпляра семейства\n\nFamilyInstance.GetFamily: Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "b5b2373c77a44059a52c4838f129adbd",
      "Inputs": [
        {
          "Id": "39ad45ff86904341afc252fa50c09adc",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f766b57ec9d419387e9c66708d6fddb",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,n==\"(Отверстие) Перекрытие\")[\"in\"];",
      "Id": "d983e51a1440412a90aae656b308598a",
      "Inputs": [
        {
          "Id": "37a1778a3d7347b09ff307a6596cc739",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8531475c8d5f493d911ea771304e461a",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "488afb6080544e03abe5bcc538f21645",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "256cd1f8fd244b85a4eac4a976ec396c",
      "Inputs": [
        {
          "Id": "250e3858b87c484ba93895b16d639b9c",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0ae1ed3959747e588c90a64888ff7a4",
          "Name": "Host",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlink_walls = IN[0]\r\nwalls = UnwrapElement(IN[0])\r\nidwalls =IN[1]\r\n\r\nallid= []\r\nOUT =[]\r\nfor wall in walls:\r\n\tallid.Add(str(wall.Id))\r\n\t\r\n# Разместите код под этой строкой\r\nfor wallId in idwalls:\r\n\twallId = str(wallId)\r\n\t\r\n\ttry:\r\n\t\telementId = allid.index(wallId)\r\n\t\tOUT.Add(link_walls[elementId])\r\n\texcept:\r\n\t\tOUT.Add(link_walls[allid.index(str(idwalls[0]))])\r\n\r\n\r\n\t\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "ff99aca516c04ed99d29e829a79c6af3",
      "Inputs": [
        {
          "Id": "118c7d9c0f0741c3acd996e643f686a5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bfb2453ac8248d69fbc19d5cffd61e7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0028342d0cd948f4af79f3e61f71b6df",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "d6a5438a67df4d368a8516ffc143d187",
      "Inputs": [
        {
          "Id": "389cc7a5af654590bac1e5d16eb8895a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4877fc6d2ee42c1819fea351fe31b0f",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение идентификатора для данного элемента\n\nElement.Id: int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Location",
      "Id": "15c6456813fc41db9456baa4b86139b4",
      "Inputs": [
        {
          "Id": "a331e383f9034c72b79e8986a8adbb9f",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d259c42237148d5879bedf5a12697f4",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the location of this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Location: Geometry"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= UnwrapElement(IN[0])\r\notv_locs1 = IN[1]\r\ndelta = 0\r\notv_ccs_angle = IN[2]\r\notv_depth = IN[3]\r\n\r\notv_locs = []\r\notv_rot =[]\r\notv_width =[]\r\notv_lenth =[]\r\n\r\n\r\nOUT=[]\r\n\r\n\r\nfor otv in otv_locs1:\r\n\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8)\r\n\totv_locs.Add(pO)\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\r\n\r\ndef surfase(pO, angle, width, len, delta,Ez, el):\r\n\tOE = float(width)/2 \r\n\tOF = float(len)/2 \r\n\tpoint_list = []\r\n\t\r\n\tEx = pO.X * 304.8 + (OE+delta)*math.cos(math.radians(float(angle))) \r\n\tEy = pO.Y * 304.8 + (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\t\r\n\t\r\n\tTx = pO.X * 304.8 + (OF+delta)*math.sin(math.radians(float(angle)))\r\n\tTy = pO.Y * 304.8 - (OF+delta)*math.cos(math.radians(float(angle)))\r\n\t\r\n\tFx = pO.X * 304.8 - (OF+delta)*math.sin(math.radians(float(angle)))\r\n\tFy = pO.Y * 304.8 + (OF+delta)*math.cos(math.radians(float(angle)))\r\n\t\r\n\tGx = pO.X * 304.8 - (OE+delta)*math.cos(math.radians(float(angle)))\r\n\tGy = pO.Y * 304.8 - (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\t\r\n\t\r\n\tCx = round(Ex + (OF+delta)*math.sin(math.radians(float(angle))),3)\r\n\tCy = round(Ey - (OF+delta)*math.cos(math.radians(float(angle))),3)\r\n\t\r\n\tBx = round(Fx + (OE+delta)*math.cos(math.radians(float(angle))),3)\r\n\tBy = round(Fy + (OE+delta)*math.sin(math.radians(float(angle))),3)\r\n\t\r\n\tAx = round(Fx - (OE+delta)*math.cos(math.radians(float(angle))),3)\r\n\tAy = round(Fy - (OE+delta)*math.sin(math.radians(float(angle))),3)\r\n\t\r\n\tDx = round(Tx - (OE+delta)*math.cos(math.radians(float(angle))),3)\r\n\tDy = round(Ty - (OE+delta)*math.sin(math.radians(float(angle))),3)\r\n\t\r\n\t\r\n\tpoint_list.append(Point.ByCoordinates(Ax,Ay,Ez))\r\n\tpoint_list.append(Point.ByCoordinates(Bx,By,Ez))\r\n\tpoint_list.append(Point.ByCoordinates(Cx,Cy,Ez))\r\n\tpoint_list.append(Point.ByCoordinates(Dx,Dy,Ez))\r\n\tsurface = Surface.ByPerimeterPoints(point_list)\r\n\t\r\n\treturn surface\r\n\t\r\ndef surfaces(elements, locs_list, rot_list, width_list, lenth_list, delta, tz_depth):\r\n\ttest =[]\r\n\tsufraces_list = []\r\n\tfor i, el in enumerate(elements):\r\n\t\ttest.Add(i)\r\n\t\tpO = locs_list[i]\r\n\t\tangle = rot_list[i]\r\n\t\twidth = width_list[i]\r\n\t\tlen = lenth_list[i]\r\n\t\tif el.Name == \"(Отв_Задание)_Перекрытия_Прямоугольное\":\r\n\t\t\tdepth = float(tz_depth[i])\r\n\t\t\tEz = pO.Z * 304.8 + depth/2\r\n\t\t\t\r\n\t\telse:\r\n\t\t\tdepth = 0\r\n\t\t\tEz = pO.Z * 304.8\r\n\t\tsufraces_list.Add(surfase(pO, angle, width, len, delta,Ez,el))\r\n\treturn sufraces_list\r\n\r\ndef solid_from_surface(surface, centrP, depth):\r\n\tdelta = depth\r\n\tcentrP = Point.ByCoordinates(centrP.X*304.8,centrP.Y*304.8,centrP.Z*304.8)\r\n\tnorkvector = Surface.NormalAtParameter(surface)\r\n\tnorkvector = Vector.ByCoordinates(norkvector.X*delta, norkvector.Y*delta, norkvector.Z*delta)\r\n\tStartPoint = Point.Add(centrP,norkvector)\r\n\tEndPoint = Point.Subtract(centrP,norkvector)\r\n\t\r\n\tline = Line.ByStartPointEndPoint(StartPoint,EndPoint)\r\n\tline1 = Line.ByStartPointEndPoint(centrP,EndPoint)\r\n\tline2 = Line.ByStartPointEndPoint(centrP,StartPoint)\r\n\tStartSurface = Surface.Offset(surface, depth)\r\n\t\r\n\t\r\n\t\r\n\tperimetrlines = Surface.PerimeterCurves(surface)\r\n\tperimetrcurve = Curve.Join(perimetrlines[0],perimetrlines[1:])\r\n\tsolid1 = Solid.BySweep(perimetrcurve,line1)\r\n\tsolid2 = Solid.BySweep(perimetrcurve,line2)\r\n\tsol = Solid.ByUnion([solid1,solid2])\r\n\t\r\n\treturn solid2\r\n\r\n\r\ndef solids_from_surfaces(surfaces, centrPs, depth):\r\n\tsolids = []\r\n\tfor i, surf in enumerate(surfaces):\r\n\t\tsol = solid_from_surface(surf, centrPs[i], depth[i])\r\n\t\tsolids.Add(sol)\r\n\treturn solids\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_rot.Add(math.degrees(otv.Location.Rotation) + otv_ccs_angle[i])\r\n\totv_depth.Add(10)\r\n\r\notv_lenth = get_parameters_elements(otvs, \":H отверстия\")\r\notv_width = get_parameters_elements(otvs, \":B отверстия\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\notv_surfaces= surfaces(otvs,otv_locs,otv_rot,otv_width,otv_lenth, delta,otv_depth)\r\nsolids=solids_from_surfaces(otv_surfaces, otv_locs, otv_depth)\r\nOUT.Add(solids)\r\n\r\n\r\n\r\n\r\n#OUT.Add(otv_surfaces)\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "09edf9e6789545bcacaf30486e1a9b43",
      "Inputs": [
        {
          "Id": "1dee915527b848fc8fef449a8ba1e912",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5335042bac04d28962fcbcc66d09700",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eedccdf9b5644aee8c7fd45d7bd3f574",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d4f23156ce9473aa2df97773689b336",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bacc1d7e0a640a59a26ba8bc78230ab",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.TotalTransform",
      "Id": "6d2c5e4f82aa4212a51e97c095633c84",
      "Inputs": [
        {
          "Id": "f0f3406163574e6e98f6ebc9915ba60c",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e17ed3241844b98b808d42d5e903dd7",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total transform of the RevitLinkInstance from where this LinkElement derived.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.TotalTransform: CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "0824f835bab44a2fb3e6e1dacba70026",
      "Inputs": [
        {
          "Id": "75e679acc73f4a0ebbb8f38f479d6215",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51327b1dcfc5435a91e2aae4ad0eb3e6",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "817ce0684c4d467a879768cb800682b2",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4846084c5e064a85b2e918325baf4393",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "37e07290807443ecadf25e769bb99fb2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e6f92df41404318904655902a1a827e",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "bdc4eba24b0f4c4eb44436e74e014d9b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f5b5e75081834cdb9ee51b153355265c",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.XAxis;",
      "Id": "9b50b218e1f84a579a9867fc16364a8c",
      "Inputs": [
        {
          "Id": "9518330c4c84444caf95a829ef9a6f32",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dd6f1c7322c4f2f8f2a8f23ada750d3",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7d3c8739c36d4b759aaf03735aded374",
      "Inputs": [
        {
          "Id": "99b74f4874994478af8d8066cad9796c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "093c893f06b74da68866ad1a5990c6f4",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f13fbb81ce2f4800818a290df9dc62e6",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Толщина\";",
      "Id": "e15d17bb24c348a5aa2a68bd967fbd3a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f99016fdc0354e72824459f001407675",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import Floor, Element\r\n\r\nfloors = UnwrapElement(IN[0])\r\nOUT = []\r\n\r\nfor f in floors:\r\n\tif f.GetType() == Floor:\r\n\t\tOUT.Add(f.FloorType)\r\n\telse:\r\n\t\tOUT.Add(f.Symbol)",
      "VariableInputPorts": true,
      "Id": "62fbcccf51934d1e985d214cf20e4814",
      "Inputs": [
        {
          "Id": "3f50bf65c8894980879bc3b194c7b81a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1e65ca67984491298115557a6357d54",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Element.IntersectsSolid@Autodesk.DesignScript.Geometry.Solid[],Revit.Elements.Element[]",
      "Id": "e688c581f2eb46ebba25f653f6ae5036",
      "Inputs": [
        {
          "Id": "fb7146c03a644524b984ce40b5ce7e28",
          "Name": "solids",
          "Description": "Input a list of solid objects to perform the interference check.\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "026c587d11974226b7985044fcc5ab61",
          "Name": "elements",
          "Description": "Input a list of Revit elements to test for interference against each of the solid objects.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae68f987e47d45f7b85a3a8a3fd2311b",
          "Name": "Element[][]",
          "Description": "Element[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d9e62ece82c4183b4e025b4b50d9a85",
          "Name": "intersectsWith[]",
          "Description": "Solid[]\r\rMap the indices from this list to the corresponding indices in the Element[][] output to group the clashing elements.\r\rVisit bimorph.com/bimorph-nodes for support",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "189af7ed66504b1387c8e66d00da4929",
          "Name": "exceptions[]",
          "Description": "int[]\r\rReturns indexes of any solids that fail solid conversion by the Revit API Shape Builder and cannot be processed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds intersections (clash detection) between Solids and Revit elements. Elements that intersect a Solid are ouput into sublists.\r\rThe node is optimsed to output rapid results up to 99.5% faster than any other intersection technique.\r\rThe exceptions output returns indexes of any solids that cant be processed by the intersection function.\r\rUse IsElementSupported to check that elements are supported by the node.\r\rVisit bimorph.com/bimorph-nodes for support\n\nElement.IntersectsSolid (solids: Solid[], elements: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "bd55397db5ee44c0b8060c45b641e395",
      "Inputs": [
        {
          "Id": "a08d1ed43f6c47d38d4b65cc577cac50",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9beefc7479084486b007d8098556724a",
          "Name": "Geometry",
          "Description": "Геометрия местоположения",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение местоположения для имеющегося элемента\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.SolidIntersection@Autodesk.DesignScript.Geometry.Solid,Autodesk.DesignScript.Geometry.Curve[],bool",
      "Id": "664a62acc7b149fbb4175a32cffb3c52",
      "Inputs": [
        {
          "Id": "d65214a1291a4fea95134669a0999bfe",
          "Name": "solid",
          "Description": "Input a solid or list of solids.\n\nSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b67e2b7cb6714b7690585294cb673888",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect the solid or solids.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d41c3918316643a4af6a1f290916b719",
          "Name": "invert",
          "Description": "True to return curve segments outside the solid. False to return curve segments inside the solid.\n\nbool\nЗначение по умолчанию : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "731f6674f0044b388546e8556b626285",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61e1d8c88ffe4e2a969d8cd1a8da7ee3",
          "Name": "exceptions[]",
          "Description": "int[]\r\rReturns indexes of any curves that fail the intersection function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersecting curve segments between a solid and a list of curves. Setting invert to true has the reverse effect and trims curves that intersect the solid.\r\rThe exceptions output returns indexes of any curves that fail the intersection function.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.SolidIntersection (solid: Solid, curves: Curve[], invert: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "fad890ba3106459582a2a43499bd7cec",
      "Inputs": [
        {
          "Id": "3c6786d37c1b46aaafdfd9428dda82a1",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6519b31dfea145fbbfea39be35e2dae4",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "840ad134fbe24b80aaa374013c48f304",
      "Inputs": [
        {
          "Id": "09b9c4acf26b41b4ad66b94be56f5bde",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f46511e5625471b9a7d24fd12580790",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddb3b497fec04e669cfc3bc4c60a350f",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3deb60ed0ee444889d94fb068e905adb",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "5936cd847d84436cbd3f7b77962c6ff3",
      "Inputs": [
        {
          "Id": "dcce3013654d420b9761b98246433406",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ab58a852b4042138daec75883edf2f1",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c7d8c7af62d4023b8f4baa673fff8ce",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b3fd3f5cdb946e2b39013238d8fc54d",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "fbccfc5e177f4966bd43a1601feb38a8",
      "Inputs": [
        {
          "Id": "974066043bf14b87abcf12199429061c",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32b1a370a7514498b5aa3152609c8cc4",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a=tochnoct;\nr=razdelitel;\n\n\nMath.Round(Point.X(x)/a)*a+r+\nMath.Round(Point.Y(x)/a)*a+r+\nMath.Round(Point.Z(x)/a)*a+r+\nShirina+r+\nVisota+r+\nGlubina+r+\nYgol;",
      "Id": "25f84e7453224e319262ec554f8eb1af",
      "Inputs": [
        {
          "Id": "0cbd395499354c2cbe5da6f0408882f2",
          "Name": "tochnoct",
          "Description": "tochnoct",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab05c050d759429b8cc3e1c2363a191f",
          "Name": "razdelitel",
          "Description": "razdelitel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16cd11b166e64bb2af7c0773dd9bd530",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c89414ab5c7d49308855987bedf6ed5c",
          "Name": "Shirina",
          "Description": "Shirina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e9f0618c32e42d1a7d3451c01ecfa50",
          "Name": "Visota",
          "Description": "Visota",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c23061c5680645b9bb0107aac8afc722",
          "Name": "Glubina",
          "Description": "Glubina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "014415e98f5b4e3095a9f32d79b5e3d1",
          "Name": "Ygol",
          "Description": "Ygol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d59b269d1114e009328604346ee7e16",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5167977f7a1e4d1eab45d7a24e8f2ca6",
          "Name": "",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7678c4807454fcc9946351a000d2aa6",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "d23b6e6749ef4f7da732851b140b4636",
      "Inputs": [
        {
          "Id": "283d0818554e43a3b88841ebe590abc4",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d603db21663e4f9d9ddc226f2bb7fba1",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "96e90ebd376545c9a948ea94e21cbb26",
      "Inputs": [
        {
          "Id": "f3b6f67733da44e1938bf9fc2d275c4c",
          "Name": "item",
          "Description": "Элемент для повтора.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "29ce9d10db414415b843b9c58c5a2fff",
          "Name": "amount",
          "Description": "Число повторений.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0281e05b42d740f3bee0dec3fa339e6c",
          "Name": "list",
          "Description": "Список повторяющихся элементов.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание списка, содержащего данный элемент, заданное количество раз.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bf3afa4410bd4d50b08402c29b08ba22",
      "Inputs": [
        {
          "Id": "94a75d1102cc4a46ba2059ff56ad040d",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "607579ebf397408a8d9fac0aba9f39e6",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80d4a5f2a3e1431e8aa15a1f916a70d3",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "b56d6c3f9f2042e8b793cb03a70c20a6",
      "Inputs": [
        {
          "Id": "f3e32ad53bf64d5597de0f067defdce9",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "511e607e56ee4942afe212a5618c7178",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "197f945ec1b946c4b7bcd83e901fd8ef",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b878de81b816498c8765117a9b38f23a",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "ada9fc336c914338b6c7df3ec7ff5b89",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "140deeb007c04a2ba0903cabc15b9d10",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";\n\",000000\";\n\"\";",
      "Id": "706ce5a440c3422dbac6b10f4e4ffd07",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21888fab6dec4d1a8be7444e462190c5",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c085dcffad97419882a4ae7e390e65eb",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9318042d537e468f83dee45415e13e33",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;\ny=-x;",
      "Id": "288e0840051c4183afff79bb862ae9c2",
      "Inputs": [
        {
          "Id": "70bfcff3156f4e65bcf3852e11b446d3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "891c675ce63c4eab91a31b270113a10d",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe4c4483ab4b496fb1a1a8e3ba66b081",
          "Name": "",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(x+60);",
      "Id": "091df06bfa664cb69350dfd1e1197a55",
      "Inputs": [
        {
          "Id": "bfa0ac3457384fb8888a626842069768",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a281c7a4870b4081bf1699972043dd6e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(x>=-360)&&(x<-180)\n\t?\n\tx+360:\n\t(x>=-180)&&(x<0)\n\t\t?\n\t\tx+180:\n\t\t\t(x>=0)&&(x<180)\n\t\t\t?\n\t\t\tx:\n\t\t\t\t(x>=180)&&(x<360)\n\t\t\t\t?\n\t\t\t\tx-180:\n\t\t\t\tx-360;",
      "Id": "84057d7144ed4a3fb1ba9cd767e29a78",
      "Inputs": [
        {
          "Id": "2c45c4b3b78f48c39bea188d8cbbf318",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f784e6963c7c4387abb12da2e3ff4dca",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "5d531c73501f4cf3bc8cd4287a3c6428",
      "Inputs": [
        {
          "Id": "c160bbeb3f4b496a94fae38de313bb1a",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a1221172a1243e28182dac14da76852",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "531e0b7755ee4ad892ebfd37f6d5a92d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2527ee29a9f744438c0e8405f2605dc5",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e89093a6b18e413f90bd31360bf9ffce",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "7987bffb7a364a76bc46ede94d36282f",
      "Inputs": [
        {
          "Id": "56532aee7280427aa157d65e606462b7",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "774bc1dc335b40fd96d08cc0d162899f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3da736f2287431192deeaa93717104f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fd6013b708b4cf1a19d75e5287c67f3",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "4c1d23159f284054ae014e639edf8ce6",
      "Inputs": [
        {
          "Id": "09f380a1adb240a0987bf0eb51bca09f",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "311e03047729408b89d9be22f25a374e",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "290183c3f7fb405eac9cb49f28f09865",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc8b583e726244c58db83fb4073ed28c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c399a66d8ddd4126942734188d17d3fd",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "c85794ea671b4b28adbc19e93c1c3100",
      "Inputs": [
        {
          "Id": "f2c9242f4624401d96e5deda670c125c",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fccf980b9631441b8f92963491476adc",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d1a49a108394d33a8f58ab14c6c8cc0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1acd6906254480fa7165695b3860e08",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "e738301bbcff49f6900da4f05e50dc25",
      "Inputs": [
        {
          "Id": "2407c9ff2f0444e6aa183af71c5d7be3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48ad98f0c20e4cb7be555d2c48a7b57d",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d85125907cb4ab191f71f874db54c1b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Толщина\";",
      "Id": "51536cba159d4e90a702bb91d3267a71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "446c367803b84ad48d1bbaa3fe0dcd7c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "ca4d65c869854443aa71a9eaea9823ac",
      "Inputs": [
        {
          "Id": "4f67722f63994a1ebe57f4a826b52f17",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6588102f0a343e2b18147ba4d9fe1ab",
          "Name": "param",
          "Description": "Параметр для оценки\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26df7857c29740a2a783daec38a6337a",
          "Name": "Point",
          "Description": "Точка",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение точки на кривой при заданном параметре между StartParameter() и EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "14355c5c2db54221800c7512116ba90d",
      "Inputs": [
        {
          "Id": "b6f96cb9e8d04b0f8692b7d016edab79",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfb56a660b66444e8eed74035b68b59f",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36a86416638c499a9302dc559cfa57fc",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a196c5e78cfb4b16805dc7a3f5cc1397",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "104842636160426a977864f0454ef5fd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a4d646412204bc393adea9886803855",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import Floor, Element\r\n\r\nfloors = UnwrapElement(IN[0])\r\nOUT = []\r\n\r\nfor f in floors:\r\n\tif f.GetType() == Floor:\r\n\t\tOUT.Add(f.FloorType)\r\n\telse:\r\n\t\tOUT.Add(f.Symbol)",
      "VariableInputPorts": true,
      "Id": "28f63d483fe14ec98b182e67a4a536e7",
      "Inputs": [
        {
          "Id": "b4c19b438cb74e3bab937c53c36bd6a1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8e4dccce9e54691842f49b3fa59c027",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "9cd87fcda93742f1841d670e8a768caf",
      "Inputs": [
        {
          "Id": "ef6207aea4734742a24d9239a462957f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0eea482eabb421cb14053cc7141ff52",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1acceea62624cee8a4b8c79dfe8d0ad",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "9ba5f6dd21f24454bacb923e33b210be",
      "Inputs": [
        {
          "Id": "01516d727549453882eb93cc81c6b6e6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52a91b3ff380470ab88f2be02d542527",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca998ef19d0a4d4a86e21a5811c29e4e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "93f58a0422924b7ab3e9909fc38bdb32",
      "Inputs": [
        {
          "Id": "8a492f3337b64879810347f120d80f7f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87cf1a283b3447f69507343a46d60f27",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f21ec763056b45d099d24902f44712ff",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "5963687653b1418a98efe3c9ce13cb76",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f190370f841140648edf5d973fb65918",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "63c34532bb2240e5b4cadf44e8ba45f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94ff58edd5c448fba941091e658095c7",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nducts = UnwrapElement(IN[0])\r\n\r\nOUT = []\r\n\r\nfor dg in ducts:\r\n\tog=[]\r\n\tfor d in dg:\r\n\t\tfor c in d.ConnectorManager.Connectors:\r\n\t\t\tog.Add(c.CoordinateSystem.BasisX.ToVector())\r\n\t\t\tbreak\r\n\tOUT.Add(og)",
      "VariableInputPorts": true,
      "Id": "dd3c4706dfe94e529f105dbb623df5d0",
      "Inputs": [
        {
          "Id": "143526ad715547858c73bfccc9c451de",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5913cc3c440a4e539102961dca8b4b8c",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";\n\"Высота\";\n\"Диаметр\";",
      "Id": "2945799a9bdd4eefbf0dcee6180a227b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7cd69997f324d358a6420a106344c5e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4d26afccaa24d35aed3deba412e04fe",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e43784c2f774c63ade9d52775d33755",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "90c0f265565d4b419beafd7ddba101ce",
      "Inputs": [
        {
          "Id": "1cf79dce768f48df855161764bd1ca83",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94a16de1de9e4b369526f30bdb979ac5",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8aeb374425eb44c68c2398f484091672",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a7edb86c53d14661b1f8c149eb1f4a36",
      "Inputs": [
        {
          "Id": "6c051affa9b14d7f8ab01edba4ef2819",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc65dd6a372c475db862291551036fe7",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a13ef7c343143e5b844991e1e653a88",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "6c4caaa2759c4d4099680894b5c1a220",
      "Inputs": [
        {
          "Id": "7efa6abadd1d4a5cb7b142e9ff440f6e",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7df902777db94eb984c46a7a54b0e839",
          "Name": "Host",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlink_walls = IN[0]\r\nwalls = UnwrapElement(IN[0])\r\nidwalls =IN[1]\r\nlink_walls_angle = IN[2]\r\nallid= []\r\nOUT =[]\r\nfor wall in walls:\r\n\tallid.Add(str(wall.Id))\r\n\t\r\n# Разместите код под этой строкой\r\nfor wallId in idwalls:\r\n\twallId = str(wallId)\r\n\telementId = allid.index(wallId)\r\n\tOUT.Add(link_walls[elementId])\r\n\r\n\r\n\t\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "87b238f940e24701bc5b24c4f778461d",
      "Inputs": [
        {
          "Id": "1ce232dc99794b9e86a1f9ae3971c88d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7850a3cf529040fcbe90f39383f9f83d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e501467169924a8785cbc458830268de",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15322567778249de9b7bae9012e8a48a",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "86c48aa3a1994934a13021e5e165052b",
      "Inputs": [
        {
          "Id": "25522ea4247148d284b510bf4701afff",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1bfe598d118441294247824671a590a",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение идентификатора для данного элемента\n\nElement.Id: int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fb6604773fe144a98ebb2600caf3db86",
      "Inputs": [
        {
          "Id": "51db98429c8649fc92d75923994d88a9",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e664001c40b24d48a43ec796dd8543c1",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "251fb69ae4a944ce8891f92e8a212592",
      "Inputs": [
        {
          "Id": "08d125053fc440b7aaab7e47538e2776",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "394c8dd8acee4539b79b9b4aea7ea59a",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "84c49d29bb934e95aa54550cdb416bc6",
      "Inputs": [
        {
          "Id": "b6c520342a6d46e28cba303e0c428414",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0788936dc9a4e3cb9c7666e6b34dcd3",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13b5c178af7642d0ba13436c5c733d17",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0707fb5cdafd405190092e3886781ca6",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "c50afd88fea24b7fba984b338c3464ba",
      "Inputs": [
        {
          "Id": "f9f73be7f835480ab9dc62b544dae369",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3b145047afa4d22b46a412328403d07",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae93ce0e5cc94355b40c7388b194227d",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87a431488323423b8a88ce30d27e2879",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "9634141d787441cf989125861005c483",
      "Inputs": [
        {
          "Id": "45dc5a0e7e1b4f90a262fe99e728e9d2",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9354870a49db475fad6d4947e9883e9f",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2485a6d9e0be4a2d8009c3b4376db4c4",
      "Inputs": [
        {
          "Id": "2d09fbe30e9143cea7c477640e830950",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c138d9de35442128ab3692e05c09708",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "45c8186fb1c14625810de3e4cff5cfab",
      "Inputs": [
        {
          "Id": "c016c3319b0146a09042d6577a6181a7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "159af20a09984ae8a679e0f34a7c6d91",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "1a18d0689cc144c3853321825a573d95",
      "Inputs": [
        {
          "Id": "85b4cc4e402044dd9c4ed0c8ce69f40d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d6e6a32d6ac477fb98cf492fe4f7c64",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "4fcaa660b52e4d79880c6edc00445ce1",
      "Inputs": [
        {
          "Id": "744fa7fb82944ce897efa299a39b3c45",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33630ccae1a04f03908e420e6a1ab313",
          "Name": "param",
          "Description": "Параметр для оценки\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de7a7a262c7948f9894ae1f24423fc05",
          "Name": "Point",
          "Description": "Точка",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение точки на кривой при заданном параметре между StartParameter() и EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "2e8586888eb6408681037525303c4574",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e441caf4f9242d4980175e502a411e9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "29d9640a813241f892ff7476d25d2e24",
      "Inputs": [
        {
          "Id": "299378fd704e4ddaa374139aec5f64f7",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "987c4db3211c431fbaf241f4a4abb541",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a847e01b7fe40a6bb8a6c8e9a7a1280",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7e6d1bd31ea24a1db2bd6ddb3e13602e",
      "Inputs": [
        {
          "Id": "c8341458bd9142faa883cf2474bb4573",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9426a2aa306d425186909e386d87b784",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7864165efbab4c1da460be95b027c353",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= UnwrapElement(IN[0])\r\notv_locs1 = IN[1]\r\ndelta = 0\r\notv_ccs_angle = IN[2]\r\notv_depth = IN[3]\r\n\r\notv_locs = []\r\notv_rot =[]\r\notv_width =[]\r\notv_lenth =[]\r\notv_hight =[]\r\n\r\nOUT=[]\r\n\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\r\n\r\ndef surfase(pO, angle, width, len, delta,Ez, el):\r\n\tOE = float(width)/2 \r\n\tOF = float(len)/2 \r\n\tpoint_list = []\r\n\r\n\tEx = pO.X * 304.8 + (OE+delta)*math.cos(math.radians(float(angle))) \r\n\tEy = pO.Y * 304.8 + (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\tGx = pO.X * 304.8 - (OE+delta)*math.cos(math.radians(float(angle)))\r\n\tGy = pO.Y * 304.8 - (OE+delta)*math.sin(math.radians(float(angle)))\t\r\n\t\r\n\tAx = Gx\r\n\tAy = Gy\r\n\tAz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tBx = Ex\r\n\tBy = Ey\r\n\tBz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tDx = Gx\r\n\tDy = Gy\r\n\tDz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tCx = Ex\r\n\tCy = Ey\r\n\tCz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tpoint_list.append(Point.ByCoordinates(Ax, Ay, Az))\r\n\tpoint_list.append(Point.ByCoordinates(Bx, By, Bz))\r\n\tpoint_list.append(Point.ByCoordinates(Cx, Cy, Cz))\r\n\tpoint_list.append(Point.ByCoordinates(Dx,Dy,Dz))\r\n\tsurface = Surface.ByPerimeterPoints(point_list)\r\n\t\r\n\treturn surface\r\n\t\r\ndef surfaces(elements, locs_list, rot_list, width_list, lenth_list, delta, tz_depth):\r\n\ttest =[]\r\n\tsufraces_list = []\r\n\tfor i, el in enumerate(elements):\r\n\t\ttest.Add(i)\r\n\t\tpO = locs_list[i]\r\n\t\tangle = rot_list[i]\r\n\t\twidth = width_list[i]\r\n\t\tlen = lenth_list[i]\r\n\t\t\r\n\t\tdepth = float(tz_depth[i]) - 60\r\n\t\tEz = pO.Z * 304.8 + depth/2\r\n\t\t\t\r\n\t\t\r\n\t\tsufraces_list.Add(surfase(pO, angle, width, len, delta,Ez,el))\r\n\treturn sufraces_list\r\n\r\ndef solid_from_surface(surface, centrP, depth):\r\n\tdelta = depth/2\r\n\tcentrP = Point.ByCoordinates(centrP.X*304.8,centrP.Y*304.8,centrP.Z*304.8)\r\n\tnorkvector = Surface.NormalAtParameter(surface)\r\n\tnorkvector = Vector.ByCoordinates(norkvector.X*delta, norkvector.Y*delta, norkvector.Z*delta)\r\n\tStartPoint = Point.Add(centrP,norkvector)\r\n\tEndPoint = Point.Subtract(centrP,norkvector)\r\n\t\r\n\tline = Line.ByStartPointEndPoint(StartPoint,EndPoint)\r\n\tline1 = Line.ByStartPointEndPoint(EndPoint,centrP)\r\n\tline2 = Line.ByStartPointEndPoint(centrP,StartPoint)\r\n\tStartSurface = Surface.Offset(surface, depth)\r\n\t\r\n\t\r\n\t\r\n\tperimetrlines = Surface.PerimeterCurves(surface)\r\n\tperimetrcurve = Curve.Join(perimetrlines[0],perimetrlines[1:])\r\n\tsolid1 = Solid.BySweep(perimetrcurve,line1)\r\n\tsolid2 = Solid.BySweep(perimetrcurve,line2)\r\n\tsol = Solid.ByUnion([solid1,solid2])\r\n\t\r\n\treturn sol\r\n\r\n\r\ndef solids_from_surfaces(surfaces, centrPs, depth):\r\n\tsolids = []\r\n\tfor i, surf in enumerate(surfaces):\r\n\t\tsol = solid_from_surface(surf, centrPs[i], depth[i])\r\n\t\tsolids.Add(sol)\r\n\treturn solids\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\notv_hight = get_parameters_elements(otvs, \"ADSK_Отверстие_Отметка от нуля\")\r\notv_lenth = get_parameters_elements(otvs, \"ADSK_Отверстие_Высота\")\r\notv_width = get_parameters_elements(otvs, \"ADSK_Отверстие_Ширина\")\r\n\r\nfor i, otv in enumerate(otv_locs1):\r\n\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8+float(otv_hight[i])/304.8+float(otv_lenth[i])/304.8/2)\r\n\totv_locs.Add(pO)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_rot.Add(math.degrees(otv.Location.Rotation) + otv_ccs_angle[i])\r\n\t\r\n\r\n\r\n\r\notv_surfaces= surfaces(otvs,otv_locs,otv_rot,otv_width,otv_lenth, delta,otv_depth)\r\nsolids=solids_from_surfaces(otv_surfaces, otv_locs, otv_depth)\r\nOUT.Add(solids)\r\n\r\n\r\n\r\n\r\n#OUT.Add(otv_surfaces)\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "005654ab32ea462aa6b7074818b62a1c",
      "Inputs": [
        {
          "Id": "190adb808d5c40bebb580d4739f37f5c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94c025f0e1c542b0a936ef8c6021db53",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6df4bbda52a24e98a49313e154d88255",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "254d768742224084a474b2f9ca525a0f",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2d597a2f0e340d3a4a3c8c6683846c1",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Element.IntersectsSolid@Autodesk.DesignScript.Geometry.Solid[],Revit.Elements.Element[]",
      "Id": "0c6dfb9493254b1d9d9034849cae2164",
      "Inputs": [
        {
          "Id": "cb3b8ed6186d4c45b7fa10e491b42d49",
          "Name": "solids",
          "Description": "Input a list of solid objects to perform the interference check.\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86bd3708b7124ae080c925cd2e2faa38",
          "Name": "elements",
          "Description": "Input a list of Revit elements to test for interference against each of the solid objects.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb47ba1c2e7e48b1a92ddbcee5557f1c",
          "Name": "Element[][]",
          "Description": "Element[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9a48d87849446848c5a2fe64f3afdd7",
          "Name": "intersectsWith[]",
          "Description": "Solid[]\r\rMap the indices from this list to the corresponding indices in the Element[][] output to group the clashing elements.\r\rVisit bimorph.com/bimorph-nodes for support",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21ef12228bb1481497553f76c5529cd4",
          "Name": "exceptions[]",
          "Description": "int[]\r\rReturns indexes of any solids that fail solid conversion by the Revit API Shape Builder and cannot be processed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds intersections (clash detection) between Solids and Revit elements. Elements that intersect a Solid are ouput into sublists.\r\rThe node is optimsed to output rapid results up to 99.5% faster than any other intersection technique.\r\rThe exceptions output returns indexes of any solids that cant be processed by the intersection function.\r\rUse IsElementSupported to check that elements are supported by the node.\r\rVisit bimorph.com/bimorph-nodes for support\n\nElement.IntersectsSolid (solids: Solid[], elements: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "d2314620aa1e4c59a73af4585a0be28b",
      "Inputs": [
        {
          "Id": "9bafd953437345da83e2e6f948d10525",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15019f85be804bb2ab72d377511de29e",
          "Name": "Geometry",
          "Description": "Геометрия местоположения",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение местоположения для имеющегося элемента\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.SolidIntersection@Autodesk.DesignScript.Geometry.Solid,Autodesk.DesignScript.Geometry.Curve[],bool",
      "Id": "d0e3454b801e4e12b99d9b900fdec74e",
      "Inputs": [
        {
          "Id": "bf50614c37e541a298729d3d05b4c372",
          "Name": "solid",
          "Description": "Input a solid or list of solids.\n\nSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fef5bd06b5d44ddcb0037b3dbd955a6c",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect the solid or solids.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00d5345569b1479594f3aa1cdc5e727d",
          "Name": "invert",
          "Description": "True to return curve segments outside the solid. False to return curve segments inside the solid.\n\nbool\nЗначение по умолчанию : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da0bfb5732fe43c6a275e555d665b08a",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58570ab0b3cd4b19bf4a49441c3dd85e",
          "Name": "exceptions[]",
          "Description": "int[]\r\rReturns indexes of any curves that fail the intersection function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersecting curve segments between a solid and a list of curves. Setting invert to true has the reverse effect and trims curves that intersect the solid.\r\rThe exceptions output returns indexes of any curves that fail the intersection function.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.SolidIntersection (solid: Solid, curves: Curve[], invert: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a3b49f5410434b7a9bdb53cfd4cb41dd",
      "Inputs": [
        {
          "Id": "7aa0c8d5c4a742e1a8833745deff4775",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5c08991a7af4869a90e1c01e4edab52",
          "Name": "Host",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlink_walls = IN[0]\r\nwalls = UnwrapElement(IN[0])\r\nidwalls =IN[1]\r\nlink_walls_angle = IN[2]\r\nallid= []\r\nOUT =[]\r\nfor wall in walls:\r\n\tallid.Add(str(wall.Id))\r\nOUT1=[]\t\r\n# Разместите код под этой строкой\r\nfor wallId in idwalls:\r\n\twallId = str(wallId)\r\n\telementId = allid.index(wallId)\r\n\tOUT1.Add(link_walls[elementId])\r\n\r\nOUT = OUT1\r\n\t\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "856273a696b442a3b0689958f29540fb",
      "Inputs": [
        {
          "Id": "ea82f5a505dd45c0b9d28b56b8948dde",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9b6d464055c483799f044898a1b1284",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92d3b24276a04434963c3f57b67e3547",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "067bb865306542cf82c9b3bc9b6f6eee",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "33aaf4257f10405480aa66d9c38ef549",
      "Inputs": [
        {
          "Id": "416ec229ec6f47c38d0b15e020ada9ff",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "716fa760ac6f4ee7b2a6bfd82917d10a",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение идентификатора для данного элемента\n\nElement.Id: int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d4b8f850f7f6494d92f32061fe115f95",
      "Inputs": [
        {
          "Id": "8119d8f069494677aafdb0f43b6a8a31",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2bdc0c9be984c1d9d59d467fe9806ef",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Location",
      "Id": "64128be33a884da184f4b0145da1117d",
      "Inputs": [
        {
          "Id": "d11053d8cba84307854f0f19610801b3",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c80f5ea90d1b440e8108ec503c6cd6f9",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the location of this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Location: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.TotalTransform",
      "Id": "6c67a889888f4aa08e4455ccb19897c7",
      "Inputs": [
        {
          "Id": "ec17be1c021b43ae8d15e2e575411652",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80bb9e58b1ee4359b44b25a55c3c383b",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total transform of the RevitLinkInstance from where this LinkElement derived.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.TotalTransform: CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "83f3a0555c414d5488d93b89392be12b",
      "Inputs": [
        {
          "Id": "e15e552d0d964670b4bb4650a4c8e830",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff6049cd93dd49bab475b9757400f251",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcd5c4194115402c8a34b2dc50a9b8df",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04f8cf2fc7f9407ba50d1b4d34cccbb2",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "f53d5b20f96b48fe810cf470894504bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e067972c1f8450a9223abceb013e29a",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "a50542cfd895411789ead0c323cd2fe0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ea66907b1554ad6bc0b1c4e78f6b72a",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.XAxis;",
      "Id": "09a6060fd557401cb2018ef73cdc75e8",
      "Inputs": [
        {
          "Id": "03a5f6d277ce46c281660c2ea3f9de2d",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb6c9565eafc40d0a57b233a54df58ea",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,n==\"Отверстие в стене_Прямоугольное_Глубина\")[\"in\"];",
      "Id": "4b8c0ce91e5844ba98aff29e4fa9ccb8",
      "Inputs": [
        {
          "Id": "1a16d6b08d044151abb66f22f6fe3768",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f310cfdd618e4745887e22a28d1f86a7",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c28271296a24690bf888bde53a5968b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "392f7cf747ca44bfa257b86c6bb66ab7",
      "Inputs": [
        {
          "Id": "dc5fcd03d65142fe960a962edd58df1d",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7150145aa204cb7bee3d013a98c5303",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e7031b051534d3584ad53344c1f3c47",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.OfCategory@var,Revit.Elements.Category",
      "Id": "6ddc341698d64431b6bc3f6086e209fa",
      "Inputs": [
        {
          "Id": "146d47164fe54968a4e30d2cad18749f",
          "Name": "linkInstance",
          "Description": "Input the Revit link instance.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aee67746950c4ec5be65d23c5dd691e5",
          "Name": "Category",
          "Description": "Input the Element Category.\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4aff11d512042dd995438fb3ef47d8b",
          "Name": "LinkElement[]",
          "Description": "LinkElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get LinkElements from a Revit LinkInstance by Category. LinkElements are optimised for use with BimorphNodes Element and BoundingBox nodes and are compatible with all nodes that accept Elements as inputs.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.OfCategory (linkInstance: var, Category: Category): LinkElement[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 390,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "baf090298aba48a3b4d75a1289d96bc8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ee738196fa64631918f1fcefb5f1360",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Element",
      "Id": "cb84839938674c319100b702569d5422",
      "Inputs": [
        {
          "Id": "1fcaac180d454339a683e86a8f9daa97",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edebbc9146b24e59b16e78d900fede0c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element stored in this LinkElement. Use the Element with any nodes that are incompatible with the LinkElement.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Element: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetFamily",
      "Id": "2b9749ac8c1d47eb80d2e4bd6626611b",
      "Inputs": [
        {
          "Id": "3a92d62d1ac140168f71ab2ab719e95a",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ced738df9f8644ae997dfd4edc3a08b1",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение семейства для данного экземпляра семейства\n\nFamilyInstance.GetFamily: Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "46015ca08c2b49a18da36b22f2cb52dc",
      "Inputs": [
        {
          "Id": "6d124d925f884d59b9db920c85635760",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96d24314e2d14a3a9f2b85bde4991412",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nwalls = UnwrapElement(IN[0])\r\nOUT = map(lambda x: x.WallType.Width*304.8,walls)",
      "VariableInputPorts": true,
      "Id": "345a643086944f28807f930499e64069",
      "Inputs": [
        {
          "Id": "36bd67111fa24b7b8a75df952f204fe3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f98d8153f4ad48da9306742adff79264",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(x+60);",
      "Id": "173178d17f13464f9c13f69101b03a2d",
      "Inputs": [
        {
          "Id": "b675e457cf7946c88d80ab1d4cd575be",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f681a3c5fb04c53bfad157485f71a8e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nOUT =[]\r\nwalls = UnwrapElement(IN[0])\r\nfor wall in walls:\r\n\tOUT.Add(wall.WallType.Width*304.8)\r\n",
      "VariableInputPorts": true,
      "Id": "20f92e57ec0a49288bd7fde242790f0a",
      "Inputs": [
        {
          "Id": "66376f52c4c14788b503b6cf13109d0b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68df563d8ec14be8a45fefe52e6fa648",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,n==\"Отверстие в стене_Прямоугольное\")[\"in\"];",
      "Id": "12d46514ab0a408fadc7e1f93a8266dc",
      "Inputs": [
        {
          "Id": "dc716ea3e66143f2aed2de9514051f4b",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a2c90c40c7d444887a5c184e1a84f6b",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81a3d42b6142466ea7f3f3f0d2ae3735",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "f3627d84af074a99babebda65dda3162",
      "Inputs": [
        {
          "Id": "085f401c1a00480baeb25897ff93f922",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57b32e4b741b41edadbc1c1fd5d54ec0",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Направление кривой\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "1940de05fb114007b14adb15015b033e",
      "Inputs": [
        {
          "Id": "33d90b44ab9d45d781a4739b09fc3e7d",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ddfcb4e0ce4e498bb2b1a790db0caee5",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f5a1e74919741e2a2e95393caa1a9cd",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2609206ec0894bd58cc902308e8b6b89",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "ba7f4f1fd10446eb9fa137d9eeb13c1c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8869892c7dba4fb6a8c9fde47eaedc00",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "7be6402fd46c48b1ba766f6b40f17713",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4e4ca982da74093ae991030b7f6e483",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Location",
      "Id": "39e1df2486374e2bb447dd8030a74f02",
      "Inputs": [
        {
          "Id": "8ffeefc246ca44c9bbfa802d740367df",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7919985a9f94fe5b82d962c31f83644",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the location of this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Location: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "17fd1810dd064654a5245b4b3ca3983d",
      "Inputs": [
        {
          "Id": "6e3cea67400d490283b2be5ac858c8c8",
          "Name": "number",
          "Description": "Число для округления.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edf53c46709c4c7182e60eab94531070",
          "Name": "number",
          "Description": "Ближайшее интегральное значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Округление числа до ближайшего интегрального значения. Обратите внимание на то, что этот метод возвращает число с плавающей точкой двойной точности вместо интегрального типа.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ar=Math.Round(a,1);\n90-(ar>90?180-ar:ar);",
      "Id": "cf5d38881e1342f4a289a0ffa38f4585",
      "Inputs": [
        {
          "Id": "819305d989494315beab8e9ebc5a5f2c",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "562fbd7cde4d426b96f2dbf47df06f28",
          "Name": "",
          "Description": "ar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d710637cbc4b4eb5a1001ce6ecc23eea",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleWithVector@Autodesk.DesignScript.Geometry.Vector",
      "Id": "bfe99d54d4224a46b3132e9b1da2f934",
      "Inputs": [
        {
          "Id": "f4b0cf776d7c4901bd784474f97172dd",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21df890c248243d2aeaa6e0251b4cce9",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e01c23560aac4fcbacf0c1ee5d725e10",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 180].\n\nVector.AngleWithVector (otherVector: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Vector.ByCoordinates(v.X,v.Y,0);",
      "Id": "9619da7f0f094efca95df21b241d52f1",
      "Inputs": [
        {
          "Id": "db7af28e3356429a92c93c6110e67586",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9203a2464764207b79016151b7b7d51",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Vector.ByCoordinates(v.X,v.Y,0);",
      "Id": "9fbdd7ce50b84b1db43db6746c995af9",
      "Inputs": [
        {
          "Id": "e3863a27194f4f13898a2af7c3c41159",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fe67b01a0e340d8ac229341b2d0e029",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "132accd759964128a27046952048db25",
      "Inputs": [
        {
          "Id": "e6089536c49d454a95b99407e55530a2",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86da6c1050f7460bb105570bb4bf5714",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Направление кривой\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "c0128977c4424c4d8e114d4d67a94bd9",
      "Inputs": [
        {
          "Id": "d75a6be23f804451a21f3d8451b55d9a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db276a205b8f4990ad66694978b00c50",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f4b577b3f814229bc0f63c3648710f9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "82b625a8c2654c63b20f305c91f494fe",
      "Inputs": [
        {
          "Id": "fb2d990ad11f444b8e20e203957dbc24",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c33817208c87448aabc49d6864855926",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f494e529282043ab8137106539e6bb11",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";\n\"Высота\";\n\"Диаметр\";",
      "Id": "58811c32b18d4b6da69202a81f053218",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc38ad349ad94a6f98576f0022a61b8e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21512c8f61064aa3bf6ef64801593282",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "838b1fda205141c3ac749785cb985df0",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(d!=\"\"?d:x);",
      "Id": "a23d37e01e6945eea71fed62cdf8cc62",
      "Inputs": [
        {
          "Id": "09d8c28c673b4ff8a8f51f90b1956f12",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "633ed5d84d6c40a8ac103b5d429571e4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb6f651abeff43278e3ebbf9b1c48cfc",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "947235aa76e2441d89227d6512aae784",
      "Inputs": [
        {
          "Id": "df415c9d161f4f4490ab9c324c7416a5",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25c5d69708bf4fed962d79006e44701d",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06fcd18903c748a79b193d139ec36e84",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "475c9c9b3d04476fbfe86606aae8f698",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "241bd3874ca1413aa2b7633602e6e9fa",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "12a3e2b0aa23436fac04ba49a8e764a8",
      "Inputs": [
        {
          "Id": "5e839aad19194e4abff80f65d459d466",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e23c1a7484454d328bf7f8235562373b",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "299f1b57be314cb0af3fa71c61bc5267",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "8ddf23d8187c49279192b816dfa0b617",
      "Inputs": [
        {
          "Id": "509618acf21f4e3cbf100aecdb7cc55a",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2251479dd1c84c0d8d0e8d5780100923",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "641505bc0d674024b9d7ff2760885a7e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a6cea5ae01e4f82a268a8a56d0c9d5c",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(w*0.5)/Math.Cos(A);",
      "Id": "14e76ff450994ae8b44080827a0cb729",
      "Inputs": [
        {
          "Id": "c47c58ad355344ee99043074102c59f8",
          "Name": "w",
          "Description": "w",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82007af1962a47029acf3cd549f6d9e0",
          "Name": "A",
          "Description": "A",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0c90209d9444219bf6179891f7f7d5a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(b*0.5)*Math.Tan(A);",
      "Id": "eaab049ea55b4dc9ae869bd9d7cfcc6e",
      "Inputs": [
        {
          "Id": "7166c19068634bafbe6151266444ebe8",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b4fe0323dc248fb81598948eca3688f",
          "Name": "A",
          "Description": "A",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4c5e483f84f4a6dbdc749d544e6d10f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\ndelta;\nx=(bt+mt)*2+delta;\nMath.Ceiling(x/round)*round;",
      "Id": "b62da573324b45d7986fd4b8f42a6000",
      "Inputs": [
        {
          "Id": "e2fd8c7979764c779b42182aa6003e07",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3de3bedcdbe4caeb5fb0f4f290f2d2a",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08566c83d8894bb185de5341080197da",
          "Name": "bt",
          "Description": "bt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9945b008d85449feb9021e6f57ef2836",
          "Name": "mt",
          "Description": "mt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfc412f16479448c915d4b70b4d84d54",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bd2386acdca479dbedbd994a97e4814",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0cebc85964484c4ab0e756a5c8c33e25",
          "Name": "",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfae6dc7aaa248e9a00ae6264ae8fcf3",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a=tochnoct;\nr=razdelitel;\n\n\nMath.Round(Point.X(x)/a)*a+r+\nMath.Round(Point.Y(x)/a)*a+r+\nMath.Round(Point.Z(x)/a)*a+r+\nShirina+r+\nVisota+r+\nGlubina+r+\nYgol;",
      "Id": "122d456250ef4d648b96d8235d1736c9",
      "Inputs": [
        {
          "Id": "86275cef8a354688a9a09aea755cc2c0",
          "Name": "tochnoct",
          "Description": "tochnoct",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "059b01df050d47d087245fc6fbf4f314",
          "Name": "razdelitel",
          "Description": "razdelitel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7979977dd2a946028e7f12d7b7023248",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88789646a74643d0af7d6a561918c784",
          "Name": "Shirina",
          "Description": "Shirina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "596c2dc97c8e4f41afac3e02cb534f58",
          "Name": "Visota",
          "Description": "Visota",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfcb8ab7ff6743279c03605d0eec8372",
          "Name": "Glubina",
          "Description": "Glubina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4593f1559de40fe85180162e7d14099",
          "Name": "Ygol",
          "Description": "Ygol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55d259dfb3c048b0aac9a748dbf42f62",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec6d6401b8a74501990efac8af843cc5",
          "Name": "",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae052461c2914187b7f4e0fcf05643ab",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "299fbd67329242babe436edda5802e50",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c998ab4b365d48c49ee05f8c064068d9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";\n\",000000\";\n\"\";",
      "Id": "8d26dd0bc2314eb48f7cf7585ccd79ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28fb103913fe41e298b110ceb22de7b1",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29486609473e4b3f8fb9ba2ea7a3587c",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c6c1d6974c24650a62f1d05dd8ba9bb",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a142eec1adf24196b745015e2c86b15f",
      "Inputs": [
        {
          "Id": "c980c243f2bb4f5ba7a5bc9428adb691",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86d79ec8010f4482a6890d067158e84d",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c61cbf44dfb14a8283f13cbccb5e1894",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "524de66f2e8e40098352a43a0fce195a",
      "Inputs": [
        {
          "Id": "a53de3be3abe42529dfd06a71c4500f0",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18755aa772d74e75a1ed36b460561d7e",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89ab044485884334a66981970ea2e288",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f8d1bf690b5499ab6a3e0901d48a25e",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "da603602cf3b4bc4a2dbc175f61b91ba",
      "Inputs": [
        {
          "Id": "717c5d28d543478abc93a4c1a92b0dee",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "463f7bd83d2a4e649735c3dafab632c8",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd7494aec59244bbb50accc1ba9498bf",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fee323885ebe4717abcff0d0230b56bb",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= UnwrapElement(IN[0])\r\notv_locs1 = IN[1]\r\ndelta = 0\r\notv_ccs_angle = IN[2]\r\notv_depth = IN[3]\r\notv_families =IN[4]\r\n\r\notv_locs = []\r\notv_rot =[]\r\notv_width =[]\r\notv_lenth =[]\r\notv_hight =[]\r\n\r\nOUT=[]\r\n\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\r\n\r\ndef surfase(pO, angle, width, len, delta,Ez, el):\r\n\tOE = float(width)/2 \r\n\tOF = float(len)/2 \r\n\tpoint_list = []\r\n\r\n\tEx = pO.X * 304.8 + (OE+delta)*math.cos(math.radians(float(angle))) \r\n\tEy = pO.Y * 304.8 + (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\tGx = pO.X * 304.8 - (OE+delta)*math.cos(math.radians(float(angle)))\r\n\tGy = pO.Y * 304.8 - (OE+delta)*math.sin(math.radians(float(angle)))\t\r\n\t\r\n\tAx = Gx\r\n\tAy = Gy\r\n\tAz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tBx = Ex\r\n\tBy = Ey\r\n\tBz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tDx = Gx\r\n\tDy = Gy\r\n\tDz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tCx = Ex\r\n\tCy = Ey\r\n\tCz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tpoint_list.append(Point.ByCoordinates(Ax, Ay, Az))\r\n\tpoint_list.append(Point.ByCoordinates(Bx, By, Bz))\r\n\tpoint_list.append(Point.ByCoordinates(Cx, Cy, Cz))\r\n\tpoint_list.append(Point.ByCoordinates(Dx,Dy,Dz))\r\n\tsurface = Surface.ByPerimeterPoints(point_list)\r\n\t\r\n\treturn surface\r\n\t\r\ndef surfaces(elements, locs_list, rot_list, width_list, lenth_list, delta, tz_depth):\r\n\ttest =[]\r\n\tsufraces_list = []\r\n\tfor i, el in enumerate(elements):\r\n\t\ttest.Add(i)\r\n\t\tpO = locs_list[i]\r\n\t\tangle = rot_list[i]\r\n\t\twidth = width_list[i]\r\n\t\tlen = lenth_list[i]\r\n\t\t\r\n\t\tdepth = float(tz_depth[i]) - 60\r\n\t\tEz = pO.Z * 304.8 + depth/2\r\n\t\t\t\r\n\t\t\r\n\t\tsufraces_list.Add(surfase(pO, angle, width, len, delta,Ez,el))\r\n\treturn sufraces_list\r\n\r\ndef solid_from_surface(surface, centrP, depth):\r\n\tdelta = depth/2\r\n\tcentrP = Point.ByCoordinates(centrP.X*304.8,centrP.Y*304.8,centrP.Z*304.8)\r\n\tnorkvector = Surface.NormalAtParameter(surface)\r\n\tnorkvector = Vector.ByCoordinates(norkvector.X*delta, norkvector.Y*delta, norkvector.Z*delta)\r\n\tStartPoint = Point.Add(centrP,norkvector)\r\n\tEndPoint = Point.Subtract(centrP,norkvector)\r\n\t\r\n\tline = Line.ByStartPointEndPoint(StartPoint,EndPoint)\r\n\tline1 = Line.ByStartPointEndPoint(EndPoint,centrP)\r\n\tline2 = Line.ByStartPointEndPoint(centrP,StartPoint)\r\n\tStartSurface = Surface.Offset(surface, depth)\r\n\t\r\n\t\r\n\t\r\n\tperimetrlines = Surface.PerimeterCurves(surface)\r\n\tperimetrcurve = Curve.Join(perimetrlines[0],perimetrlines[1:])\r\n\tsolid1 = Solid.BySweep(perimetrcurve,line1)\r\n\tsolid2 = Solid.BySweep(perimetrcurve,line2)\r\n\tsol = Solid.ByUnion([solid1,solid2])\r\n\t\r\n\treturn sol\r\n\r\n\r\ndef solids_from_surfaces(surfaces, centrPs, depth):\r\n\tsolids = []\r\n\tfor i, surf in enumerate(surfaces):\r\n\t\tsol = solid_from_surface(surf, centrPs[i], depth[i])\r\n\t\tsolids.Add(sol)\r\n\treturn solids\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\n\r\notv_lenth = get_parameters_elements(otvs, \":H отверстия\")\r\notv_width = get_parameters_elements(otvs, \":B отверстия\")\r\n\r\nfor i, otv in enumerate(otv_locs1):\r\n\t\r\n\tif otv_families[i] == \"(Отверстие) Стена\":\r\n\t\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8)\r\n\t\r\n\telif otv_families[i] == \"(Отверстие) Стена_Глубина\":\r\n\t\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8+float(otv_lenth[i])/2/304.8)\r\n\t\r\n\telse:\r\n\t\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8)\t\r\n\t\t\r\n\totv_locs.Add(pO)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_rot.Add(math.degrees(otv.Location.Rotation) + otv_ccs_angle[i])\r\n\t\r\n\r\n\r\n\r\notv_surfaces= surfaces(otvs,otv_locs,otv_rot,otv_width,otv_lenth, delta,otv_depth)\r\nsolids=solids_from_surfaces(otv_surfaces, otv_locs, otv_depth)\r\nOUT.Add(solids)\r\n\r\n\r\n\r\n\r\n#OUT.Add(otv_surfaces)\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "479f5ffbb3194d9094427d14ed156326",
      "Inputs": [
        {
          "Id": "4a096e339b454e26ac9a7dbaf5eba9fa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a49032ad43bc4f2794e417eefa895d9d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b4dbd9f4cb7460fba418d80f4703aa7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "068c00a9c77149778396065290fd917b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf95fb18ed584c1492829c6efdfe9661",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fda55c8a9bd4bf2a554e5dbab7bc194",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e2c03c4d4e8a4f0ea4fb5ba86eb38de1",
      "Inputs": [
        {
          "Id": "3a1dc8305bac4eb79d99ee858e38cfce",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6cd2f7feab964a29b39fd7cbde30df12",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nwalls = UnwrapElement(IN[0])\r\nOUT = map(lambda x: x.WallType.Width*304.8,walls)",
      "VariableInputPorts": true,
      "Id": "bae354b8bf554c92aff2b93b56fba2e3",
      "Inputs": [
        {
          "Id": "de19705dff9e48688aa9854feed9a94c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c48c0c5cdbd49fc86d19ec687b6d769",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Location",
      "Id": "314fe4ff20294dba907c1112809edeb5",
      "Inputs": [
        {
          "Id": "12fa8665c6bd435db36e6cc45aa00e31",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bac014d3a24b4dd181ec05e7e59bc134",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the location of this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Location: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "e0b1d7435fd5438c8e2727e4838eb4e3",
      "Inputs": [
        {
          "Id": "929ae53761584fb0942d98200fb36fab",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19c576e620c54a71a0812471f1b5c38e",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "733508877ba040809eee3df1edaf393a",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e78a46f890d4f7f9e52a6962d85e7e9",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "944aea5de1924d9383aecb042a93105c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "093bda40828741c694f01783671f5aa4",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "0730df86c8a24d8b9483a84b3e7a10ab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ec1e2b01a6934bdb847805440009dfa4",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x.XAxis;",
      "Id": "855679ca70bc4b0fadf3c1d4796db3fe",
      "Inputs": [
        {
          "Id": "6d6fff3fa9584a66b3f16865397e1b9c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2d1337dafe749d2b7db4af21aa56bce",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.TotalTransform",
      "Id": "30de4aafabbf4b779b7ce8e07939039d",
      "Inputs": [
        {
          "Id": "5af24c44a23b4639a0b8560a836db1ac",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c8899c64489419fb5434ed63b3b021d",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The total transform of the RevitLinkInstance from where this LinkElement derived.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.TotalTransform: CoordinateSystem"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "df9b60b135e542ddb0023fd7f588ba04",
      "Inputs": [
        {
          "Id": "6dda8021e1764f30b7c21bbec61cb75a",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b77004f6fb5440781199cd342faabce",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "3302c7dc8f0b438780dd67dbd5470950",
      "Inputs": [
        {
          "Id": "26d658b5b3524096b9c89212bab5b977",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b070930b78844e680d2bf868fcd042a",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10429c31165146578a4c09963403a580",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,n==\"(Отверстие) Стена_Глубина\")[\"in\"];",
      "Id": "35a1150fcf2d49dbb8d6110ff707cbbc",
      "Inputs": [
        {
          "Id": "4afb6040afab41d3b386dfd007ba1f09",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef908c5ec29546d8b85a68e464a8718b",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff44cd89f2d24a05b58bf24943afdddd",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.OfCategory@var,Revit.Elements.Category",
      "Id": "cf7c9bffbade4eb5868e81af67f76ede",
      "Inputs": [
        {
          "Id": "00043a8bf35847f0aefa587f45ac5efe",
          "Name": "linkInstance",
          "Description": "Input the Revit link instance.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0790d9aca8204390980763ea1ae190d5",
          "Name": "Category",
          "Description": "Input the Element Category.\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "065310d2ac5b4264b4aaa7e86a4e3231",
          "Name": "LinkElement[]",
          "Description": "LinkElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get LinkElements from a Revit LinkInstance by Category. LinkElements are optimised for use with BimorphNodes Element and BoundingBox nodes and are compatible with all nodes that accept Elements as inputs.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.OfCategory (linkInstance: var, Category: Category): LinkElement[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetFamily",
      "Id": "7480c01f59d440b4a5cf3051a656fa94",
      "Inputs": [
        {
          "Id": "6da6bfe2baf14da98113f1448b8020ec",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9d62f66b2f54ac69d881e9f80ce0830",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение семейства для данного экземпляра семейства\n\nFamilyInstance.GetFamily: Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,n==\"(Отверстие) Стена\")[\"in\"];",
      "Id": "9f13199e496147bda3107022e8bc4f93",
      "Inputs": [
        {
          "Id": "7774002e976e43878406614ecbc8cfd7",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "694895f84d884755b01ca5ffbef71c55",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "675942256c174592ad7e6f706bc62a5d",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "3e23185029704c7fb8536c87fe8542aa",
      "Inputs": [
        {
          "Id": "b8695960587d4335aeb2f81e8626c011",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "581c786a62074ee99b3a6473d7ca60b5",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение идентификатора для данного элемента\n\nElement.Id: int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "48cc55f1941446fcae05a9eb6af5f8a4",
      "Inputs": [
        {
          "Id": "51c3ccbfa7064f79a8b5325d296962b1",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52c15e2e163e4e9da3f00983a0022a36",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b0853d2e0384439975ad1a74a2507ab",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 390,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "c373e13b0e6e46ed91fe45de917ac246",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "544524f61d414dd4becf1a1ef9624d10",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Element",
      "Id": "def15f1139ea40709bd0b6d5f3e07c16",
      "Inputs": [
        {
          "Id": "a1a631bdf68b4a1d842b78390d48e19b",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09809a1ede6d4816bcd73ca04a47c233",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element stored in this LinkElement. Use the Element with any nodes that are incompatible with the LinkElement.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Element: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "577050fb1a7e49aeb6245bfcb78993ad",
      "Inputs": [
        {
          "Id": "f100f020cd224d219233054f3a77b9fc",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63f0c795c39f4de88561af320b41d543",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "5c24e9056fe14cb788f7f6ed3b1279fd",
      "Inputs": [
        {
          "Id": "b4594bf8b92d4c52974a0fa6b48702f0",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3397b4c6bf72496eac45688070c0b02d",
          "Name": "Host",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlink_walls = IN[0]\r\nwalls = UnwrapElement(IN[0])\r\nidwalls =IN[1]\r\n\r\nallid= []\r\nOUT =[]\r\nfor wall in walls:\r\n\tallid.Add(str(wall.Id))\r\n\t\r\n# Разместите код под этой строкой\r\nfor wallId in idwalls:\r\n\twallId = str(wallId)\r\n\telementId = allid.index(wallId)\r\n\tOUT.Add(link_walls[elementId])\r\n\r\n\r\n\t\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "fa77cbe8952540d3b92b7a550b54b5e3",
      "Inputs": [
        {
          "Id": "e52e6c2b66b948468b15681240d0ad77",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e26b61bd23040b489001e1c7e27e90a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5df04b34c3df4d5eb658c180cabedc05",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd628939f93c4f71b9380658337686aa",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(l,n==\"Отверстие в стене_Прямоугольное1\")[\"in\"];",
      "Id": "1c8c6c4a5bb1429fb7e85b58a0cb3f4e",
      "Inputs": [
        {
          "Id": "d21bded0ac794a1ca8a5caa816ecb15c",
          "Name": "l",
          "Description": "l",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc93bd427fa64d92bf19d49c063d0fb3",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07ffaaab26704bfb9ed6b61ee6b1674b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "92a5aab22e7942b0a85c860353107745",
      "Inputs": [
        {
          "Id": "63f36f3e062d4b18b2e99757bf38a0e1",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46dc921ece414b2ca0dc75499ebc3b14",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "4e93e63765534480bfed8e9143ed3126",
      "Inputs": [
        {
          "Id": "b1c45c59fddc4fde9d09aab9652aa30a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcfe0958e8ed4d64b7ad2390b2b3dd4f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e376d9b10d744d0bac6c017872c12ea8",
      "Inputs": [
        {
          "Id": "0cdbbb1127bd4b899b42e36c938ee87a",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b61914b632594ac1bb65d5432a444120",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "0f7ecf7c554e4d5cacae1c276963509c",
      "Inputs": [
        {
          "Id": "5a134142fad144b89257fc5e243426b3",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3564f62f1da94e408ac88810f9098103",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "0eafe58b4a7b4978a4c320f337e8cb7b",
      "Inputs": [
        {
          "Id": "208ccdd688cf4d34a87e54fca03d40e9",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a115bdbbf2d4c0e85a8b2655da1c74e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "9dd6a3c0b6fe4a1fad0c3cdc88087c38",
      "Inputs": [
        {
          "Id": "170daff9d7e54446958328c5d5c29d43",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "947f58a036b44df4a2f7bda45b82ffa3",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "58853846e74b44caaa5a18fa7a14b863",
      "Inputs": [
        {
          "Id": "a628d2667dfd401ea6fe0c6b6d5d2ad4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31cb5ee06e5f4341aa0224f2f7860404",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "faa7b3d1534749a08fbaccb7d989d2ed",
      "Inputs": [
        {
          "Id": "1f25fe6c7ed24bb2b6e88f3734be11ff",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04984c12b2d24f6da62d76be6e96c9f1",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "af5bc518213a4f9e9825e3cddbe09822",
      "Inputs": [
        {
          "Id": "97784674299b43218731dedc56919434",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3bce2cd0703b4e48967c05e86f97cec3",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "d291c02860d0406ca74a2931389a0fb8",
      "Inputs": [
        {
          "Id": "f2f96bf0de0248e69516c745148e84bb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c2f329d2b4f43ffb3ea9bf7a7074c6f",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение идентификатора для данного элемента\n\nElement.Id: int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlink_walls = IN[0]\r\nwalls = UnwrapElement(IN[0])\r\nidwalls =IN[1]\r\n\r\nallid= []\r\nOUT =[]\r\nfor wall in walls:\r\n\tallid.Add(str(wall.Id))\r\n\t\r\n# Разместите код под этой строкой\r\nfor wallId in idwalls:\r\n\twallId = str(wallId)\r\n\telementId = allid.index(wallId)\r\n\tOUT.Add(link_walls[elementId])\r\n\r\n\r\n\t\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "2c36a6b07f064b3bb67d9873e0475ec0",
      "Inputs": [
        {
          "Id": "00c1d86036bb402da843b98faac6be5a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f0fc56fa70948baa4e45f735ee89bdd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3043e803760a496ab2b8244920942e15",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49788b6876024ae38609067e8f0d42f7",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "379359733cf647d1b8b555bd81950c72",
      "Inputs": [
        {
          "Id": "c942bbb20fc54ae580eff203ca18556b",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0598f9d0deb49a79d77d81b3187986b",
          "Name": "Host",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "ffecb39657e14fbe969829a63355481a",
      "Inputs": [
        {
          "Id": "bbc03208e896470d815c5814662f15f9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6f8a59624584c03946c1f94c3fd0881",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "ea9a8be311474ef2805683e41a3f5daa",
      "Inputs": [
        {
          "Id": "c1dd9b05411142f6af66a2eeca99a0a6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b4e2a63ec3442339f34c096fc9d220f",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Element",
      "Id": "78985641cdf64d10800d0d7b5ac5cc8b",
      "Inputs": [
        {
          "Id": "7d92bad429e14608aa00eb832db1ebb8",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ee95f6f3ae44014bda466d63260fd4e",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element stored in this LinkElement. Use the Element with any nodes that are incompatible with the LinkElement.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Element: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetFamily",
      "Id": "52192dec8f6c4e45bb6b81e4e976e7ca",
      "Inputs": [
        {
          "Id": "745eb5e5d80c42608491c58dc4576514",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca54dd2143a54a6e95e8f919a1f9270b",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение семейства для данного экземпляра семейства\n\nFamilyInstance.GetFamily: Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "f3e670e0993c43e69dbc6d26639fe0e2",
      "Inputs": [
        {
          "Id": "054c95f3a35640cdb0d74611802f31bd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "794c4a1da5244d029dab0ea6069aa904",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение имени элемента\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Стены_Прямоугольное\";",
      "Id": "65aa028662c8465ebedb0e22aa2c0a13",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c48f0980edc246259cb2b92827c654c0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Не загружено семейство \";\n\"ОК\";",
      "Id": "83223959b7e1404bb788e20ac8569c28",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c9f9e590fab445d843cb3ca50ca9779",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4693a03919ab45c09229c0abbed2d544",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "0b61886050d9437381c3c3765cae1172",
      "Inputs": [
        {
          "Id": "156805c000d74bcf96d6d403ff649fd0",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2eb5e4815614a15af6279fc8d067473",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Family.ByName@string",
      "Id": "48e13c01c0034300b5dfa4130e0b70e4",
      "Inputs": [
        {
          "Id": "fa871d9cda734900bb5ec232910400c2",
          "Name": "name",
          "Description": "Имя семейства в текущем документе\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc65153048654259bddb84a2f87493fe",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение семейства на основе текущего документа при условии наличия уникального имени\n\nFamily.ByName (name: string): Family"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "872286f5f03747e5b92f474b76f07c5d",
      "Inputs": [
        {
          "Id": "cff8e93dd35340c48d248a4bb6289cb0",
          "Name": "Family Type",
          "Description": "Тип семейства.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca6c0ec680b949fc9a3a487a31c49601",
          "Name": "Elements",
          "Description": "Список элементов, соответствующих запросу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенного типа семейства."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "95ed21a250aa4f4d8f8edb7ae3631f0f",
      "Inputs": [
        {
          "Id": "c2e17b05bea84293a76db4cf11fd2e14",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "deecc3bb08db469fbede38e53e040048",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ba435d4687de4bc7a2ad2d85b7b9d5b0",
      "Inputs": [
        {
          "Id": "32749489ab484720a509185c339b5bcc",
          "Name": "test",
          "Description": "Блок проверки",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9315d6795674ada8b425c7b27ef0b8f",
          "Name": "true",
          "Description": "Истинный блок",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e4eabf177fc42819ffc8c857526e6ab",
          "Name": "false",
          "Description": "Блок False",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cd1e7725d83435e956351ee2e94a2f6",
          "Name": "result",
          "Description": "результат",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Условное выражение"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "17b1002ff7404b7c8e3cf0916ecca3da",
      "Inputs": [
        {
          "Id": "7f25346de2b3458e8f94ac8346f8f0ef",
          "Name": "string0",
          "Description": "Список строк для объединения.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f9c515a5792475eb5e7e131ef3ac722",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad8d12903d934b9cbf62313ff962e9ef",
          "Name": "str",
          "Description": "Строка, созданная на основе списка строк.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Объединение нескольких строк в одну строку.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "becab78fd73a45089ce9e5e8bc0f2dd2",
      "Inputs": [
        {
          "Id": "111c0694597a4eeaab736c33868d37af",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3cc8aed8ae84f00b26f0247512c00c2",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92c35bde34134131b04498ac0df7c269",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "2eac51bea13147a4bb11dc60b1728d3f",
      "Inputs": [
        {
          "Id": "015dde98b3f94a6584b4f04fc62da0ea",
          "Name": "x",
          "Description": "Значение X.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9121621b8bcd499788444d81f04f390b",
          "Name": "y",
          "Description": "Значение Y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02c28574a2134791843e4239825aff95",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "X равно Y?\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "all_pastDSCore.List.FilterByBoolMask(el,\n\t\tDSCore.String.ToNumber(\n\t\tDSCore.String.Substring(str,1,1)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t>0)\n[\"in\"];",
      "Id": "cc9b533fc7294422a5373cd266245440",
      "Inputs": [
        {
          "Id": "d5cf4d58c34a4cc282c72362ab01307f",
          "Name": "all_pastDSCore",
          "Description": "all_pastDSCore",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0aa0b9ea33e043319ea9052061868f9d",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd8f92b75e254e8da989141ec896792b",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2db3622df564ec2851b14b4dcf10e0a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "6f540e3ad37f4ce594ea9a2d5e2e8d65",
      "Inputs": [
        {
          "Id": "97323b3c12524f2390e2d0fdd5564feb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94eaa0b7ddf0469ca31415f58373581b",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8aae014f81b4d3b92d4c0f56af13939",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "f4b1fcdda24446ec8e361171eeee6194",
      "Inputs": [
        {
          "Id": "4a5f000773a2482eb45f205584c330f7",
          "Name": "list",
          "Description": "Список, который необходимо проверить на присвоение всем элементам значения «False».\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a935be1eec24a5ab2799cd8380ccf07",
          "Name": "bool",
          "Description": "Присвоение всем элементам значения «False».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определяет, являются ли все элементы заданного списка логическими и имеют ли они значение «False».\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(el,!x)[\"in\"];",
      "Id": "f109a1b926b144f5be9fed2f2e69e81c",
      "Inputs": [
        {
          "Id": "65d6c86ddcdb46a781d764663776428b",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e907d5e212c409ab5356576e0d4c2f8",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9791e63c9d0a4deb9d06c516b60c4f90",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(el,!x)[\"in\"];\nDSCore.List.FilterByBoolMask(el,!x)[\"out\"];",
      "Id": "e7b9bdd3b99248a3acb5caf128eeecf0",
      "Inputs": [
        {
          "Id": "e1480afaea514246aa111bfa275ce309",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7402c4d4ece04c24a654e2a5419b3dfe",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "498e352109a64d778ea78ea7ac0d4084",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d2b4689089744d1a75853b8160121f1",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "0cc5ea531c9d4c128c41bf4858431923",
      "Inputs": [
        {
          "Id": "d00223b6ab18442c90f3d112c2a26d99",
          "Name": "x",
          "Description": "Значение X.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1ca40a90b6b44f49dd8de33eb5d7426",
          "Name": "y",
          "Description": "Значение Y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fae722e2cac349b999bd51916f91c14d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "X равно Y?\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Elements.Elements.Delete@Revit.Elements.Element",
      "Id": "2e2c99411fee493a8a53a8df349db707",
      "Inputs": [
        {
          "Id": "fa768aeec91a4dcfb958c1c110aa78d5",
          "Name": "element",
          "Description": "Element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17eff3fcda4847a49666d3551ff2dd92",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Delete element from Revit DB.\n\nElements.Delete (element: Element): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "903053fea84d4d0dbd3b58c158864374",
      "Inputs": [
        {
          "Id": "eab461e4575e477ab8f6cea05e588f2f",
          "Name": "list",
          "Description": "Список, который необходимо проверить на присвоение всем элементам значения «False».\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c430e205ec1447e39f05bf5068ff9dec",
          "Name": "bool",
          "Description": "Присвоение всем элементам значения «False».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определяет, являются ли все элементы заданного списка логическими и имеют ли они значение «False».\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "c8c2d4c321bf4edba6dfd90a6f6d8edf",
      "Inputs": [
        {
          "Id": "7243bc97b39c4c7193879e7574ca6551",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e959c062cc44d6aa9a39b70f9308310",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44c6439a97d64a3993ccc4109fbcef0d",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//Параметр;\n\"SD_Версия задания\";\n//Текст предупреждения;\n\"|Удалено\";\n//Текст предупреждения;\n\"\";",
      "Id": "3d4f439711644434ae6f554e7e3ad56e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ab7618f31d0452aa1eda62dcc609151",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e621aa6f849f42e2a69ddec3f6d4a5d3",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b207e827ce224d27ae8c50bffe9d0642",
          "Name": "",
          "Description": "Значение выражения в строке 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "6c2e7ef24c054b4faa043bd972a7bdea",
      "Inputs": [
        {
          "Id": "68ab53aad5614d759a21737f2a8161fa",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d71a204e19274e24a16b40c1a5505c61",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64fd38064d9f4da8b12bd07e5eb28b3a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "27f9e7711c574270a5302e5d73c382b9",
      "Inputs": [
        {
          "Id": "ab1a1617a2234fefb93896b21f4c2daf",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41eb9aeda80c443f83b601f18e0d9ec4",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6f36b4e80e1487cbc18e7b34ee0152f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "6453be53d05d44bc9577ce59415b09eb",
      "Inputs": [
        {
          "Id": "8c743a7530f246eabf4dc753652239f7",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "257e50e368d74926a3ac4181dcca3a1a",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e4ae901b265404194a247569d6f2f08",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9870907c180242e89f55c6759ac99dfd",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "bc40e67d69254e7a8659b688d4e61fd8",
      "Inputs": [
        {
          "Id": "ebe1b0dd86824295ae640253ebd09e87",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48cf9a11c88549b7bd341d5a1eb20979",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea9864e950b04b2eaa71dbb9fde6bbbb",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "deca6ec71d444e81ac29c107206224d3",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "c26d16a443344b098e969f7dae927746",
      "Inputs": [
        {
          "Id": "bd724606bc364b75af229c99afd85b68",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e919278cfadc477291dce91fb7ecc52b",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ce6a56b87c74d7fa4deefcb6d577562",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcf45012100c40dcb1673cf6590aa4e0",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1721f0ace30543848e7b94b230a94fd2",
      "Inputs": [
        {
          "Id": "9b0ab687ef024ce99899d898ff8cbdd8",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "251dd8234f0943afaf292059fd17c5b1",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "c85135279ca347cdb88ee9f7b83f2b0d",
      "Inputs": [
        {
          "Id": "ba826e42e3e14d3d9dad8d2e1f866cd2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "481447e8f8484ce99255cd0eb17c932e",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nangles = IN[0][0]\r\nOUT = []\r\nlist=[]\r\nOUT1 =[]\r\n# Разместите код под этой строкой\r\nfor angle in angles:\r\n\tif 315<=angle<=360:\r\n\t\tangle-=315\r\n\telif 270<=angle<315:\r\n\t\tangle-=270\r\n\telif 225<=angle<=270:\r\n\t\tangle-=225\r\n\telif 180<=angle<=225:\r\n\t\tangle-=180\r\n\t\t\r\n\telif 135<=angle<=180:\r\n\t\tangle-=135\r\n\t\t\r\n\telif 90<=angle<=135:\r\n\t\tangle-=90\r\n\t\r\n\telif 45<=angle<=90:\r\n\t\tangle-=45\r\n\t\t\r\n\telif 45<=angle<=0:\r\n\t\tangle-=0\r\n\telse:\r\n\t\tangle=angle\r\n\tlist.Add(round(angle,2))\r\n\t\r\nfor angle in list:\r\n\tif angle >= 22.5:\r\n\t\tif angle>=33.4:\r\n\t\t\tangle = 45-angle\r\n\t\telse:\r\n\t\t\tangle = angle-22.5\t\t\r\n\telif angle < 22.5:\r\n\t\tangle=angle\r\n\tOUT1.Add(angle)\r\n\t\r\nOUT.Add(OUT1)\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "e517ac3d33104fd2b01eceda5680447d",
      "Inputs": [
        {
          "Id": "ffa3e6b0d10544659e9940aecf5ac05b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3d52063668d4852a1a07bd5a0bd848d",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "30191c94b458471db79937bbcd401d89",
      "Inputs": [
        {
          "Id": "b3b88811b54e4beba6e0688d7c53bfb4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5eed425f8df74d49bb9717ebc134c007",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ntry:\r\n\tif len(IN[0])==0:\r\n\t\tOUT = IN[0]\r\n\tif len(IN[0])>0:\r\n\t\tOUT = IN[0]\r\n\t\r\nexcept:\r\n\tOUT =[\"\"]\r\n",
      "VariableInputPorts": true,
      "Id": "c90c14e67c2343ad975d3061c0530f2c",
      "Inputs": [
        {
          "Id": "332a8b5f5589494caa6b8199eef466f3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3add2de75ab7404e99f7cda31a52b457",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ntry:\r\n\tif len(IN[0])==0:\r\n\t\tOUT = IN[0]\r\n\tif len(IN[0])>0:\r\n\t\tOUT = IN[0]\r\n\t\r\nexcept:\r\n\tOUT =[\"\"]\r\n",
      "VariableInputPorts": true,
      "Id": "e27f3eaedc6c488ebd008d1030edd3e2",
      "Inputs": [
        {
          "Id": "117ce0a1c16e4f54a4c922999700d3c7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43beb8dd62b74a8c876aff30f7ca6f3f",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ntry:\r\n\tif len(IN[0])==0:\r\n\t\tOUT = IN[0]\r\n\tif len(IN[0])>0:\r\n\t\tOUT = IN[0]\r\n\t\r\nexcept:\r\n\tOUT =[\"\"]\r\n",
      "VariableInputPorts": true,
      "Id": "68b2089ae2274daf9999a21759eee62e",
      "Inputs": [
        {
          "Id": "62f3cdd26a7b400388044bd0ea19a7d6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8787f40f94c54d3eb4c1b224927cfab4",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ntry:\r\n\tif len(IN[0])==0:\r\n\t\tOUT = IN[0]\r\n\tif len(IN[0])>0:\r\n\t\tOUT = IN[0]\r\n\t\r\nexcept:\r\n\tOUT =[\"\"]\r\n",
      "VariableInputPorts": true,
      "Id": "c297a902d4bc4de9aee9082432bacab0",
      "Inputs": [
        {
          "Id": "1cfb4885a15948ef99aaa43119794ee3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "015735dc5c3f4fcfba599b35e7a438a0",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= UnwrapElement(IN[0])\r\notv_locs1 = IN[1]\r\ndelta = 50\r\notv_ccs_angle = IN[2]\r\notv_depth = IN[3]\r\n\r\notv_locs = []\r\notv_rot =[]\r\notv_width =[]\r\notv_lenth =[]\r\notv_hight =[]\r\n\r\nOUT=[]\r\n\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\r\n\r\ndef surfase(pO, angle, width, len, delta,Ez, el):\r\n\tOE = float(width)/2 \r\n\tOF = float(len)/2 \r\n\tpoint_list = []\r\n\r\n\tEx = pO.X * 304.8 + (OE+delta)*math.cos(math.radians(float(angle))) \r\n\tEy = pO.Y * 304.8 + (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\tGx = pO.X * 304.8 - (OE+delta)*math.cos(math.radians(float(angle)))\r\n\tGy = pO.Y * 304.8 - (OE+delta)*math.sin(math.radians(float(angle)))\t\r\n\t\r\n\tAx = Gx\r\n\tAy = Gy\r\n\tAz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tBx = Ex\r\n\tBy = Ey\r\n\tBz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tDx = Gx\r\n\tDy = Gy\r\n\tDz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tCx = Ex\r\n\tCy = Ey\r\n\tCz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tpoint_list.append(Point.ByCoordinates(Ax, Ay, Az))\r\n\tpoint_list.append(Point.ByCoordinates(Bx, By, Bz))\r\n\tpoint_list.append(Point.ByCoordinates(Cx, Cy, Cz))\r\n\tpoint_list.append(Point.ByCoordinates(Dx,Dy,Dz))\r\n\tsurface = Surface.ByPerimeterPoints(point_list)\r\n\t\r\n\treturn surface\r\n\t\r\ndef surfaces(elements, locs_list, rot_list, width_list, lenth_list, delta, tz_depth):\r\n\ttest =[]\r\n\tsufraces_list = []\r\n\tfor i, el in enumerate(elements):\r\n\t\ttest.Add(i)\r\n\t\tpO = locs_list[i]\r\n\t\tangle = rot_list[i]\r\n\t\twidth = width_list[i]\r\n\t\tlen = lenth_list[i]\r\n\t\t\r\n\t\tdepth = float(tz_depth[i]) - 60\r\n\t\tEz = pO.Z * 304.8 + depth/2\r\n\t\t\t\r\n\t\t\r\n\t\tsufraces_list.Add(surfase(pO, angle, width, len, delta,Ez,el))\r\n\treturn sufraces_list\r\n\r\ndef solid_from_surface(surface, centrP, depth):\r\n\tdelta = depth/2\r\n\tcentrP = Point.ByCoordinates(centrP.X*304.8,centrP.Y*304.8,centrP.Z*304.8)\r\n\tnorkvector = Surface.NormalAtParameter(surface)\r\n\tnorkvector = Vector.ByCoordinates(norkvector.X*delta, norkvector.Y*delta, norkvector.Z*delta)\r\n\tStartPoint = Point.Add(centrP,norkvector)\r\n\tEndPoint = Point.Subtract(centrP,norkvector)\r\n\t\r\n\tline = Line.ByStartPointEndPoint(StartPoint,EndPoint)\r\n\tline1 = Line.ByStartPointEndPoint(EndPoint,centrP)\r\n\tline2 = Line.ByStartPointEndPoint(centrP,StartPoint)\r\n\tStartSurface = Surface.Offset(surface, depth)\r\n\t\r\n\t\r\n\t\r\n\tperimetrlines = Surface.PerimeterCurves(surface)\r\n\tperimetrcurve = Curve.Join(perimetrlines[0],perimetrlines[1:])\r\n\tsolid1 = Solid.BySweep(perimetrcurve,line1)\r\n\tsolid2 = Solid.BySweep(perimetrcurve,line2)\r\n\tsol = Solid.ByUnion([solid1,solid2])\r\n\t\r\n\treturn sol\r\n\r\n\r\ndef solids_from_surfaces(surfaces, centrPs, depth):\r\n\tsolids = []\r\n\tfor i, surf in enumerate(surfaces):\r\n\t\tsol = solid_from_surface(surf, centrPs[i], depth[i])\r\n\t\tsolids.Add(sol)\r\n\treturn solids\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\notv_hight = get_parameters_elements(otvs, \"ADSK_Отверстие_Отметка от нуля\")\r\notv_lenth = get_parameters_elements(otvs, \"ADSK_Отверстие_Высота\")\r\notv_width = get_parameters_elements(otvs, \"ADSK_Отверстие_Ширина\")\r\n\r\nfor i, otv in enumerate(otv_locs1):\r\n\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8+float(otv_hight[i])/304.8+float(otv_lenth[i])/304.8/2)\r\n\totv_locs.Add(pO)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_rot.Add(math.degrees(otv.Location.Rotation) + otv_ccs_angle[i])\r\n\t\r\n\r\n\r\n\r\notv_surfaces= surfaces(otvs,otv_locs,otv_rot,otv_width,otv_lenth, delta,otv_depth)\r\nsolids=solids_from_surfaces(otv_surfaces, otv_locs, otv_depth)\r\nOUT.Add(solids)\r\n\r\n\r\n\r\n\r\n#OUT.Add(otv_surfaces)\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "74cafa5fb8364bb9b7688f5a4bfd8d33",
      "Inputs": [
        {
          "Id": "ff0b9f60e7c846ffad2bd7411b0b66bb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31355733942c45ce910d215bd2fd04bb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4919fdada5b4474a5ae3ea48d597702",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "819b809d012242009185a8bf28335b14",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f0e663a72c84dbf8f511adee75075c0",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nwindow_bool_list =IN[0][0]\r\nwindows=IN[1]\r\nOUT=[]\r\n# Разместите код под этой строкой\r\n# каждый window_list это лист для каждого окна в котором перечисленны трубопроводы которые его пересекают\r\nfor i, window_list in enumerate(window_bool_list):\r\n\tlist_len = len(window_list)\r\n\tfor  j in range(list_len):\r\n\t\tOUT.Add(windows[i]) \r\n\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "8756b597915e48bd8f78d92406ede249",
      "Inputs": [
        {
          "Id": "c9446dc4056544d89842a78d9225e5ca",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3032c7fcc2974ee6b4e748916bf6caf5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1dbf615393ab403086b3bbc0c3a1e2a3",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a=tochnoct;\nr=razdelitel;\n\n\nMath.Round(Point.X(x)/a)*a+r+\nMath.Round(Point.Y(x)/a)*a+r+\nMath.Round(Point.Z(x)/a)*a+r+\nShirina+r+\nVisota+r+\nGlubina+r+\nYgol;",
      "Id": "6d182631b1a74c66922ad869e057526d",
      "Inputs": [
        {
          "Id": "9b3ee5b956734799bcf6429541ea1e22",
          "Name": "tochnoct",
          "Description": "tochnoct",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a87b64a176564cd0b6185614f4ac9bb0",
          "Name": "razdelitel",
          "Description": "razdelitel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "185657a659ff49f09c15b3b0f53c5f9c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "610538f3529e4f29a98da15d258a5851",
          "Name": "Shirina",
          "Description": "Shirina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d2ce92cbb0a4d26bb968e3052ff7d25",
          "Name": "Visota",
          "Description": "Visota",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f49fb29850614d0cbbd0dd82d9fe14e6",
          "Name": "Glubina",
          "Description": "Glubina",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74e38534fc744a8782aba8ff2fb34d2d",
          "Name": "Ygol",
          "Description": "Ygol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b6b0824cf964d8f84fe0a8398d02ac6",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30defcd31fed44b085ee3e6ebdbc6eaf",
          "Name": "",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d630e166201044bbae518b15a72b4d74",
          "Name": "",
          "Description": "Значение выражения в строке 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "367a842d403848c5b43d04f241c98fb4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c3fc151f4c764f9e8e7fc83ef04fc953",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5459f2ec3f2e4bc5b5e82465b4cd2858",
      "Inputs": [
        {
          "Id": "0a8cd379fef6471fafae24af9502e86c",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17d2162098764a83a041ee35ecf45026",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb904dec748341ed9d2f9f79599a16e7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "ed66625a3ef64a3bbd067fb63c3ada2c",
      "Inputs": [
        {
          "Id": "3fa198f250f44c1f8be5e06d916186fb",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42e9a2f50f7b460bad04b4682776d06b",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "893e2037d07944a9969ca2d69221acea",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed8dc42f1f0f41de9d5302a0a6891df2",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ntry:\r\n\tif len(IN[0])==0:\r\n\t\tOUT = IN[0]\r\n\tif len(IN[0])>0:\r\n\t\tOUT = IN[0]\r\n\t\r\nexcept:\r\n\tOUT =[\"\"]\r\n",
      "VariableInputPorts": true,
      "Id": "983e9a2741a5427292a0f27d774f2828",
      "Inputs": [
        {
          "Id": "4bd83c4ae24b4f5aaaddd479d7ba4215",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48668fd47037423bae1eda06bd13358e",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"|\";\n\",000000\";\n\"\";",
      "Id": "b18aa04a049f44988950ce1e6100539d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28743cd111434a6aa80833dba4d80fd9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98961b3e912e4e109a9b3c27a14606c2",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca0d84cc40864359b98e401983bd921b",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "7abdfa34a8e3451baaf5765b90605edf",
      "Inputs": [
        {
          "Id": "9b4c7d0f980f4feeb20c9df76d9b402a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c60da6028fe94d8c9fb112dd1026e6c3",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\ndelta;\nx=(bt+mt)*2+delta;\nMath.Ceiling(x/round)*round;",
      "Id": "afa69d758cfd421e858e2b4801e4181f",
      "Inputs": [
        {
          "Id": "205c67968d734f539d5be5b069162d9d",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39af508f8722459db188be0f3900fb96",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27a87de139ee4779b53587eff3d17f9a",
          "Name": "bt",
          "Description": "bt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "680c0d6fcae8482fa2f01cd1904ccd21",
          "Name": "mt",
          "Description": "mt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c98a960bf9ef42408a49ff8aaff3490b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb8aa4781b8d4074ba139e6a02fd505a",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d3ddaab2d5e4bc996d5818e6cafd405",
          "Name": "",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa1a793d97dd4e72916ba45be6375b4d",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "066d97ffed3c4b48b8fbc99d0e4c9276",
      "Inputs": [
        {
          "Id": "8dea4cf3af9a4696971ed1dc297fc221",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16002d2c23c34a689e3b88009e58f790",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(w*0.5)/Math.Cos(A);",
      "Id": "445ade3679e04e1185e224853d49f8b4",
      "Inputs": [
        {
          "Id": "17b04b9bde854c8796cda19fb7acfd93",
          "Name": "w",
          "Description": "w",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aa0d694b5ab4851b68e0d7427ddf7f9",
          "Name": "A",
          "Description": "A",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44e7dc41afab4c509287b36c50a52b10",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(b*0.5)*Math.Tan(A);",
      "Id": "c79d3e6d9d294254bdbf962e35955fba",
      "Inputs": [
        {
          "Id": "7a397344609648acacf829891f373e58",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adab65e722d64b258db8470a57142df2",
          "Name": "A",
          "Description": "A",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cb1872c96f64ed0bf950041958121b6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "eb01c4adfbb046759617c7e8528560ef",
      "Inputs": [
        {
          "Id": "3b6039fb71394c0f800e17888c8b7461",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6df66ba7ff7a48da8d865ff7c41171e9",
          "Name": "param",
          "Description": "Параметр для оценки\n\ndouble\nЗначение по умолчанию : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d041356ec6cc45fa9e55693ad80a52e5",
          "Name": "Point",
          "Description": "Точка",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение точки на кривой при заданном параметре между StartParameter() и EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.5;",
      "Id": "4385e93643e64c3da4f6ef83a3216cb7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "86257bac140f49f791c3c121b69fbecf",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(x+60);",
      "Id": "98d879a0537947b989e0527ebb9f00ec",
      "Inputs": [
        {
          "Id": "5c0a87c144fb4be8970a44ee3db658a7",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9dfa2f332d14bcc8a14f86a8af134f9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "423f6344ae944b7cbc2c3cf461e03e69",
      "Inputs": [
        {
          "Id": "2c192d6e4658410db70908cfaf7f3531",
          "Name": "number",
          "Description": "Число для округления.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4bd028a3a5d44d4da05a41d9c14ae48a",
          "Name": "number",
          "Description": "Ближайшее интегральное значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Округление числа до ближайшего интегрального значения. Обратите внимание на то, что этот метод возвращает число с плавающей точкой двойной точности вместо интегрального типа.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nangles = IN[0][0]\r\nOUT = []\r\nlist=[]\r\nOUT1 =[]\r\n# Разместите код под этой строкой\r\nfor angle in angles:\r\n\tif 315<=angle<=360:\r\n\t\tangle-=315\r\n\telif 270<=angle<315:\r\n\t\tangle-=270\r\n\telif 225<=angle<=270:\r\n\t\tangle-=225\r\n\telif 180<=angle<=225:\r\n\t\tangle-=180\r\n\t\t\r\n\telif 135<=angle<=180:\r\n\t\tangle-=135\r\n\t\t\r\n\telif 90<=angle<=135:\r\n\t\tangle-=90\r\n\t\r\n\telif 45<=angle<=90:\r\n\t\tangle-=45\r\n\t\t\r\n\telif 45<=angle<=0:\r\n\t\tangle-=0\r\n\telse:\r\n\t\tangle=angle\r\n\tlist.Add(round(angle,2))\r\n\t\r\nfor angle in list:\r\n\tif angle >= 22.5:\r\n\t\tif angle>=33.4:\r\n\t\t\tangle = 45-angle\r\n\t\telse:\r\n\t\t\tangle = angle-22.5\t\t\r\n\telif angle < 22.5:\r\n\t\tangle=angle\r\n\tOUT1.Add(angle)\r\n\t\r\nOUT.Add(OUT1)\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "54990abf8f7a409e88d97ae82b51e3ab",
      "Inputs": [
        {
          "Id": "e3fcedec798a48e3b1b12afdc63660f0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "084c13a271bc4002bdaa8d82948be77e",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nOUT =[]\r\nwalls = UnwrapElement(IN[0])\r\nfor wall in walls:\r\n\tOUT.Add(wall.WallType.Width*304.8)\r\n",
      "VariableInputPorts": true,
      "Id": "7900a13f624a4dc8965f01b9ed280ddc",
      "Inputs": [
        {
          "Id": "bfb3489c445a41c29e3f70391556208a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "968448f5727a4d86a998ef941ff510c1",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "c1ce1896961e4e3280ae8aed8f2438cb",
      "Inputs": [
        {
          "Id": "673858382fb14185a967c0d81ee81868",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e337ff3e55be4362b2837cffdfedec7c",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Направление кривой\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleAboutAxis@Autodesk.DesignScript.Geometry.Vector,Autodesk.DesignScript.Geometry.Vector",
      "Id": "b7003f3ed65b4d48ba0c9c395b837bd6",
      "Inputs": [
        {
          "Id": "85a7b43c0ffb4d0d94af35fb7a11bf28",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5b59fed568541c093c804cc74eecb7e",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b38f47023f064302adaa31b666d44984",
          "Name": "rotationAxis",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea0f30632346440c9b25aa2e5c74f088",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 360]. Для определения направления угла используется ось вращения.\n\nVector.AngleAboutAxis (otherVector: Vector, rotationAxis: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ZAxis",
      "Id": "39856b7e230147e7a33c9f3c9e3cefaf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa6c2238b28842c2a0cc1d09e537c9db",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси Z (0; 0; 1)\n\nVector.ZAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.XAxis",
      "Id": "6caa073b30ff461ab85fbb1fe9b1d7ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "827445566f7742a0a3c92f3790917915",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение канонического вектора оси X (1; 0; 0)\n\nVector.XAxis ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.LinkElement.Location",
      "Id": "37cf96df72c04dcb811a69e9fd2ab02b",
      "Inputs": [
        {
          "Id": "8a6899d2035f400ab385f4b5ff3a0de5",
          "Name": "linkElement",
          "Description": "Revit.LinkElement",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c295f2c2989c41b2b0b243ca8c44c66d",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the location of this LinkElement at its host location.\r\rVisit bimorph.com/bimorph-nodes for support\n\nLinkElement.Location: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ar=Math.Round(a,1);\n90-(ar>90?180-ar:ar);",
      "Id": "30af50008c3e49b0bdaf0225f8a34c0d",
      "Inputs": [
        {
          "Id": "02250e28f4b849c1a66ddf1e09a8a846",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24700f8d4c634ad4b643c9fe5c051ae5",
          "Name": "",
          "Description": "ar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b33a912700747a39f97dfd09ed03410",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.AngleWithVector@Autodesk.DesignScript.Geometry.Vector",
      "Id": "048661a15872416fbcc6599ef69a62f9",
      "Inputs": [
        {
          "Id": "ecd91ed9d0f7462597e61f71b1446309",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9ff723096824d8ab1bac0c316848c38",
          "Name": "otherVector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cac844e8e8e549b5ac578ea5564808f3",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение угла между двумя векторами в следующем диапазоне градусов: [0, 180].\n\nVector.AngleWithVector (otherVector: Vector): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Vector.ByCoordinates(v.X,v.Y,0);",
      "Id": "d22e0d181d164c2e89cf51ab31fdf164",
      "Inputs": [
        {
          "Id": "7618897dc52d4aedac44a5cc8987003b",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8ed55e2958348b98b0c22854485661e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Vector.ByCoordinates(v.X,v.Y,0);",
      "Id": "4adeb07acc09472bb5d7f920bfdb8ad4",
      "Inputs": [
        {
          "Id": "c78cc20c964b496fbe898af13e8ba1e5",
          "Name": "v",
          "Description": "v",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51c305fbbcef478fbec0d487abdf305f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nfrom Autodesk.Revit.DB import * \r\n\r\n# Import DocumentManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlink_walls = IN[0]\r\nwalls = UnwrapElement(IN[0])\r\nidwalls =IN[1]\r\nlink_walls_angle = IN[2]\r\nallid= []\r\nOUT =[]\r\nfor wall in walls:\r\n\tallid.Add(str(wall.Id))\r\nOUT1=[]\t\r\n# Разместите код под этой строкой\r\nfor wallId in idwalls:\r\n\twallId = str(wallId)\r\n\telementId = allid.index(wallId)\r\n\tOUT1.Add(link_walls[elementId])\r\n\r\nOUT = OUT1\r\n\t\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "f278932703794feea34807652231823d",
      "Inputs": [
        {
          "Id": "5b43e069dc444071b7ead6018efcb4f0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f82547bce57e446eb60914fbb96d96f5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e7fcfb2d567464bbbf21da5e7416fb7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5d8c2a6fb9448eb92f6396bb230333c",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Math.Round(d!=\"\"?d:x);",
      "Id": "304a90d041634e48a122e54d41e4ebc7",
      "Inputs": [
        {
          "Id": "4c7aec2920074a0c93a5a5d87e90dad0",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f38f195eb216402daa3360292983f115",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "465e284e2a334792a15cb7d10bfbff48",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "delta;\nMath.Round(d!=\"\"?d:x)+delta;",
      "Id": "fde4348ef7a14109971aa1dfd5b7dd05",
      "Inputs": [
        {
          "Id": "cd6c84b0333f4b15aab50131b21ccdc0",
          "Name": "delta",
          "Description": "delta",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22b888737dd341e3bfaf71996d9d22a2",
          "Name": "d",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a8071b6d5df4181a9cddd968e393595",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c336201e3926412f9c28231a5d188248",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c39745d714e248beae28c5592a81061c",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "round;\nMath.Ceiling(x/round)*round;",
      "Id": "c5e23a8872ea49c89d12a36f0d07d629",
      "Inputs": [
        {
          "Id": "f37690276d274240a5e307f203eea2d6",
          "Name": "round",
          "Description": "round",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d2f3b916c0d4d7d82a5f35e0fdee323",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6e8354b0a1b14231bc1ef2f0d7f392c0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "843608fc975c4bcdbe639a89d3300f50",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f3228c78-e4a0-42f0-8ec3-a19daf7157bb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8be21bab945043368036e99eb1b9051a",
      "Inputs": [
        {
          "Id": "cfcbe06b61504c95a98b911122008c59",
          "Name": "element",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8e8206c98f34c7ba5f0dd250914abb1",
          "Name": "Host",
          "Description": "возвращаемое значение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of the element.\r\nUnlike the OOTB node FamilyInstance.GetHost, it also works for elements hosted by a linked document, wall sweeps, foundations, railings and builing pads.\r\nBased on a Clockwork's node"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "92091317c4944a91a9c3a59b68015612",
      "Inputs": [
        {
          "Id": "00d78d93a06748938a278c4c686eeb5d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ee692999ed04408b729c2a5e39d8260",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение идентификатора для данного элемента\n\nElement.Id: int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "0467745bb26346579a498ef8a019f126",
      "Inputs": [
        {
          "Id": "92edf3e97fdc4b2db9058ee9ba548596",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56a7d27a274546888978504e39d68bd8",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c47b0bcfb304a4e964ebe1b38901a18",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "545feda9838d40b1a588dac4e02294ee",
      "Inputs": [
        {
          "Id": "32c241a33c0244ca9a9effdb7798e318",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d7dbb67e9494a07b0bcbdd73aa55b01",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a721d4c82e894c7bbab62caa83604b69",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "f306e72b21ff42559e20fa541405d996",
      "Inputs": [
        {
          "Id": "5da36d6d1fea49a48b2bd09605a6ff7a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5bb6a26e8c84a2db3e98870b46ded01",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "770b41f2b2e24590905267841e697db5",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "6c2da22a329946adbb4e5feb9f9b94b6",
      "Inputs": [
        {
          "Id": "7a6ab39799934ed297b1add64d115615",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c21743c8142242ec9243f861fa9f8565",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Направление кривой\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "15ca9522a40e4be496e15a20e59a7ac5",
      "Inputs": [
        {
          "Id": "62b5a9a9783e4c2a922bfdfb250dd1ed",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1a7a68d34e64d50956a77d823b91dc3",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "e965b9d5b363434281f12c1c02a24720",
      "Inputs": [
        {
          "Id": "378a6a56616b4749bd531b80597d85a8",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f9b5ff39fda461c88431a436d082d1e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Ширина\";\n\"Высота\";\n\"Диаметр\";",
      "Id": "effe104f378145feb068b2129c13098e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66aa214a49d342518e21b1bd6e47733d",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7b8c7366fce4c3d9d2a07288ba3b2c2",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8dd45452a794e29b1a7f5c6a073bb63",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2c95807ace10441d89d2bd2303b8e67f",
      "Inputs": [
        {
          "Id": "4e496f78472a433da23af92bb11c4ca1",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9583b4c05c34ba58081c4a7c1529514",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "9dbe1410e6f745d587cb071a62765676",
      "Inputs": [
        {
          "Id": "29de3c044d4c4097b871fb916c075052",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f1e533a5eaa427fbcc092c876f9424f",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\ndataEnteringNode = IN\r\n\r\n# Разместите код под этой строкой\r\n\r\n# Назначьте вывод переменной OUT.\r\nOUT = IN",
      "VariableInputPorts": true,
      "Id": "7410d002beaa4781b779e53a7db5b9f8",
      "Inputs": [
        {
          "Id": "ecfa1c50e7664f65a8f80e8798053abc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93587a5ae8684838bc49cbdbba08a6fb",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nwindow_bool_list =IN[0][0]\r\nwindows=IN[1]\r\nOUT=[]\r\n# Разместите код под этой строкой\r\n# каждый window_list это лист для каждого окна в котором перечисленны трубопроводы которые его пересекают\r\nfor i, window_list in enumerate(window_bool_list):\r\n\tlist_len = len(window_list)\r\n\tfor  j in range(list_len):\r\n\t\tOUT.Add(windows[i]) \r\n\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "c70a9d668ae84f868df9fe228893f474",
      "Inputs": [
        {
          "Id": "650d05f2b1834294bc0d33abb2b7f6ba",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "742b99f13c734b848c7c748d4a4062f4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cf70586dcf0485d8b91110236329948",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "20c1f8ba26fd4fe6a21c8587c18207da",
      "Inputs": [
        {
          "Id": "ccef859c90fd4c929e306b6681a3554c",
          "Name": "list",
          "Description": "Список для проверки элементов.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12dde0aa812c4ad0882ff92fbb392b43",
          "Name": "bool",
          "Description": "Пуст ли список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, пуст ли данный список.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "64ec7aa785bd46c3848325dda4a3c6d8",
      "Inputs": [
        {
          "Id": "4618ea94d61a4e7dbee74ef1bed36e9a",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3faadb15584b41d5a2d61e2589a48a7e",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2423e420bdee464fb1d2f0cb8823476c",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54ab7df642db4cbaada7f83c093b16b9",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "b0c877e32c314fe0ac4ed0cc0758c0fe",
      "Inputs": [
        {
          "Id": "bcfd5553718c49c9a4ff397e807f138d",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cec75094c18d4e19858e15907da9e4f6",
          "Name": "mask",
          "Description": "Список логических операций, представляющих маску.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52cd87cada1a45158bf37bd21d71ac66",
          "Name": "in",
          "Description": "Элементы, индекс маски которых имеет значение «истина».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cbf40e7b9d04985952bc891873279cc",
          "Name": "out",
          "Description": "Элементы, индекс маски которых имеет значение «ложь».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Фильтрация последовательности путем поиска соответствующих индексов в отдельном списке логических операций.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "439599a53e974ce58234efd7237d60a1",
      "Inputs": [
        {
          "Id": "70738b11af974b3786692b0571493b70",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d78897d6e9684389a1eb7f83d2e90bce",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0bf453fe8d9348d88e6ab084ec55cf54",
      "Inputs": [
        {
          "Id": "8a1ed1dbea244d6f8b2739fce0c01148",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "423555d624934709bb5d0a4c35c8fe7a",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3fec2ac245840b7b68bdb58515313bc",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d23c1446c69048aebba5be2c027fdf7b",
      "Inputs": [
        {
          "Id": "f0ca998675de4a8cbff7315fcfc7b822",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54524b9626ee459889c7f687274eb949",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da5eb2812c264af2bab5b272ccd4995d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Curve.SolidIntersection@Autodesk.DesignScript.Geometry.Solid,Autodesk.DesignScript.Geometry.Curve[],bool",
      "Id": "15f8de7a275a42b49969ca6cbe213c61",
      "Inputs": [
        {
          "Id": "3f5072cba91a4f58af3a97bfc96f874d",
          "Name": "solid",
          "Description": "Input a solid or list of solids.\n\nSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae2205dc6b4b420bb3ca5cc5dae6a4f5",
          "Name": "curves",
          "Description": "Input a list of Curves to intersect the solid or solids.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbc9ebb0ec6e4ae08e4ae0863c35af09",
          "Name": "invert",
          "Description": "True to return curve segments outside the solid. False to return curve segments inside the solid.\n\nbool\nЗначение по умолчанию : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21bdebd71b66443888a7f3451df43c27",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "949b7c5766744da8a9018a92d9b951b0",
          "Name": "exceptions[]",
          "Description": "int[]\r\rReturns indexes of any curves that fail the intersection function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds and returns all intersecting curve segments between a solid and a list of curves. Setting invert to true has the reverse effect and trims curves that intersect the solid.\r\rThe exceptions output returns indexes of any curves that fail the intersection function.\r\rVisit bimorph.com/bimorph-nodes for support\n\nCurve.SolidIntersection (solid: Solid, curves: Curve[], invert: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Element.IntersectsSolid@Autodesk.DesignScript.Geometry.Solid[],Revit.Elements.Element[]",
      "Id": "646dbf8981a94173af6e689500442f59",
      "Inputs": [
        {
          "Id": "dd0441d9358c469ab20242b5bb7f3379",
          "Name": "solids",
          "Description": "Input a list of solid objects to perform the interference check.\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3e21353204a4783b8bfdc7bc12f6245",
          "Name": "elements",
          "Description": "Input a list of Revit elements to test for interference against each of the solid objects.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c76662c48904ea4ba19d946cc2141b5",
          "Name": "Element[][]",
          "Description": "Element[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f706dc412e743b69c687937b09beb1e",
          "Name": "intersectsWith[]",
          "Description": "Solid[]\r\rMap the indices from this list to the corresponding indices in the Element[][] output to group the clashing elements.\r\rVisit bimorph.com/bimorph-nodes for support",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b39edcee6224415588896583fd18de85",
          "Name": "exceptions[]",
          "Description": "int[]\r\rReturns indexes of any solids that fail solid conversion by the Revit API Shape Builder and cannot be processed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds intersections (clash detection) between Solids and Revit elements. Elements that intersect a Solid are ouput into sublists.\r\rThe node is optimsed to output rapid results up to 99.5% faster than any other intersection technique.\r\rThe exceptions output returns indexes of any solids that cant be processed by the intersection function.\r\rUse IsElementSupported to check that elements are supported by the node.\r\rVisit bimorph.com/bimorph-nodes for support\n\nElement.IntersectsSolid (solids: Solid[], elements: Element[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "1a89a9a8b07c46d7af0d1dedf9788bcf",
      "Inputs": [
        {
          "Id": "1fd7f1ce8a304793944f238d44263ce4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe88b2c153774fa0b49906517eba0074",
          "Name": "Geometry",
          "Description": "Геометрия местоположения",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение местоположения для имеющегося элемента\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= UnwrapElement(IN[0])\r\notv_locs1 = IN[1]\r\ndelta = 50\r\notv_ccs_angle = IN[2]\r\notv_depth = IN[3]\r\notv_families =IN[4]\r\n\r\notv_locs = []\r\notv_rot =[]\r\notv_width =[]\r\notv_lenth =[]\r\notv_hight =[]\r\n\r\nOUT=[]\r\n\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\r\n\r\ndef surfase(pO, angle, width, len, delta,Ez, el):\r\n\tOE = float(width)/2 \r\n\tOF = float(len)/2 \r\n\tpoint_list = []\r\n\r\n\tEx = pO.X * 304.8 + (OE+delta)*math.cos(math.radians(float(angle))) \r\n\tEy = pO.Y * 304.8 + (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\tGx = pO.X * 304.8 - (OE+delta)*math.cos(math.radians(float(angle)))\r\n\tGy = pO.Y * 304.8 - (OE+delta)*math.sin(math.radians(float(angle)))\t\r\n\t\r\n\tAx = Gx\r\n\tAy = Gy\r\n\tAz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tBx = Ex\r\n\tBy = Ey\r\n\tBz = pO.Z * 304.8+(OF+delta)\r\n\t\r\n\tDx = Gx\r\n\tDy = Gy\r\n\tDz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tCx = Ex\r\n\tCy = Ey\r\n\tCz = pO.Z * 304.8-(OF+delta)\r\n\t\r\n\tpoint_list.append(Point.ByCoordinates(Ax, Ay, Az))\r\n\tpoint_list.append(Point.ByCoordinates(Bx, By, Bz))\r\n\tpoint_list.append(Point.ByCoordinates(Cx, Cy, Cz))\r\n\tpoint_list.append(Point.ByCoordinates(Dx,Dy,Dz))\r\n\tsurface = Surface.ByPerimeterPoints(point_list)\r\n\t\r\n\treturn surface\r\n\t\r\ndef surfaces(elements, locs_list, rot_list, width_list, lenth_list, delta, tz_depth):\r\n\ttest =[]\r\n\tsufraces_list = []\r\n\tfor i, el in enumerate(elements):\r\n\t\ttest.Add(i)\r\n\t\tpO = locs_list[i]\r\n\t\tangle = rot_list[i]\r\n\t\twidth = width_list[i]\r\n\t\tlen = lenth_list[i]\r\n\t\t\r\n\t\tdepth = float(tz_depth[i]) - 60\r\n\t\tEz = pO.Z * 304.8 + depth/2\r\n\t\t\t\r\n\t\t\r\n\t\tsufraces_list.Add(surfase(pO, angle, width, len, delta,Ez,el))\r\n\treturn sufraces_list\r\n\r\ndef solid_from_surface(surface, centrP, depth):\r\n\tdelta = depth/2\r\n\tcentrP = Point.ByCoordinates(centrP.X*304.8,centrP.Y*304.8,centrP.Z*304.8)\r\n\tnorkvector = Surface.NormalAtParameter(surface)\r\n\tnorkvector = Vector.ByCoordinates(norkvector.X*delta, norkvector.Y*delta, norkvector.Z*delta)\r\n\tStartPoint = Point.Add(centrP,norkvector)\r\n\tEndPoint = Point.Subtract(centrP,norkvector)\r\n\t\r\n\tline = Line.ByStartPointEndPoint(StartPoint,EndPoint)\r\n\tline1 = Line.ByStartPointEndPoint(EndPoint,centrP)\r\n\tline2 = Line.ByStartPointEndPoint(centrP,StartPoint)\r\n\tStartSurface = Surface.Offset(surface, depth)\r\n\t\r\n\t\r\n\t\r\n\tperimetrlines = Surface.PerimeterCurves(surface)\r\n\tperimetrcurve = Curve.Join(perimetrlines[0],perimetrlines[1:])\r\n\tsolid1 = Solid.BySweep(perimetrcurve,line1)\r\n\tsolid2 = Solid.BySweep(perimetrcurve,line2)\r\n\tsol = Solid.ByUnion([solid1,solid2])\r\n\t\r\n\treturn sol\r\n\r\n\r\ndef solids_from_surfaces(surfaces, centrPs, depth):\r\n\tsolids = []\r\n\tfor i, surf in enumerate(surfaces):\r\n\t\tsol = solid_from_surface(surf, centrPs[i], depth[i])\r\n\t\tsolids.Add(sol)\r\n\treturn solids\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\n\r\notv_lenth = get_parameters_elements(otvs, \":H отверстия\")\r\notv_width = get_parameters_elements(otvs, \":B отверстия\")\r\n\r\nfor i, otv in enumerate(otv_locs1):\r\n\t\r\n\tif otv_families[i] == \"(Отверстие) Стена\":\r\n\t\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8)\r\n\t\r\n\telif otv_families[i] == \"(Отверстие) Стена_Глубина\":\r\n\t\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8+float(otv_lenth[i])/2/304.8)\r\n\t\r\n\telse:\r\n\t\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8)\t\r\n\t\t\r\n\totv_locs.Add(pO)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_rot.Add(math.degrees(otv.Location.Rotation) + otv_ccs_angle[i])\r\n\t\r\n\r\n\r\n\r\notv_surfaces= surfaces(otvs,otv_locs,otv_rot,otv_width,otv_lenth, delta,otv_depth)\r\nsolids=solids_from_surfaces(otv_surfaces, otv_locs, otv_depth)\r\nOUT.Add(solids)\r\n\r\n\r\n\r\n\r\n#OUT.Add(otv_surfaces)\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "b2528694a124446f8aba9f7b43ac8372",
      "Inputs": [
        {
          "Id": "14868438365f44ecadb7cf86f20c1b51",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e2503bbfa2e48969740a0b665b41788",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97d45486d9814b268535c5f2c2521f6d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72bf3c369ca54456aa7e42a7e22e7e90",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6d8c78d4ff440c58c1314e5f3633d6b",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "194b415f6bfc48c1816141401b55aa27",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= UnwrapElement(IN[0])\r\notv_locs1 = IN[1]\r\ndelta = 1000\r\nz_zapas = 100\r\notv_ccs_angle = IN[2]\r\notv_depth = IN[3]\r\n\r\notv_locs = []\r\notv_rot =[]\r\notv_width =[]\r\notv_lenth =[]\r\notv_depth = map(lambda x: x + z_zapas, otv_depth)\r\n\r\nOUT=[]\r\n\r\n\r\nfor otv in otv_locs1:\r\n\tpO = Point.ByCoordinates(otv.X/304.8,otv.Y/304.8,otv.Z/304.8+(z_zapas/304.8)/2)\r\n\totv_locs.Add(pO)\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\r\n\r\ndef surfase(pO, angle, width, len, delta,Ez, el):\r\n\tOE = float(width)/2 \r\n\tOF = float(len)/2 \r\n\tpoint_list = []\r\n\t\r\n\tEx = pO.X * 304.8 + (OE+delta)*math.cos(math.radians(float(angle))) \r\n\tEy = pO.Y * 304.8 + (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\t\r\n\t\r\n\tTx = pO.X * 304.8 + (OF+delta)*math.sin(math.radians(float(angle)))\r\n\tTy = pO.Y * 304.8 - (OF+delta)*math.cos(math.radians(float(angle)))\r\n\t\r\n\tFx = pO.X * 304.8 - (OF+delta)*math.sin(math.radians(float(angle)))\r\n\tFy = pO.Y * 304.8 + (OF+delta)*math.cos(math.radians(float(angle)))\r\n\t\r\n\tGx = pO.X * 304.8 - (OE+delta)*math.cos(math.radians(float(angle)))\r\n\tGy = pO.Y * 304.8 - (OE+delta)*math.sin(math.radians(float(angle)))\r\n\t\r\n\t\r\n\t\r\n\tCx = round(Ex + (OF+delta)*math.sin(math.radians(float(angle))),3)\r\n\tCy = round(Ey - (OF+delta)*math.cos(math.radians(float(angle))),3)\r\n\t\r\n\tBx = round(Fx + (OE+delta)*math.cos(math.radians(float(angle))),3)\r\n\tBy = round(Fy + (OE+delta)*math.sin(math.radians(float(angle))),3)\r\n\t\r\n\tAx = round(Fx - (OE+delta)*math.cos(math.radians(float(angle))),3)\r\n\tAy = round(Fy - (OE+delta)*math.sin(math.radians(float(angle))),3)\r\n\t\r\n\tDx = round(Tx - (OE+delta)*math.cos(math.radians(float(angle))),3)\r\n\tDy = round(Ty - (OE+delta)*math.sin(math.radians(float(angle))),3)\r\n\t\r\n\t\r\n\tpoint_list.append(Point.ByCoordinates(Ax,Ay,Ez))\r\n\tpoint_list.append(Point.ByCoordinates(Bx,By,Ez))\r\n\tpoint_list.append(Point.ByCoordinates(Cx,Cy,Ez))\r\n\tpoint_list.append(Point.ByCoordinates(Dx,Dy,Ez))\r\n\tsurface = Surface.ByPerimeterPoints(point_list)\r\n\t\r\n\treturn surface\r\n\t\r\ndef surfaces(elements, locs_list, rot_list, width_list, lenth_list, delta, tz_depth):\r\n\ttest =[]\r\n\tsufraces_list = []\r\n\tfor i, el in enumerate(elements):\r\n\t\ttest.Add(i)\r\n\t\tpO = locs_list[i]\r\n\t\tangle = rot_list[i]\r\n\t\twidth = width_list[i]\r\n\t\tlen = lenth_list[i]\r\n\t\tif el.Name == \"(Отв_Задание)_Перекрытия_Прямоугольное\":\r\n\t\t\tdepth = float(tz_depth[i])\r\n\t\t\tEz = pO.Z * 304.8 + depth/2\r\n\t\t\t\r\n\t\telse:\r\n\t\t\tdepth = 0\r\n\t\t\tEz = pO.Z * 304.8\r\n\t\tsufraces_list.Add(surfase(pO, angle, width, len, delta,Ez,el))\r\n\treturn sufraces_list\r\n\r\ndef solid_from_surface(surface, centrP, depth):\r\n\tdelta = depth\r\n\tcentrP = Point.ByCoordinates(centrP.X*304.8,centrP.Y*304.8,centrP.Z*304.8)\r\n\tnorkvector = Surface.NormalAtParameter(surface)\r\n\tnorkvector = Vector.ByCoordinates(norkvector.X*delta, norkvector.Y*delta, norkvector.Z*delta)\r\n\tStartPoint = Point.Add(centrP,norkvector)\r\n\tEndPoint = Point.Subtract(centrP,norkvector)\r\n\t\r\n\tline = Line.ByStartPointEndPoint(StartPoint,EndPoint)\r\n\tline1 = Line.ByStartPointEndPoint(centrP,EndPoint)\r\n\tline2 = Line.ByStartPointEndPoint(centrP,StartPoint)\r\n\tStartSurface = Surface.Offset(surface, depth)\r\n\t\r\n\t\r\n\t\r\n\tperimetrlines = Surface.PerimeterCurves(surface)\r\n\tperimetrcurve = Curve.Join(perimetrlines[0],perimetrlines[1:])\r\n\tsolid1 = Solid.BySweep(perimetrcurve,line1)\r\n\tsolid2 = Solid.BySweep(perimetrcurve,line2)\r\n\tsol = Solid.ByUnion([solid1,solid2])\r\n\t\r\n\treturn solid2\r\n\r\n\r\ndef solids_from_surfaces(surfaces, centrPs, depth):\r\n\tsolids = []\r\n\tfor i, surf in enumerate(surfaces):\r\n\t\tsol = solid_from_surface(surf, centrPs[i], depth[i])\r\n\t\tsolids.Add(sol)\r\n\treturn solids\r\n\r\n\r\n# Разместите код под этой строкой\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_rot.Add(math.degrees(otv.Location.Rotation) + otv_ccs_angle[i])\r\n\totv_depth.Add(10)\r\n\r\notv_lenth = get_parameters_elements(otvs, \":H отверстия\")\r\notv_width = get_parameters_elements(otvs, \":B отверстия\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\notv_surfaces= surfaces(otvs,otv_locs,otv_rot,otv_width,otv_lenth, delta,otv_depth)\r\nsolids=solids_from_surfaces(otv_surfaces, otv_locs, otv_depth)\r\nOUT.Add(solids)\r\n\r\n\r\n\r\n\r\n#OUT.Add(otv_surfaces)\r\n\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "27548b6f60e148668b941fede4f938b9",
      "Inputs": [
        {
          "Id": "28176a950e704a3082e7673b9d4bb4a5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2befbe6c1794e7f9b38294365f3fedf",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d6bdc6633724177a34f1b030eea0b80",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64bbba265c6f4bb1a6c847e3adacf139",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ff033ffb5c6499698e5c38763af462c",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ec8294ffadf04ee78f0a8caeb70935f5",
      "Inputs": [
        {
          "Id": "719acef5a68a4fc585ae643f8735a249",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b9a8c6634204f2f9932bbc166f99b5f",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c362f5e70be40f7844c8a62ff14505a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "35cd1c49c5fd4bf898ea8e8402431069",
      "Inputs": [
        {
          "Id": "4930026939464a0899eb5102d73b1b7f",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64e3318f0dc64f888fb2dfacae9e4946",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f1fca1d488749a393fe24ea304374f3",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0148e1f91a664d8cbd4724ff37af1707",
      "Inputs": [
        {
          "Id": "fa1d9c6e392c4667bacf7adc6c269094",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe0ff2ea7a744675b444cc9a32ddd94b",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05d93fda179e416d8ff1bc88de5812e9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "df4a87e16d4d48ffb27321a7cdcdadb9",
      "Inputs": [
        {
          "Id": "84ea571beab6422f870bd843ca87e448",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9149fcc110e43be984049619cf6e903",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d3fbac7092346bd9dbdb7f0dc736ae2",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "16d6040ca99448a39ecb4fed1ec16247",
      "Inputs": [
        {
          "Id": "a54a33837b1e493f8c2a9d0c5ad871ee",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0be16fe27b0d482e9a1529c0d67d75f1",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ac777438309434ca2cdfed465e7793f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-2;",
      "Id": "30748bce041e469dbcf237d124341da3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25eeb5fc46a54d2196f9045523369fca",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tsplit_list.pop(0)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "63e3a47eb06a47da8facabeb8c80cda0",
      "Inputs": [
        {
          "Id": "16568c630c8b473b9021970a5024d157",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3db85280b344dc29dd2f5342468939a",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\tsplit_list.pop(8)\r\n\t\tsplit_list.pop(0)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "50c320c879414e18b2c6da27f2141a2e",
      "Inputs": [
        {
          "Id": "41a2061fa4ca4808982fe24fb92561af",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4b8f0a8b4074d4498389f2e7b29797c",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn < 4:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(2)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr + \"Удалено\"\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "a8bdf2ae2e4d4b51896e21d5f516842e",
      "Inputs": [
        {
          "Id": "65504102d2604c6b945398f87c8798bd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cc7a4e25db0455bbdb0894bef6d52d5",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "04f204ca9e1e4a92b566ecd54643de0e",
      "Inputs": [
        {
          "Id": "34da976bd80a44e89cb8622d483c9bd2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afecc4e856c44f5eb985dabdc70019b8",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41e2def69c454cbd965c016178fbf716",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x+Предупреждение;",
      "Id": "b5cb814d37e247609a483e084dcaa198",
      "Inputs": [
        {
          "Id": "f3bba395bb4147b1be955828335d1d64",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e19d2c3a16c428cba16e5e6339309f4",
          "Name": "Предупреждение",
          "Description": "Предупреждение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92c949d829024c43b405c402fa81bd7d",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(el,DSCore.String.Contains(str,tex))[\"out\"];",
      "Id": "57dbd949334242c8b02dbe4888ab8ff0",
      "Inputs": [
        {
          "Id": "2fae7c885fd7420fab78b3f553423861",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91a7195cece74c7db96f0193fe0b8f30",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b4ffc553a12d404ab9bb5852e8690f69",
          "Name": "tex",
          "Description": "tex",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e3cc2926dc74eabbf6429f7a0436287",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nver_list = IN[0]\r\nOUT =[]\r\nfor i,ver in enumerate(ver_list):\r\n\tif \"ВРУЧНУЮ\" in ver or ver=='':\r\n\t\tpass\r\n\telse:\r\n\t\tx=IN[1][i]\r\n\t\tOUT.append(x)\r\n\t\t",
      "VariableInputPorts": true,
      "Id": "d456a566ce90470e86b54b0f5d250f8d",
      "Inputs": [
        {
          "Id": "63aa6e89690645d7b3cc6f44a1e947a0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33ddf9b8c12e4cf5be488ccdec8199ab",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f88a19cea4e4e50b2320e0f61defdf4",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "67f804da65d045aca395b58e026c26f2",
      "Inputs": [
        {
          "Id": "d6c28a8839f24add84ebba52281b40fa",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57503794c91b4962925cd8970e40ff1e",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "50cb16bd39fe4bf5b758acfa2f5824d2",
      "Inputs": [
        {
          "Id": "0294c58abfac45d98bc1032a4fd4bc42",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "778beee137684bfca0c599bb9952da4c",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "d70e7951ea23460eabd0c241b70165b1",
      "Inputs": [
        {
          "Id": "b9f1d207ea694f55af77af522160b827",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60d33c0c03544b82aabd62ae8b1f1bf3",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "4d7c7a6493c54d47bba6adbe6818d4eb",
      "Inputs": [
        {
          "Id": "f83f513eedd04f8489e6653a39d243bf",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eca6bb11f45c4a72970998c0c0a4bdc4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "de9c205ca2b84e6b972c8e66b2b65d81",
      "Inputs": [
        {
          "Id": "86922d2d36154f7faa6c075ecb0602fa",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6dd0277afe4344bebed9f4b7b5c9ce2e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "1148bbc364ae40bdac96f2af9cad6006",
      "Inputs": [
        {
          "Id": "38595f21f34640bdbc4e64e4ebc6cf5d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8dbe13497c26445da4002e00ad483e20",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7fbe2e7213347248408297b56595034",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73f0d9efb5934b6a8291ac5897ea8511",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";\n\"СКРИПТ\";\n\"ВРУЧНУЮ\";",
      "Id": "f9a304fca9f54ec980e1bf513f520c17",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1cc78b77ad9b42bab71061abd5e2ad2a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d50a9c6196754a29a788402baf97bd3c",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ccf6b92f5e4442896fd47db173a435e",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";\n\"СКРИПТ\";\n\"ВРУЧНУЮ\";",
      "Id": "fe12ea8b82bb40d38b8badf1b11de59a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f8c175aa577d4d00a56408e710526864",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "454295e966eb4d8da2f57fdcfdd0f57e",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17ddce5c3fe842998d05c601e6ca3027",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "64f727e9674b45599fc421d20d46404d",
      "Inputs": [
        {
          "Id": "0324e17479934351aa2535e4c6e94b8b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9e439049bb04d7a9725def772f9e110",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "880ef3d3863c4981946a36aa6743261b",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3957535095fc4ef8a7339f6c1f938abb",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";\n\"Не перенесено\";",
      "Id": "d3387424fc144d18b444eb3f398b0321",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b3a42b7f9584378909deeaaf6161a47",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "774ae1cb56084bb6af10f04261168760",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "63479b5f2c92482ebce5817e75a6b92c",
      "Inputs": [
        {
          "Id": "f6db8d0ebc9f4c48aa75087cce06c773",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e22ec9b833e48498ae2c853b949328d",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46ae1adb8ce740c09dc5f853b2b5231c",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "beb1d5bc19b8458c9281790f650ca8f3",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "7feaa7a62d4a43ab9160ab1ea07b5927",
      "Inputs": [
        {
          "Id": "ce771bd8901b419c98fda9a79eeadcd8",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45ac9e5977974db3a3e1106f204a3ec0",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a4cc8721f5a4b959d44291f5f85d290",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "178bf87c82e149e4a198e270575398a0",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";\n\"Не перенесено\";",
      "Id": "c2a71b28d3954729ab38823f9bbd16ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "057ad64437b5496cbb3e5fd49935d8de",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61747fab78e8478093c1b7e9b972f49d",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "cc52e9470083422b93ac032d1b87b4f0",
      "Inputs": [
        {
          "Id": "cfc69a6a289b4a49934f85f8577779ad",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a570a6d3c6542c6851b3191e0297289",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "447885faf75a4f98ae0c076509955ef1",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";",
      "Id": "6a675453fa354569bf619c17fc12804a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ee8e48b8950c452c88ca503fb6ae4647",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\nOUT = []\r\nfor par1,par2, elem in zip(IN[0],IN[2],IN[1]):\r\n\t\r\n\tif str(par1) == \"СКРИПТ\" and 'V0' in par2:\r\n\t\r\n\t\tOUT.append(elem)\r\n\t \r\n\t",
      "VariableInputPorts": true,
      "Id": "eb7d22a92e394848a5c881d7058cb180",
      "Inputs": [
        {
          "Id": "542d2240f1cb492ca40850893a057504",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caed0d3c41944f009e0551377071e268",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c873d7618b24a93bce994a32cbb8698",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "592f99aebb4e437ead76e03b126c3097",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "9f673a7dd27841ddbe1aca11d07f3e4f",
      "Inputs": [
        {
          "Id": "18be99f5f3764d58b877ad498eb340f3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2228fb520ec4ae09d63fda72cf139db",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9648934537f4aceb6a1649a88d15de6",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "79352fea86e94737956793139bc19c2d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "56d6157bbbf64ea193a42db5adf56ce5",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\nOUT = []\r\n\r\n\r\nfor i in IN[0]:\r\n\ttry:\r\n\t\tsplit_list = split_string(i,'|')\r\n\t\tdepth = split_list.pop(5)\r\n\t\twidth = split_list.pop(4)\r\n\t\tlenth = split_list.pop(3)\r\n\t\tif float(depth)<=5 or float(width)<=5 or float(lenth)<=5:\r\n\t\t\tpass\r\n\t\telse:\r\n\t\t\tOUT.Add(i)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "e9344a934b2d4574870245c169b27200",
      "Inputs": [
        {
          "Id": "57f47f716eb44391bb0ac4b16d768902",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5320fa85a0c742998d91c1787b471643",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5d0e91aa422948d49764d01bf8dfa192",
      "Inputs": [
        {
          "Id": "bdc23bf6734347179a83aa97c6a7ba9f",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e91643f6b5334163b0a328d2b7cec600",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "91743249ade34a01af0f5a508b71807d",
      "Inputs": [
        {
          "Id": "838a79c4644a4433b869a834dd95cec7",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91cac56194704beea55232db43f7e996",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e67419c30fc43f1a01737dbe2dca22b",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "7f26f0c7df1143bfb47bd5f864ee4c4c",
      "Inputs": [
        {
          "Id": "83a032dc82724296bbbbf1c851a7dc87",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91a013a4487648b38691ecc126ec42fe",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tsplit_list.pop(6)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "64f3340a824e448684d4a778ffdb3e3a",
      "Inputs": [
        {
          "Id": "a622374e4f4b41edbe09d9375b2560f5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d064757231a44078ca211b42ca2cbae",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tsplit_list.pop(6)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "eb507274b6f14694898fd99d1f1f6499",
      "Inputs": [
        {
          "Id": "a76b3905377c462f8d50653a80ab9c1b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c035e989f5c7492789039b3af429392f",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "608b346f1db844f2ad6d5fe2ad01858b",
      "Inputs": [
        {
          "Id": "3a246f4e87f84f5083b0446a31fcc172",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e064556a01904768b7028cfc9759f9f7",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8be0a64075af4f3a98490e7f6eb8ed3a",
      "Inputs": [
        {
          "Id": "7c379aa91dd041e88401e0a6a19c068f",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f19b2ac507f44eaa6c9eb896130006b",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "39306901b1e044578be1d0835425e1be",
      "Inputs": [
        {
          "Id": "f69703e404a14b5999ec3be000675ed4",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ff64ff957e34debaa3fc1793cc1b0aa",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca5caf107bf84382997598e5f79091b3",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\n\r\nall_past = str(IN[0])\r\nOUT =[]\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\nlist =  []\r\nfor el in IN[1]:\r\n\tlist.append(el)\r\nfor el,out in zip(IN[1],list):\r\n\tel = split_string(el,'|')\r\n\tel.pop(-1)\r\n\tstrrr = ''\r\n\t\r\n\tfor i in el:\r\n\t\tstrrr+=i+'|'\r\n\tstrrr=strrr[:-1]\t\r\n\t\t\r\n\tif strrr in all_past:\r\n\t\tOUT.append(out)",
      "VariableInputPorts": true,
      "Id": "679fb7a3686441899d83e105665e7427",
      "Inputs": [
        {
          "Id": "0519180e396f46fb9651410d6b35bb60",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04bccf47df824b709adca1d2d644da96",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7081fdbdd3464141a097012bf6ff7186",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Replace@string,string,string",
      "Id": "475953bb7ec14f3f9f2aa05b4f62f837",
      "Inputs": [
        {
          "Id": "27862df65d34483ebf04603b56dc4d44",
          "Name": "str",
          "Description": "Строка, в которой требуется заменить подстроки.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a630009126145c28f4f3fee596349c3",
          "Name": "searchFor",
          "Description": "Текст, который требуется заменить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acea751cffc246ee9f6b27497a668a4b",
          "Name": "replaceWith",
          "Description": "Текст для замены.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbaec42b72ca4773bb1a55cc11dfc049",
          "Name": "str",
          "Description": "Строка с произведенными заменами.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Замена всех текстовых вхождений строки другим текстом.\n\nString.Replace (str: string, searchFor: string, replaceWith: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "1ecec1006020467b82c6cd4595bb4efb",
      "Inputs": [
        {
          "Id": "bc2830b39af94cfa8a0e8009806f4325",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccd7b20523ed456ea63ebb1d14d121da",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "527f940646164be8858715c76da0ce82",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff52545685cc4731882dc5d5628170b6",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "035af58ad3a4426d930dc71885804fa6",
      "Inputs": [
        {
          "Id": "84e281cf80a0459993e6077955eee817",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a17c6f5046ea4d32b97ae25ff1e4c756",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dc00fca214d496787d6427dccd0f37c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "37d07229779641aab66848d1a48edad8",
      "Inputs": [
        {
          "Id": "8bcda68ce10c4e35ad30e28ee323d69f",
          "Name": "list",
          "Description": "Список, который необходимо проверить на присвоение всем элементам значения «False».\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "283caf656e9a45cd8c12f1fa4c9e0c21",
          "Name": "bool",
          "Description": "Присвоение всем элементам значения «False».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определяет, являются ли все элементы заданного списка логическими и имеют ли они значение «False».\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "502639771ba34ec2ad3faa7e4984c993",
      "Inputs": [
        {
          "Id": "64e5513e931b4ffe8d2dff01eab9b0ae",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b79eeb0e09643c09aeea3e7ae105ac1",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64ccf2d0ccfa48f1a9c64887bbbde839",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(el,!x)[\"in\"];\nDSCore.List.FilterByBoolMask(el,!x)[\"out\"];",
      "Id": "c734ce711ff249529aaec66cd02aaa97",
      "Inputs": [
        {
          "Id": "86447f2e59eb4696982b0df0b80e63e7",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "479f0d8e83034e3286f2c4e1cff16482",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89686e022d884120a4e95ed25659ea26",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59690b0b67f84e9487e81ecadc941577",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "da31a3d20e864a0da737a5c20783a1d3",
      "Inputs": [
        {
          "Id": "f523b825923941c085afa5ea42f35847",
          "Name": "x",
          "Description": "Значение X.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "892c25e2fa8449e29c23b7d4af4ce5a2",
          "Name": "y",
          "Description": "Значение Y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "205ab99f63c445cc873a10d4dac434d5",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "X равно Y?\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//Параметр;\n\"SD_Версия задания\";\n//Текст предупреждения;\n\"|Удалено\";\n//Текст предупреждения;\n\"\";",
      "Id": "74a33a9a46ee44ec85dee6ec0d475ecc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a6f8e025fec4769a846cfa25b840a5e",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1ebc83f15e046bb93b0e18d7939ec52",
          "Name": "",
          "Description": "Значение выражения в строке 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97bb25eaf69e4719916524ef6e1412e6",
          "Name": "",
          "Description": "Значение выражения в строке 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "0cbf414671534e4d84c33541ac9b5a48",
      "Inputs": [
        {
          "Id": "9f6a678e7b7a4cc09f30d28f5857cdd1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93c85c66af2346da9a44e5fced2b6e19",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "961be2cde1a64337a5e59a4cdf25fd65",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0987a77fdc7f43c6a273141ebc60aace",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\tsplit_list.pop(8)\r\n\t\tsplit_list.pop(0)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "f564dc7311314cfc92ae79f71f208ce5",
      "Inputs": [
        {
          "Id": "7ffcd86702724eb19952ee83ccbbee65",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9048010a4004372a09a6273ca3d9e9b",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x+Предупреждение;",
      "Id": "3d5ae8b66bf84b799e28de6030453ec5",
      "Inputs": [
        {
          "Id": "40f6aa73eaa549a38a67182e5a86bcbb",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26c0dd45d3e047e7b7ff247779c598b4",
          "Name": "Предупреждение",
          "Description": "Предупреждение",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4ecb4e516db4b5489f6f1afe1883d76",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "a31de63be5034a65a29adb893ace953b",
      "Inputs": [
        {
          "Id": "485795d981e14c019f417b32c2397029",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c07fa7faddef494cbcbc10f12b69c037",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab70ba61a2e649cd827599737231929c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "3c74558ddc884721a4c8fee6f150d08b",
      "Inputs": [
        {
          "Id": "0c513c70dee8476480236bd0af862a3d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f81e0dfccb64453b8d0ffaafcc6c9ffc",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98ef0f28aca24340946ea34fee39b61b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "f83b8287db2847208daa085f39cf7f2b",
      "Inputs": [
        {
          "Id": "a9162adb0f0e4b3da5e36b18f7473ee9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1c3a260562d497283d388da814c0eb3",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fddefe7fd9e4c22a856d06d410af7b3",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(el,DSCore.String.Contains(str,tex))[\"out\"];",
      "Id": "a4b5e9426b2e44c38ed3fd1e83ab7912",
      "Inputs": [
        {
          "Id": "27191c6451c046e3b57968787631f593",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5568ee12e17a4c04940b21f46f811b35",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13ea3a12325e4e70aa092b4d7767bc66",
          "Name": "tex",
          "Description": "tex",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "222bf50285ba4471b8fe212bb11e0a7f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn < 4:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(2)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr + \"Удалено\"\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "be7d7530222340bab4a84e6bffd452eb",
      "Inputs": [
        {
          "Id": "954b07c8d78c49569cdc148e8252f3fe",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "190fc6e7d41d4ce691f130e46c8b1944",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "all_pastDSCore.List.FilterByBoolMask(el,\n\t\tDSCore.String.ToNumber(\n\t\tDSCore.String.Substring(str,1,1)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t>0)\n[\"in\"];",
      "Id": "9fbdbe1a28e94913a1550ba9b6674581",
      "Inputs": [
        {
          "Id": "d8114ad3d6df4c62ab312fc1f43a1746",
          "Name": "all_pastDSCore",
          "Description": "all_pastDSCore",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "262e6f0be8dd4a2aa38ecd0546d598ed",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f220ddf104f84a8caae2b3458450b196",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee488a38f83948be96dcd966e42bd5eb",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "de5a0664f27846b888b72dfecaaac2bc",
      "Inputs": [
        {
          "Id": "770e98469f50465b86bdab7f5fc1023e",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c104867822174f73a8aff174a45e16b9",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\nOUT = []\r\n\r\n\r\nfor i in IN[0]:\r\n\ttry:\r\n\t\tsplit_list = split_string(i,'|')\r\n\t\tdepth = split_list.pop(5)\r\n\t\twidth = split_list.pop(4)\r\n\t\tlenth = split_list.pop(3)\r\n\t\tif float(depth)<=5 or float(width)<=5 or float(lenth)<=5:\r\n\t\t\tpass\r\n\t\telse:\r\n\t\t\tOUT.Add(i)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "d30d153d54b4407d90576a4a5183b3cb",
      "Inputs": [
        {
          "Id": "010f90d0456a49899d12a02ac300d3e1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3ee93c4ad9a42beb3014d26af375661",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tsplit_list.pop(6)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "56b46f6b41fe4d37ae6b4db55c498da0",
      "Inputs": [
        {
          "Id": "0c6ca1693daf4e938fa6150a6c5dbddf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "704a7fee9a6044c4ba5d4e3a1bfdca83",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "0457d868e60340e48ca5d3bb87e5a141",
      "Inputs": [
        {
          "Id": "f3b2216ef1a644b78d27b156683c0be5",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6d5aa31be89419c9958c3b2b6dfafa6",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "c665cb169d364f03966706e8a8b5baf6",
      "Inputs": [
        {
          "Id": "dfc9476ba10044679016bd6ae2ff4942",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "affbeb91f2104859b467bf5351e38d8b",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af1135f0dfae46cdb471826e772e1b55",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\n\r\nall_past = str(IN[0])\r\nOUT =[]\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\nlist =  []\r\nfor el in IN[1]:\r\n\tlist.append(el)\r\nfor el,out in zip(IN[1],list):\r\n\tel = split_string(el,'|')\r\n\tel.pop(-1)\r\n\tstrrr = ''\r\n\t\r\n\tfor i in el:\r\n\t\tstrrr+=i+'|'\r\n\tstrrr=strrr[:-1]\t\r\n\t\t\r\n\tif strrr in all_past:\r\n\t\tOUT.append(out)",
      "VariableInputPorts": true,
      "Id": "3cecdb8840ba4b4eb11ec8ebac7fe646",
      "Inputs": [
        {
          "Id": "7d7c81cc31c44991bedfc46c3df38f31",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef3bcddb8639452c90d51b496b9e7799",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67fc815a6aec4793b0d003fab1aaf5a8",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tsplit_list.pop(0)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "4be7906e3ecb481d98937cf572172982",
      "Inputs": [
        {
          "Id": "e0ebdeea2fc04d8eb1c76f28b89e96d2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bdf8ed8176641dbbf17a96f9444a8aa",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\nfor i in IN[0]:\r\n\t\r\n\tsplit_list = split_string(i,'|')\r\n\tlenn = len(split_list)\r\n\t\r\n\tif lenn > 6:\r\n\t\ttry:\r\n\t\t\tsplit_list.pop(8)\r\n\t\texcept:\r\n\t\t\tpass\r\n\t\tsplit_list.pop(6)\r\n\t\tstrr = ''\r\n\t\tfor i in split_list:\r\n\t\t\tstrr+=i+'|'\r\n\t\tstrr = strr[:-1]\r\n\telse:\r\n\t\tstrr = i\r\n\tOUT.Add(strr)\r\n\t\r\n\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "1c80f5fceedb4470b1f8ea9dfc13ea3b",
      "Inputs": [
        {
          "Id": "155f589e81d242108edce7e383c42efc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "547ca899b4b64054a2a82763ee147419",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "85ab869f842544ca99de735ce6366f3c",
      "Inputs": [
        {
          "Id": "eaf132182ca84e5aaa5b7efe084e6e9b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "223ff3e4fbf24895a7aa686393307b6f",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed4cca5e9cc843fb8dd8b5ab69baa42d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nver_list = IN[0]\r\nOUT =[]\r\nfor i,ver in enumerate(ver_list):\r\n\tif \"ВРУЧНУЮ\" in ver or ver=='':\r\n\t\tpass\r\n\telse:\r\n\t\tx=IN[1][i]\r\n\t\tOUT.append(x)\r\n\t\t",
      "VariableInputPorts": true,
      "Id": "7c13de9c0c6a4025b95a033b3d7084a4",
      "Inputs": [
        {
          "Id": "fd1465edf060439aae5849509fb3f9cf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89350c85fcb143f5ad693a0ba564b778",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cedd177dcff4951b9f915aea7871b80",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "4347ed8af63a4d6e9a80dc524e5d55fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e1b613a610964567899157f4c6427910",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "c07b5db6cc364818a310c23317ecbc41",
      "Inputs": [
        {
          "Id": "f78b1bced54a40089dc0b079887e4968",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33684ab2444b4d0c9fdd5d3a413e1bd3",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67ab17951b29448392c2d3558d30b9b6",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "9c0d1fc1f0c54f5ea9330ea76aa9609d",
      "Inputs": [
        {
          "Id": "faa296346f604bb3b6980805d192b7c9",
          "Name": "Family Type",
          "Description": "Тип семейства.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50954b9cf4a140c19a6e29ba3fb9827e",
          "Name": "Elements",
          "Description": "Список элементов, соответствующих запросу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенного типа семейства."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "d0bec0dde5e440439464f077bab5c141",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "62076cb421b047d0857a881f376897eb",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2a032a04a5bf4e04a79d52d43988eae9",
      "Inputs": [
        {
          "Id": "9d9f4e1bd8a84c928b8f907ecf49dafc",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c05c946d3753406aa69a0c978ee26be4",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "afdfa34680654e0492d554ae7d9cdaed",
      "Inputs": [
        {
          "Id": "df28412643214eb5a87124a4cf4a5d5e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "174afeb1db16419299a2373fe658da88",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6359a125910c4a5eb661467b5be15c63",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "e16769d8e5c4489080d736dad3e974ff",
      "Inputs": [
        {
          "Id": "082bc75281b14238ae7ea394ebc13570",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3abdba888d2c4b9ea5694a98d79fa62e",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1e2a572df5b4514928f4e3635229f50",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "adbc0c65559f49f793d47082294f777c",
      "Inputs": [
        {
          "Id": "3fa432eb6a0341b7b79db56efa219da7",
          "Name": "list",
          "Description": "Список, который необходимо проверить на присвоение всем элементам значения «False».\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e49ee38d8d7419186694069340d6345",
          "Name": "bool",
          "Description": "Присвоение всем элементам значения «False».",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определяет, являются ли все элементы заданного списка логическими и имеют ли они значение «False».\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "d66138a0aa6a454bb86cd006778462f7",
      "Inputs": [
        {
          "Id": "8ccf3da593244ebc8c80466b9ea44236",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0be63def07014239a7d87b3183c8311c",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";",
      "Id": "dfe1a05070aa402282cf24be6c5406c6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9adf595a9f474450954ee6054501cdf2",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\nOUT = []\r\nfor par1,par2, elem in zip(IN[0],IN[2],IN[1]):\r\n\t\r\n\tif str(par1) == \"СКРИПТ\" and 'V0' in par2:\r\n\t\r\n\t\tOUT.append(elem)\r\n\t \r\n\t",
      "VariableInputPorts": true,
      "Id": "ec8a01657e7d478e9f4095ef824e01d0",
      "Inputs": [
        {
          "Id": "a7ab074e728f4239aad349aa441c4e93",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b12d5a17f620421ebe5be0eb5043b794",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "828ecad83d194e30be3d401ba27eb892",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9eb186e710fe4dcc98b9edbc0df71c2a",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "e06f8ff31a1143bbae4b06ce5cbd2d2a",
      "Inputs": [
        {
          "Id": "2e1f594797de444b8af66acbbb72e516",
          "Name": "x",
          "Description": "Значение X.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a12efaf5415847ca93376bb5550fb3b2",
          "Name": "y",
          "Description": "Значение Y.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b3d14701cba42249323adb8a69ec1ce",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "X равно Y?\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Revit.Elements.Elements.Delete@Revit.Elements.Element",
      "Id": "5acee88e04794e1ebd6ecf1c93950306",
      "Inputs": [
        {
          "Id": "c8739f88dccc4484a540f718ac85d25d",
          "Name": "element",
          "Description": "Element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62a5f3847e8843609e68b8832a34318a",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Delete element from Revit DB.\n\nElements.Delete (element: Element): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DSCore.List.FilterByBoolMask(el,!x)[\"in\"];",
      "Id": "00a661a91bea4a428f303b127edb143b",
      "Inputs": [
        {
          "Id": "5715f188c9eb45fa9cbec444ce5b4572",
          "Name": "el",
          "Description": "el",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2fb433d3e0e458295658f731509862e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8a51f1230ac4e468be03cd567715b06",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "fe726967dced41a6b4f1f84fb3e7d4bc",
      "Inputs": [
        {
          "Id": "39da8a1e14ad4a518015d7ccac562184",
          "Name": "string0",
          "Description": "Список строк для объединения.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee8e0ee991a44616ae515ea0c7ac780c",
          "Name": "string1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1637cb67ec654e669a3943e020b1386e",
          "Name": "str",
          "Description": "Строка, созданная на основе списка строк.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Объединение нескольких строк в одну строку.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Не загружено семейство \";\n\"ОК\";",
      "Id": "fb2fb1ebba114860a098e8402a9c5d58",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52400b32d7bd4103b3ac1f376e627464",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdc4741d9c5f4678ba2dfc127b3c61b2",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Перекрытия_Прямоугольное\";",
      "Id": "fff89da8e6434764bce5c4d32cbd2fad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a53f663e36742acb96958edc0607867",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "24239079a83741c5b129bc03ff29c6fe",
      "Inputs": [
        {
          "Id": "e0771f277fad41fa9300d149336c484d",
          "Name": "test",
          "Description": "Блок проверки",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62163a57907e4c1891db7031f7a90f88",
          "Name": "true",
          "Description": "Истинный блок",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0996eb4f31ac4ed8a07c7ccd5efdd0e9",
          "Name": "false",
          "Description": "Блок False",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7385c99592314eb2b3654a32f87aba69",
          "Name": "result",
          "Description": "результат",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Условное выражение"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Family.ByName@string",
      "Id": "5bc8734a16364fa99cd532e2dcfb5d8a",
      "Inputs": [
        {
          "Id": "93dbc378fd6046818ed0335421a9b228",
          "Name": "name",
          "Description": "Имя семейства в текущем документе\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20509b3337584771811623ab99d2e8c0",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение семейства на основе текущего документа при условии наличия уникального имени\n\nFamily.ByName (name: string): Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "a6d15f3bbeb744099b882a6af0edb384",
      "Inputs": [
        {
          "Id": "320c3161a866405b834f18e850a5a761",
          "Name": "obj",
          "Description": "Объект для проверки.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a8f9a7e8eaf47dbb863984376024372",
          "Name": "bool",
          "Description": "Установлено ли для объекта нулевое значение.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Определение того, имеет ли данный объект нулевое значение.\n\nObject.IsNull (obj: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "b2bee339041d4be79bdb14fd9da35d9b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80cd5ef72f1c443ebeaa2a00c4bf3284",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "1f6ba3d5dc0a44c7a12e9021c893c4e8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "16361bc481924556966b9abbf44eca78",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "9156a17f2f5c489f911abb9c834cc6ca",
      "Inputs": [
        {
          "Id": "3112badf26034923b51b7bf2b8b2d100",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать, исключив повторы.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "150ae69aba5f457ca7197b2140d53eb8",
          "Name": "list",
          "Description": "Отфильтрованный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание нового списка, содержащего все уникальные элементы из заданного списка.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "b45852286f7f4acebd44b8752150f139",
      "Inputs": [
        {
          "Id": "da8ef2d125d84cf6bb2411a5ef944541",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать, исключив повторы.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8fb37ad3a85246359404dac2cd038429",
          "Name": "list",
          "Description": "Отфильтрованный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание нового списка, содержащего все уникальные элементы из заданного списка.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n\r\nAll_curves = IN[0]\r\n\r\ndef flatten(l):\r\n\tflat_list = []\r\n\tfor sublist in l:\r\n\t    for item in sublist:\r\n\t        flat_list.Add(item)\r\n\treturn flat_list\r\n\t\r\n\t\r\ndef curv_intersect_curve(curve, cur):\r\n\tP_start = curve.StartPoint\r\n\tP_end = curve.EndPoint\r\n\t\r\n\t\r\n\tcur_start = cur.StartPoint\r\n\tcur_end = cur.EndPoint\r\n\t\r\n\tif str(P_start) == str(cur_start) and str(P_end) == str(cur_end):\r\n\t\tif Line.ByStartPointEndPoint(cur_start, cur_end).Length>=curve.Length:\r\n\t\t\tline = Line.ByStartPointEndPoint(cur_start, cur_end)\r\n\t\telse:\r\n\t\t\tline = curve\r\n\t\t\t\r\n\telif str(P_start) == str(cur_start) and str(P_end) != str(cur_end):\r\n\t\tif Line.ByStartPointEndPoint(P_end, cur_end).Length:\r\n\t\t\tline = Line.ByStartPointEndPoint(P_end, cur_end)\r\n\t\telse:\r\n\t\t\tline = curve\r\n\t\t\t\r\n\telif str(P_start) != str(cur_start) and str(P_end) == str(cur_end):\r\n\t\tif Line.ByStartPointEndPoint(P_start, cur_start).Length>=curve.Length:\r\n\t\t\tline = Line.ByStartPointEndPoint(P_start, cur_start)\r\n\t\telse:\r\n\t\t\tline = curve\r\n\t\t\t\r\n\telif str(P_start) != str(cur_end) and str(P_end) == str(cur_start):\r\n\t\tif Line.ByStartPointEndPoint(P_start, cur_end).Length>=curve.Length:\r\n\t\t\tline = Line.ByStartPointEndPoint(P_start, cur_end)\r\n\t\telse:\r\n\t\t\tline = curve\r\n\t\t\t\r\n\telif str(P_start) == str(cur_end) and str(P_end) != str(cur_start):\r\n\t\tif Line.ByStartPointEndPoint(P_end, cur_start).Length>=curve.Length:\r\n\t\t\tline = Line.ByStartPointEndPoint(P_end, cur_start)\r\n\t\telse:\r\n\t\t\tline = curve\r\n\t\t\r\n\telse:\r\n\t\tline = curve\r\n\treturn line\r\n\r\ndef uppdate_curve(curve,curves):\r\n\tfor cur in curves:\r\n\t\tcurve = curv_intersect_curve(curve,cur)\r\n\treturn curve\r\n\r\n\r\ncurves = flatten(All_curves)\r\n\r\nnew_curves_list = []\r\n\r\n\r\n\r\nOUT =uppdate_curve(curves[2],curves)\r\n\r\nfor list_curvs in All_curves:\r\n\tnew_curvs = []\r\n\tfor curv in list_curvs:\r\n\t\tcur = uppdate_curve(curv,curves)\r\n\t\tnew_curvs.Add(cur)\r\n\tnew_curves_list.Add(new_curvs)\r\n\t\r\n\r\n\r\n\r\nnew_curves_list1 =[]\r\ncurves = flatten(All_curves)\r\nfor list_curvs in new_curves_list:\r\n\tnew_curvs = []\r\n\tfor curv in list_curvs:\r\n\t\tcur = uppdate_curve(curv,curves)\r\n\t\tnew_curvs.Add(cur)\r\n\tnew_curves_list1.Add(new_curvs)\r\n\r\nOUT = new_curves_list1\r\n\r\nOUT = []\r\nfor i in range(len(new_curves_list1)):\r\n\tout_cur_list = []\r\n\tfor cur1, cur2 in zip(new_curves_list[i],new_curves_list1[i]):\r\n\t\tif cur1.Length>=cur2.Length:\r\n\t\t\tout_cur_list.Add(cur1)\r\n\t\telse:\r\n\t\t\tout_cur_list.Add(cur2)\r\n\t\t\r\n\tOUT.Add(out_cur_list)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nOUT = IN[0]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "2a485df7d58a4ddcb2f9c48e52b59124",
      "Inputs": [
        {
          "Id": "aeba33686a0d4d68bbd15a1af4b7c81a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7ec181bbe084a498dd2845bff4c48b8",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ndef c2p(s):\r\n\tif \",\" in s:\r\n\t\treturn s.replace(\",\", \".\")\r\n\telse:\r\n\t\treturn s\r\n\r\ndef num(s):\r\n    try:\r\n    \treturn float(s)\r\n    except:\r\n    \treturn s\r\n\r\ndef toInt(s):\r\n\ttry:\r\n\t\tif s % 1 == 0:\r\n\t\t\treturn int(s)\r\n\t\telse:\r\n\t\t\treturn s\r\n\texcept:\r\n\t\treturn s\r\n\t\t\r\ndef co(s):\r\n\treturn toInt(num(c2p(s)))\r\n\t\r\ndef cn(s):\r\n\tif (isinstance(s, list)):\r\n\t\treturn [cn(i) for i in s]\r\n\telse:\r\n\t\treturn co(s)\r\n\r\nOUT = [cn(i) for i in IN[0]]\r\n# Разместите код под этой строкой\r\n",
      "VariableInputPorts": true,
      "Id": "ec6505c10a2e425abecf8bc8af7179ad",
      "Inputs": [
        {
          "Id": "bcf19578e3f44c2b8570c140ef7c1b98",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b30d51416684ca99fba9c820d91cf41",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ndef c2p(s):\r\n\tif \",\" in s:\r\n\t\treturn s.replace(\",\", \".\")\r\n\telse:\r\n\t\treturn s\r\n\r\ndef num(s):\r\n    try:\r\n    \treturn float(s)\r\n    except:\r\n    \treturn s\r\n\r\ndef toInt(s):\r\n\ttry:\r\n\t\tif s % 1 == 0:\r\n\t\t\treturn int(s)\r\n\t\telse:\r\n\t\t\treturn s\r\n\texcept:\r\n\t\treturn s\r\n\t\t\r\ndef co(s):\r\n\treturn toInt(num(c2p(s)))\r\n\t\r\ndef cn(s):\r\n\tif (isinstance(s, list)):\r\n\t\treturn [cn(i) for i in s]\r\n\telse:\r\n\t\treturn co(s)\r\n\r\nOUT = [cn(i) for i in IN[0]]\r\n# Разместите код под этой строкой\r\n",
      "VariableInputPorts": true,
      "Id": "a593df0487b14a7eae48980e5e25bea7",
      "Inputs": [
        {
          "Id": "75c196994cb14ce9a67cb0ec44255670",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b356275ecf7b4bcfa517fb994988feab",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nOUT =[]\r\nscript = [] \r\nvrych = [] \r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nfor el, par in zip(IN[0],IN[1]):\r\n\tif par ==\"СКРИПТ\":\r\n\t\tscript.Add(el)\r\n\telse:\r\n\t\tvrych.Add(el)\r\n\t\t\r\nOUT = [script,vrych]",
      "VariableInputPorts": true,
      "Id": "9b670c46f31a40c9bc1405885ac3de4a",
      "Inputs": [
        {
          "Id": "d9b7a707e0d9475493f994f1d2c78bc5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65893ab3397d48e786f62594ae53685a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1b809168af34316b3ec62e3e5be79fc",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "d30dd761cbd44b5294a21984488d0335",
      "Inputs": [
        {
          "Id": "507a589249a94539b6df08cb8d7523b4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41a5100a2fc544919f8e89310d43b1b3",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d63f4faa53049149647556ca62871e1",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "72dc7048835d4c32bda0f2507b494766",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "05caef533ec8472581a14e028fcadd82",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "771cc8d14a96402ab428eaa8c63ad1a2",
      "Inputs": [
        {
          "Id": "c5425f5645854085a970c60ac6376f68",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99b3ae32a830434e9342f464e168ff91",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ace0992a2cc54bfdb29f280b312ddc0e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "c26ae3384f934dd49721437731ac6253",
      "Inputs": [
        {
          "Id": "bde3f605d57145aea2351ac1714b19a6",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7054859f3514a41be99c432fb00dc97",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3264910fc804f55a6fd7055e0e26526",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "35d2fb3cdda64fc4bc78b30d455cd39d",
      "Inputs": [
        {
          "Id": "a0d4a3f432ba4bd39e6cb05c8daf92f8",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbf83b9a84b04f2e84c0a1071d4d984e",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6a1780430f14f25b79eef029afc4456",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bc37c9d45f74d3a8a5f9f3ee422fd9d",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= IN[0]\r\notv_rot =[]\r\notv_loc = []\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/10)*10\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/5)*5\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\t#rot = round(rot/10,0)*10\r\n\totv_rot.Add(rot)\r\n\t\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\notv_rot=(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\nOUT = []\r\nstr_list = []\r\npereneseno =[]\r\nver_list = []\r\nfor i, el in enumerate(otvs):\r\n\tif int(otv_rot[i]) == otv_rot[i]:\r\n\t\trot = int(otv_rot[i])\r\n\telse:\r\n\t\trot = otv_rot[i]\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Y)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Z)/10)*10)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(rot)\r\n\tstr_list.Add(strrr.replace('.', ','))\r\n\r\n\r\nfor i, sd in enumerate(IN[1]):\r\n\tsplit_list = split_string(sd,'|')\r\n\tnew_str=''\r\n\tif len(sd) == 8:\r\n\t\tver = split_list.pop(1)\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add(0)\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add(1)\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\tif len(sd) == 9:\r\n\t\tver = split_list.pop(0)\r\n\t\t\r\n\t\tx = ''\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add('Не перенесено')\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add('Перенесено')\t\t\t\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\telse:\r\n\t\ttry:\r\n\t\t\tver = split_list.pop(0)\r\n\t\t\tnewver = ver+'|'+str_list[i]\r\n\t\texcept:\r\n\t\t\r\n\t\t\tnewver = 'V0|'+str_list[i]\r\n\t\t#pereneseno.Add('Не перенесено')\r\n\tver_list.Add(newver)\r\n\t\r\n\tif str_list[i][:-4]\tin sd or sd =='':\r\n\t\tpereneseno.Add('Не перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Перенесено')\r\n\t\t\r\n\r\ncor_ver = []\r\nfor i,j in zip(IN[1],ver_list):\r\n\ti= split_string(i,'|')\r\n\ttry:\r\n\t\t\r\n\t\tcor_ver.append(j+'|'+i[8])\r\n\texcept:\r\n\t\tcor_ver.append(j)\r\n\r\ncor_perenes = []\r\n\r\nfor i,j in zip(cor_ver,pereneseno):\r\n\tif 'V0' in i:\r\n\t\tcor_perenes.append('Не перенесено')\r\n\telse:\r\n\t\tcor_perenes.append(j)\r\n\r\n\r\n\r\n\r\nOUT = [cor_ver, cor_perenes]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "cb57a21c675d463fa473d281880adee2",
      "Inputs": [
        {
          "Id": "4fc4dfedca4c4c6e9b13c4e0fe9ea6d7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8b3d0ed19104c968bf80e9a1e9efbe8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8994789242d4f3fa6dca334d2a76f5f",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7007a91c68e34d6fafb3e18b7f24fe01",
      "Inputs": [
        {
          "Id": "90f86ccdfe4449d5bfc9154f9340adff",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8543b3f009b47159b646093b5709ebe",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4e2637fbd834c45afbaa3cc3b5fd35c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";",
      "Id": "374d2ba4ad8a4840affd50087db4eaa4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c450e62a285446459c0f19ff77e90dd6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Перекрытия_Прямоугольное\";",
      "Id": "0e60f40913174f0d8cdc2e82f17c4630",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2295e136e1f74f9f8740a01690e6ea50",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "b536b540d452486f9f2db0dead277525",
      "Inputs": [
        {
          "Id": "3c39a7dcaa7f4016b03585436a985285",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d517609eff764448b611f07deadb457d",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a1c090325934639b95a93792f259470",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "f23086abed5246e1a61b7d0e4c0110b6",
      "Inputs": [
        {
          "Id": "4c41500d69984bb1b689025d9f258492",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d72b6bd6fb145388ca6eb09a766935d",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7e1d727ac35493ebd641ec2f32adbd8",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "d7287c97531640f99490a43110822c70",
      "Inputs": [
        {
          "Id": "bb7ab0686ec3406b87e91817b7b47c49",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31ec0de69f0a45ecbddb9db8592df1cd",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06f3dad9e1b74acd8e22b6cda312c58e",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e796c276c41473d91d025f0743f2d0c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";",
      "Id": "f5995bba78ba46fe941ab655874915fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "672e15dc45124be18e9d5403ea4d16c5",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "1a1a9623acc1441dbf7be10a87e7d10e",
      "Inputs": [
        {
          "Id": "742cb3567eb347d3815159d3cb2845ea",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c01cb9182fd40cea7f6e97cd9d4d7d6",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dea71c4f6e742708c20e6e9850b0bd7",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1567a126311e4a028a5a884d886457fe",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "47031ae573f84fa892f4afc0e3731fb0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8ac1cbcadab496e984409d80a70dfb4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "0a05a4d3c88f40fc90e06bf46cd0fbef",
      "Inputs": [
        {
          "Id": "60d1e74519384d1ab2997b63a03491e4",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed33a92ae87744cc904f2871ef9d118d",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0cbbfdef1104ba99003938b7aff8cee",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "788f1c1464784782a8d6ad2b5aec3065",
      "Inputs": [
        {
          "Id": "912d78e1aace4e39a83294d0711b5c44",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89c460601ffb4f8fa18e5c204f969b7f",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Стены_Прямоугольное\";",
      "Id": "826d0d6ad200423195589f576130b603",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b3cc36e5ce44f408336517ccad41b6e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= IN[0]\r\notv_rot =[]\r\notv_loc = []\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/1)*1\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/1)*1\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\t#rot = round(rot/10,0)*10\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\notv_rot=(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\nOUT = []\r\nstr_list = []\r\npereneseno =[]\r\nver_list = []\r\nfor i, el in enumerate(otvs):\r\n\tif int(otv_rot[i]) == otv_rot[i]:\r\n\t\trot = int(otv_rot[i])\r\n\telse:\r\n\t\trot = otv_rot[i]\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/1)*1)) + '|' + str(int(round(float(otv_loc[i].Y)/1)*1)) + '|' + str(int(round(float(otv_loc[i].Z)/1)*1)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(rot)\r\n\tstr_list.Add(strrr.replace('.', ','))\r\n\r\n\r\nfor i, sd in enumerate(IN[1]):\r\n\tsplit_list = split_string(sd,'|')\r\n\tnew_str=''\r\n\tif len(sd) == 8:\r\n\t\tver = split_list.pop(1)\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add(0)\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add(1)\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\tif len(sd) == 9:\r\n\t\tver = split_list.pop(0)\r\n\t\t\r\n\t\tx = ''\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add('Не перенесено')\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add('Перенесено')\t\t\t\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\telse:\r\n\t\ttry:\r\n\t\t\tver = split_list.pop(0)\r\n\t\t\tnewver = ver+'|'+str_list[i]\r\n\t\texcept:\r\n\t\t\r\n\t\t\tnewver = 'V0|'+str_list[i]\r\n\t\t#pereneseno.Add('Не перенесено')\r\n\tver_list.Add(newver)\r\n\t\r\n\tif str_list[i][:-4]\tin sd or sd =='':\r\n\t\tpereneseno.Add('Не перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Перенесено')\r\n\t\t\r\n\t\t\r\n\r\n\r\ncor_ver = []\r\nfor i,j in zip(IN[1],ver_list):\r\n\tif 'V' not in i:\r\n\t\tst = 'V0'\r\n\telse:\r\n\t\tst = ''\r\n\ti= split_string(i,'|')\r\n\ttry:\r\n\t\t\r\n\t\tcor_ver.append(st+j+'|'+i[8])\r\n\texcept:\r\n\t\tcor_ver.append(st+j)\r\n\t\r\ncor_perenes = []\r\n\r\nfor i,j in zip(cor_ver,pereneseno):\r\n\tif 'V0' in i:\r\n\t\tcor_perenes.append('Не перенесено')\r\n\telse:\r\n\t\tcor_perenes.append(j)\r\n\t\r\nOUT = [cor_ver, cor_perenes,str_list]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "a756cbab6a07467e940ac89846a56b6d",
      "Inputs": [
        {
          "Id": "1b2eea51e62b410c94c54e19ffd2f71f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0beb2bc349964764ab86310c280a4b3f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9254b66eda34dde9dbb967eebcf6920",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "4ba766087a9d4575b5755146a68a4480",
      "Inputs": [
        {
          "Id": "2c57efb50b91486c93dcb4db42408bfb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5174edf4bfaf440c9b326ab6af218d99",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b3630186a364e7e9d235ee6c53ef4de",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";",
      "Id": "9fc46735f23841ec82ff7a08f979e830",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "789f4fc6909a4a868e29cf75a25bab87",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "63096d822ced4c18adf35c795fccf96f",
      "Inputs": [
        {
          "Id": "9b1fd4b0cbac42d7a27e2306f07c63bd",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21746a4edd024f46b8f16c04172b0573",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73846d67cbea43c3bdccf6da1cc41a1f",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nOUT =[]\r\nscript = [] \r\nvrych = [] \r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nfor el, par in zip(IN[0],IN[1]):\r\n\tif par ==\"СКРИПТ\":\r\n\t\tscript.Add(el)\r\n\telse:\r\n\t\tvrych.Add(el)\r\n\t\t\r\nOUT = [script,vrych]",
      "VariableInputPorts": true,
      "Id": "7c87e7c76bdd433f8f7adc391bd5d1f3",
      "Inputs": [
        {
          "Id": "0858729130374e14af55698d611378f7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9440e930b64f40ef98d41010ebde0517",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9de21603e21346fe8269076a6a4c2868",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "d81da4ca732e4b098e4ed2fdf0071fef",
      "Inputs": [
        {
          "Id": "3c60c5d945a5400996f4623ca26cf2e4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e51a24f104c4977aa20a21b5a6a4f6d",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7045a2647df7484fa5ea48a1adac2cd4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "8743561b407b48b69b3eb7ff2e838f51",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "30786f49db4142b5892742cf442400ef",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\ti = round(int(i)/10,0)*10\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\t\r\n\r\n\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/5)*5\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\n\t\r\notvs= IN[0]\r\notv_rot =[]\r\notv_ver = IN[1]\r\notv_loc = []\r\notv_all_poss = IN[2]\r\nOUT = []\r\nnew_loc_list = []\r\npereneseno =[]\r\nlast_loc_list = []\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\t#rot = round(rot/10,0)*10\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\n#otv_rot=angle(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\n\r\n\r\n# нахождение актуального месторасположения\r\nfor i, el in enumerate(otvs):\r\n\tif int(otv_rot[i]) == otv_rot[i]:\r\n\t\trot = int(otv_rot[i])\r\n\telse:\r\n\t\trot = otv_rot[i]\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Y)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Z)/10)*10)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(rot)\r\n\tnew_loc_list.Add(strrr.replace('.', ','))\r\n\r\n#  нахождение фактического положения\r\nfor ver in otv_ver:\r\n\tver_split = split_string(ver, '|')\r\n\ttry:\r\n\t\tver_split.pop(9)\r\n\texcept:\r\n\t\tpass\r\n\ttry:\r\n\t\tver_split.pop(8)\r\n\texcept:\r\n\t\tpass\r\n\ttry:\r\n\t\tver_split.pop(0)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\tlast_loc = ''\r\n\tfor i in ver_split:\r\n\t\tlast_loc+= i+ '|'\r\n\tlast_loc = last_loc[:-1]+ ';'\t\r\n\tlast_loc_list.Add(last_loc)\r\n\r\n\r\n\r\nnew_all_possition = []\r\npereneseno = []\r\n\r\n\r\nfor new_position, last_poss, all_poss in zip(new_loc_list,last_loc_list,otv_all_poss):\r\n\tif new_position[:-4] not in all_poss:\r\n\t\tall_poss= new_position+all_poss\r\n\tif last_poss[:-4] not in all_poss:\r\n\t\tall_poss+= last_poss\r\n\r\n\tnew_all_possition.Add(all_poss)\r\n\r\nnew_all_possition_out = []\r\n\r\nfor i,j,k in zip(IN[1],new_all_possition,new_loc_list):\t\r\n\tif 'V0' in i:\r\n\t\tst = k\r\n\t\tnew_all_possition_out.Add(st)\r\n\telse:\r\n\t\tnew_all_possition_out.Add(j)\r\n\r\n\r\nfor i in new_all_possition_out:\r\n\tx = i.count(';')\r\n\tif x>1:\r\n\t\tpereneseno.Add('Перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Не перенесено')\r\n\r\nOUT = [new_all_possition,pereneseno,new_loc_list,new_all_possition_out]\t\t\r\n\t\r\n#OUT = [new_all_possition,pereneseno]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "740a1af73ee44bbc926f3c7ff10d7a65",
      "Inputs": [
        {
          "Id": "50ea7244b02c47e8b6b1aada04dc6954",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71d8eee545a141ca81c3ca4e4dbbf5b5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4513e13ed7f449ab8eba9f7cf0578804",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dd51ba1f94b4bf395f57cf300168362",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[3];\nx[1];",
      "Id": "5f79a8d385904d4ca20ec84177df1253",
      "Inputs": [
        {
          "Id": "455aebe1d8ba4cedb32220e9f46a43f0",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "297e5121d7de4021b9bc4ff07fe635b8",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bcc55a2541f48c1b4ca0099f1f5b5cf",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "4e8677960f134ab29d4ad5df80c0e502",
      "Inputs": [
        {
          "Id": "a3166bbbd53949d386551c1cd3c42bb9",
          "Name": "Family Type",
          "Description": "Тип семейства.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1afb7471e61470496ebce2f1d751e2c",
          "Name": "Elements",
          "Description": "Список элементов, соответствующих запросу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенного типа семейства."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "435209598bd04a63a9e554308edd7dfc",
      "Inputs": [
        {
          "Id": "95db2645e72f4edcade348ad5443eb8a",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e800748eb874b60b92f66b90ee72653",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d54e3993d01a47acb992b997c89205da",
      "Inputs": [
        {
          "Id": "6366ba85f54448b2ba63fac4f3c98309",
          "Name": "Family Type",
          "Description": "Тип семейства.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1cfd8b3d9bc40598e46eb8be4f871af",
          "Name": "Elements",
          "Description": "Список элементов, соответствующих запросу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенного типа семейства."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "1f01185821b248619f78c438898fea82",
      "Inputs": [
        {
          "Id": "40b1ecb26d434ef1bd3a27d429a85b0b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "202eb7dd3dcc424e8018c2fa16b48364",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d0edd8402054042b2bb6c07d2a7ca55",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "daf2471c46eb469cb6a7a48a478e5ad1",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "f4ac187997f24bacb43993c6f9c0b008",
      "Inputs": [
        {
          "Id": "078977f3038944768d315b22c3ab8d6f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce21b93cabdf4c668a6805276af50893",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "493eafc96e504a479b50824ed0d0dd52",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= IN[0]\r\notv_rot =[]\r\notv_loc = []\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/10)*10\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/5)*5\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\t#rot = round(rot/10,0)*10\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\tloc = otv.Location\r\n\totv_loc.Add(loc)\r\n\r\n#otv_rot=angle(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\nOUT = []\r\nstr_list = []\r\npereneseno =[]\r\nver_list = []\r\nfor i, el in enumerate(otvs):\r\n\tif int(otv_rot[i]) == otv_rot[i]:\r\n\t\trot = int(otv_rot[i])\r\n\telse:\r\n\t\trot = otv_rot[i]\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Y)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Z)/10)*10)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(rot)\r\n\tstr_list.Add(strrr.replace('.', ','))\r\n\r\n\r\nfor i, sd in enumerate(IN[1]):\r\n\tsplit_list = split_string(sd,'|')\r\n\tnew_str=''\r\n\tif len(sd) == 8:\r\n\t\tver = split_list.pop(1)\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add(0)\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add(1)\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\tif len(sd) == 9:\r\n\t\tver = split_list.pop(0)\r\n\t\t\r\n\t\tx = ''\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add('Не перенесено')\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add('Перенесено')\t\t\t\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\telse:\r\n\t\ttry:\r\n\t\t\tver = split_list.pop(0)\r\n\t\t\tnewver = ver+'|'+str_list[i]\r\n\t\texcept:\r\n\t\t\r\n\t\t\tnewver = 'V0|'+str_list[i]\r\n\t\t#pereneseno.Add('Не перенесено')\r\n\tver_list.Add(newver)\r\n\t\r\n\tif str_list[i][:-4]\tin sd or sd =='':\r\n\t\tpereneseno.Add('Не перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Перенесено')\r\n\t\t\r\n\r\ncor_ver = []\r\nfor i,j in zip(IN[1],ver_list):\r\n\ti= split_string(i,'|')\r\n\ttry:\r\n\t\t\r\n\t\tcor_ver.append(j+'|'+i[8])\r\n\texcept:\r\n\t\tcor_ver.append(j)\r\n\r\ncor_perenes = []\r\n\r\nfor i,j in zip(cor_ver,pereneseno):\r\n\tif 'V0' in i:\r\n\t\tcor_perenes.append('Не перенесено')\r\n\telse:\r\n\t\tcor_perenes.append(j)\r\n\r\n\r\n\r\n\r\nOUT = [cor_ver, cor_perenes,get_parameters_elements(otvs, \"Глубина\")]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "c46a9b1c4f8b4d1ea8ee2bc5ed8b12fb",
      "Inputs": [
        {
          "Id": "4b92c092309a4544927a3198429fca02",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd778f8be7e84b6a89f614cb4f5d6840",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3eafed99dd5145c3bf8bd4eef26bdb26",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "fa8c6c1b4252453d9849eca2b76d085a",
      "Inputs": [
        {
          "Id": "7f86a6e9c76e4531bc5cb173dfc0cb05",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8c8944e23d64925bfbd1c613a5dbe7c",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "147cd31af18449b8a00e81b7ae9ebc65",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22dd59eacce1459b88a91e297b898d07",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "36a9499588b74c38a49c003d19a74dff",
      "Inputs": [
        {
          "Id": "0880d1ef31e34419b800b908c79cad60",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f787ec766314822a301d2aa13fedd63",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1bda1973daf4099afe8b845b85563cb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "812a532833de497d9656dc04e3f28174",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ad83e0074fd4d0c8d98d16126b4908c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7d0d2992dc814d4c97ba4f6d007f67c6",
      "Inputs": [
        {
          "Id": "d4c82544283742f3a538d3a87b4a7abd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ff8ba73715b4335b1905c577f950b84",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eecb015bd42d403d8e38c74182ed8cd1",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "6216d6f093b14c488fbaef51cf2db49d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c03673440ec8492a8b086577405ef9a7",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "0e88407213ba483799418b497592d3e4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3ca48b90cbd644e2b991cf935e8eb4fa",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "84463155de594baa981d093e58cd7462",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e068b0fbb7c9462b86c6b4dd8c7ed509",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "f3b41923bfa94f1da98a3ce82b6c9c56",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d68594843424aac860ca83724b71dec",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "46c577f9fe6540a692d33e48c9721632",
      "Inputs": [
        {
          "Id": "9e94717b42e041ca92b2fdd8b23bc190",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34b4a1d913264955b94364451b969764",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1bf5c5aa823948bd831e09f66f02e744",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "dd3915067d9748db94f279aaf690e4ce",
      "Inputs": [
        {
          "Id": "139d95b33c574bdda9bc7daefbb8b01d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6faa83b2eb44418fae1dd6b17f3e1ab7",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd024e11ee854ec898c9266874da47df",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "7c4a47e847374bccb6455263ebea3f6e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ade8aed2d09845888f6ac75d04ca1cf5",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[1];\nx[3];",
      "Id": "3c5e37fc7fd34b44be354f3ee25c2a9e",
      "Inputs": [
        {
          "Id": "2dc097b92e4a4458ad5ad57c494f7985",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1914f7cc07134524b8966fb3cc831f85",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f488f7e135141229f490cdc6a3a63e9",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\ti = round(int(i)/1,0)*1\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\t\r\n\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/1)*1\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\n\r\n\r\n\t\r\notvs= IN[0]\r\notv_rot =[]\r\notv_ver = IN[1]\r\notv_loc = []\r\notv_all_poss = IN[2]\r\nOUT = []\r\nnew_loc_list = []\r\npereneseno =[]\r\nlast_loc_list = []\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\trot = round(rot/1,0)*1\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\n#otv_rot=angle(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\n\r\n\r\n# нахождение актуального месторасположения\r\nfor i, el in enumerate(otvs):\r\n\tif int(otv_rot[i]) == otv_rot[i]:\r\n\t\trot = int(otv_rot[i])\r\n\telse:\r\n\t\trot = otv_rot[i]\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/1)*1)) + '|' + str(int(round(float(otv_loc[i].Y)/1)*1)) + '|' + str(int(round(float(otv_loc[i].Z)/1)*1)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(rot)\r\n\tnew_loc_list.Add(strrr.replace('.', ','))\r\n\r\n#  нахождение фактического положения\r\nfor ver in otv_ver:\r\n\tver_split = split_string(ver, '|')\r\n\ttry:\r\n\t\tver_split.pop(9)\r\n\texcept:\r\n\t\tpass\r\n\ttry:\r\n\t\tver_split.pop(8)\r\n\texcept:\r\n\t\tpass\r\n\ttry:\r\n\t\tver_split.pop(0)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\tlast_loc = ''\r\n\tfor i in ver_split:\r\n\t\tlast_loc+= i+ '|'\r\n\tlast_loc = last_loc[:-1]+ ';'\t\r\n\tlast_loc_list.Add(last_loc)\r\n\r\n\r\n\r\nnew_all_possition = []\r\npereneseno = []\r\n\r\n\r\nfor new_position, last_poss, all_poss in zip(new_loc_list,last_loc_list,otv_all_poss):\r\n\tif new_position[:-4] not in all_poss:\r\n\t\tall_poss= new_position+all_poss\r\n\tif last_poss[:-4] not in all_poss:\r\n\t\tall_poss+= last_poss\r\n\r\n\tnew_all_possition.Add(all_poss)\r\n\r\nnew_all_possition_out = []\r\n\r\nfor i,j,k in zip(IN[1],new_all_possition,new_loc_list):\t\r\n\tif 'V0' in i:\r\n\t\tst = k\r\n\t\tnew_all_possition_out.Add(st)\r\n\telse:\r\n\t\tnew_all_possition_out.Add(j)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfor i in new_all_possition:\r\n\tx = i.count(';')\r\n\tif x>1:\r\n\t\tpereneseno.Add('Перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Не перенесено')\r\n\r\nOUT = [new_all_possition,pereneseno,new_loc_list,new_all_possition_out]\t\t\r\n\t\r\n#OUT = [new_all_possition,pereneseno]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "6aabd494bb03404ca7210d484823d8fd",
      "Inputs": [
        {
          "Id": "dd02029cddff4dd18aa90b2f93143e62",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9aa9b8df03b45bf983c28feed8fd17d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8604698db2f149848470a6dcd055c715",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0848ef17287d449fbb7f0eba8165c6cd",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "2795fecb3b9346a986bb5b81b94c0637",
      "Inputs": [
        {
          "Id": "19658889b4e34586b2f460853805041f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16350347d2e649c891b0dcc329bf4dab",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bd894d120954066baf54a3145876914",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a6eeacf7f7747db80a0d0f42a9b36c4",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "a67c879297904b70b17f999f64a9b586",
      "Inputs": [
        {
          "Id": "0c99cf53499a4c7584686675998607a4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f929dc1a50b4e1babf45ef91bc06ede",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a136e2f209742ffae72bc10e1746f1b",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31da02ceb55042fda50364d3775af77e",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";",
      "Id": "a2de08bb5d34474294ca102195b62432",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "83d756314318493088f2f3e0ee8f3c20",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\ti = round(int(i)/10,0)*10\r\n\t\totv_lenth.Add(i)\r\n\treturn otv_lenth\r\n\t\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/5)*5\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\n\t\r\notvs= IN[0]\r\notv_rot =[]\r\notv_ver = IN[1]\r\notv_loc = []\r\notv_all_poss = IN[2]\r\nOUT = []\r\nnew_loc_list = []\r\npereneseno =[]\r\nlast_loc_list = []\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\t#rot = round(rot/10,0)*10\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\n#otv_rot=angle(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\n\r\n\r\n# нахождение актуального месторасположения\r\nfor i, el in enumerate(otvs):\r\n\tif int(otv_rot[i]) == otv_rot[i]:\r\n\t\trot = int(otv_rot[i])\r\n\telse:\r\n\t\trot = otv_rot[i]\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Y)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Z)/10)*10)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(rot)\r\n\tnew_loc_list.Add(strrr.replace('.', ','))\r\n\r\n#  нахождение фактического положения\r\nfor ver in otv_ver:\r\n\tver_split = split_string(ver, '|')\r\n\ttry:\r\n\t\tver_split.pop(9)\r\n\texcept:\r\n\t\tpass\r\n\ttry:\r\n\t\tver_split.pop(8)\r\n\texcept:\r\n\t\tpass\r\n\ttry:\r\n\t\tver_split.pop(0)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\tlast_loc = ''\r\n\tfor i in ver_split:\r\n\t\tlast_loc+= i+ '|'\r\n\tlast_loc = last_loc[:-1]+ ';'\t\r\n\tlast_loc_list.Add(last_loc)\r\n\r\n\r\n\r\nnew_all_possition = []\r\npereneseno = []\r\n\r\n\r\nfor new_position, last_poss, all_poss in zip(new_loc_list,last_loc_list,otv_all_poss):\r\n\tif new_position[:-4] not in all_poss:\r\n\t\tall_poss= new_position+all_poss\r\n\tif last_poss[:-4] not in all_poss:\r\n\t\tall_poss+= last_poss\r\n\r\n\tnew_all_possition.Add(all_poss)\r\n\r\nnew_all_possition_out = []\r\n\r\nfor i,j,k in zip(IN[1],new_all_possition,new_loc_list):\t\r\n\tif 'V0' in i:\r\n\t\tst = k\r\n\t\tnew_all_possition_out.Add(st)\r\n\telse:\r\n\t\tnew_all_possition_out.Add(j)\r\n\r\n\r\nfor i in new_all_possition_out:\r\n\tx = i.count(';')\r\n\tif x>1:\r\n\t\tpereneseno.Add('Перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Не перенесено')\r\n\r\nOUT = [new_all_possition,pereneseno,new_loc_list,new_all_possition_out]\t\t\r\n\t\r\n#OUT = [new_all_possition,pereneseno]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "f3918670a60e43a6a0006a0ead36ba76",
      "Inputs": [
        {
          "Id": "af9879df51784588aa675de169eadfc9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "986cfdcd93f647d7af02095ac2cba7b2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d90668b0b23946149c0af9abef81eccf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61e75b81c1594b6aa6bf883cbb6bbebd",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[1];\nx[3];",
      "Id": "847eb61504a3477ca48d3412a916e924",
      "Inputs": [
        {
          "Id": "839375302ad543ca97f2696329080c80",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "487824852095416aa7e1675e22c6121a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c8d553018b54185872ed17c67051943",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "5629c6cfffa443a8991e7632eb983fa7",
      "Inputs": [
        {
          "Id": "a5d00b245b3b437c95c3926e8f80515f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30d112742a9c4264a772dc2d34265a6f",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8de22870e55b4a1f8a722fc2302083e2",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "f5ba883feb704a8985f108594ff06ea2",
      "Inputs": [
        {
          "Id": "e116d3e390944e8e9fbe7571cffeb036",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55e7e80b2d314d4092ea131097553689",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bffd14b82ee746d58493f640b77a2b4a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "6b583a3d66b5484b8aeaf04c0f92bfe0",
      "Inputs": [
        {
          "Id": "8c386d78ee64421584817fe9c31ce215",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5ab72bcd4ef4ea7b2f532eaa8e71627",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6ed913b8ee14e74bf0e34d88461df53",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9a9f55283a745a5a0c00a747dc63d5e",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "8055ac8e20624fd7922becbe36e2b8ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8a62da90c3d449e9b554433d23dbac4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "4b370222cd81432e878c4cde14585e03",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8c421f173394ce783b5cea078ae3407",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "466ef2df90c645559d1e2596ba05b8d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9757d927bfb24631871978689d8af2a1",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "9f093f1e9c69454999cc8140a25b4d67",
      "Inputs": [
        {
          "Id": "9647a61ebf0e4d66a0b31f7967c6b16a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ecea279ee394d24ab7c7f6e391e709f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "d7588f6f471d4114aaa3edb78e70600d",
      "Inputs": [
        {
          "Id": "c186480bb7c14fe2a7aa2b5b66442628",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6db5798cd0244ef8948ce97336367b05",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c5912a2177547e19028756de2c421d5",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "899cd16f0bac4790afcb5ab660a2d8af",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";",
      "Id": "d6c878f9c32d443c95ecf16db2546642",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e4195023fc242febc1081e3835a0b5a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";",
      "Id": "94a22c7478ea49cfa9ea28fe008ab880",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "399c36d4eef544afaf3ca93e7a0f1063",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "200b8a3265124075818a932fb284ae55",
      "Inputs": [
        {
          "Id": "d5d009d1943840b78cc07e006f520d52",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6efc72301475467da6d4e9d07279f6ac",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8aa100c954f648e789d77c431a055a17",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6eaef13c2db4a338488235b0742a108",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "76c4779d62724a6f8343d190ef48427a",
      "Inputs": [
        {
          "Id": "b1c076c62bb14ade802f6273eb8db430",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8432721c44f74d03af03fee65fe12f72",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c90b461fedcc4a25be174f8ed0778b7f",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "721b9cabaea640fa96bba99e255b37af",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Перенесено задание\";",
      "Id": "cd3c0c2120144b85827d03250ff7c513",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "895edf844c1c41af8187fa6fbf899fce",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "72a5037e7f9440199edc164d32dc493e",
      "Inputs": [
        {
          "Id": "3ee3aae2b43e4b89b6ca8eceb28ea4ce",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d2b2b3d51f14f599af7bb36fab89086",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "030f1029fe014f27845806bb0d94313e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\":Примечание\";",
      "Id": "dd5bb4b3dc474cfe9c7b352906489e08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9bba6176ef2a45f99cc36caaf3ef6a3c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "razdel = IN[2]\r\nelements = IN[0]\r\nelem_primech = IN[1]\r\n\r\nOUT= []\r\nfor elem,prim in zip(elements,elem_primech):\r\n\tif prim == razdel:\r\n\t\tOUT.append(elem)\r\n\telse:\r\n\t\tpass",
      "VariableInputPorts": true,
      "Id": "3fa76f2e0ea74714826edda4789afc69",
      "Inputs": [
        {
          "Id": "323a51b46ec94e849384cf38b740a9d8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67009f2d6eed40bab598ca33540fd26d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47cced867d234a8abd133ce3b117b9b8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d9b561826ca446c9ba5686b1f96d6ce",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "razdel = IN[2]\r\nelements = IN[0]\r\nelem_primech = IN[1]\r\n\r\nOUT= []\r\nfor elem,prim in zip(elements,elem_primech):\r\n\tif prim == razdel:\r\n\t\tOUT.append(elem)\r\n\telse:\r\n\t\tpass",
      "VariableInputPorts": true,
      "Id": "360ac842261c4cd1bdf95124ad59d2c9",
      "Inputs": [
        {
          "Id": "7ce8514fd6224583b9294adf2fcdbe49",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29ac7d6dd8f145d0a5709575242a3d1b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2ca05a6014a4e719a0e7db9ccede494",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00d685864424552a0cfccd46d216b49",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "5751613502f54f6e9a3e602dcb117b30",
      "Inputs": [
        {
          "Id": "a738e87041064496b8a0d0e88639de8c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbe247143d9f43e3a50d915af9cc0793",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea00391fe9d74e6b8b04bec3f07bc59c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\":Примечание\";",
      "Id": "a3d1273d126a4b628a6bdd083c47c162",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e73ebdebb62647429392a07a327f7a4e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "elements;",
      "Id": "cd9d1f11d8e747b5adb11324ebcd5ce1",
      "Inputs": [
        {
          "Id": "f6d0e2263b70453a89aef8d79fb6eb2b",
          "Name": "elements",
          "Description": "elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ada44c85a95548bbbae375793a8dab18",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "elements;",
      "Id": "25c9b42012c44174a7bee1ad47c6a587",
      "Inputs": [
        {
          "Id": "24c818c64d3a4295b3fbd3a77e85e083",
          "Name": "elements",
          "Description": "elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb763d1e6d4f443685f4e6034886598f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "84adefe347944a549cb1b96218a41525",
      "Inputs": [
        {
          "Id": "aee835adcc4f4d388f9f02c5c00b9f8e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb875d0fcd794e32a7a58c3105bf6309",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52f414a4441640ab9ee717137cafc798",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "026229900142489d88d06acfad2c83cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "78340cfaaab44ea28b3c4f0f842d76c1",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "b7cbe24fb3034bf0b0201941d6dcbec7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d0604de7003b47f299385279473405c6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "50c934cd337341269850da27f1a8e192",
      "Inputs": [
        {
          "Id": "3e640792fe614815a93a3dc1866d2612",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17c2906a91b747be83bbdca25237473e",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3190194bb1646ff9ab20527ba181378",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "498c5eeb50fc46ba8eba55883bad65f9",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "5cddf18442544b9db11c92f1f65c55f0",
      "Inputs": [
        {
          "Id": "72a16f4faa564172933dc69451e08a5c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f18162d18d447f5aa9d91b8cc2e8421",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1288dfa960242f3b10d7b8c46fc1252",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef9e4049ea074c6d94eec8dc3e8729d8",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Позиции задания\";",
      "Id": "297d1e36b0d940688aea0c0624670337",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dda9cdb218a34264945bf39335abbb5e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "OUT = []\r\nfor i in IN[0]:\r\n\tOUT.append(i+';')",
      "VariableInputPorts": true,
      "Id": "f3ee49bdaa9c41eca0986aa48ea9e4d9",
      "Inputs": [
        {
          "Id": "ac1b310dc7804e27862deee35a8c67ac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7ea0aef5ccd49ba93e395d001382427",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "OUT = []\r\nfor i in IN[0]:\r\n\tOUT.append(i+';')",
      "VariableInputPorts": true,
      "Id": "163d8b60c0d74116a9b3d667ea0f2d8c",
      "Inputs": [
        {
          "Id": "b4cd5e37979b493cb6d4a4d59003c834",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f001065b515c4433a3e387103aa46e19",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "2863c150c52048cc833ef0f6b9788da3",
      "Inputs": [
        {
          "Id": "1290b3daa49648a8afd0c97868c8f928",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a6b20be4bd54932bc1f5f31e08bb509",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64bbdfbf057f4bd783b17659d9b8a114",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0de5bb9f41a949818017dc035f2cd4f6",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nimport re\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\nOUT = []\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nlist1=[]\r\nlist2=[]\r\nfor i,j in zip(IN[0],IN[2]):\r\n\t\r\n\tif i =='' or j == \"ВРУЧНУЮ\" or 'V' not in i:\r\n\t\tlist1.Add(\"ВРУЧНУЮ\")\r\n\telse:\r\n\t\tlist1.Add(\"СКРИПТ\")\r\n\t\t\r\n\t\r\n\tif 'V' not in i:\r\n\t\tst = 'V0' +i\r\n\t\tlist2.Add(st)\r\n\telse:\r\n\t\tlist2.Add(i)\r\n\r\n\r\nOUT = [list1,list2]\t\r\n\t\r\n\t",
      "VariableInputPorts": true,
      "Id": "2dfc57791f3244d5a2ca53f0399de065",
      "Inputs": [
        {
          "Id": "17ef5ddc411e4fed99ccf35a5b19286f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5c65969e6a346b2af5e88925f6c45c9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ceb995bfe5c14ec7ad9c59a89b5a071d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbb2e25b9854436d91dced8cee732793",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "e21464230ec04bb4818db3b0598773f4",
      "Inputs": [
        {
          "Id": "4cdf61dc6f544dffa5b05c0d6925ad90",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c315443471841a7ad83ec24a664b29a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95cf229797af44d8954f96479a7b010c",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "34a0b6b0c6854285bcbdd1bfa8dc2238",
      "Inputs": [
        {
          "Id": "0f24dc421b8c4435b8b40c645ebd5c7c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6671780bff824dab9446a8098e2f943a",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21963498027a4db491a383b15d027932",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cec0f18a41a04c528bbd017ed9de6a55",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "d148ab5b3a124a80ba8c000245bb8f6d",
      "Inputs": [
        {
          "Id": "0c5f4e4033494757af863227c9a08048",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f73a9848ee784ad582fe36123d480d3f",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "269c382de08540ce8639611e27b137d4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "cf7cc84bc51249b488e871822607bad8",
      "Inputs": [
        {
          "Id": "badcd08060124bf2a2479d2b687e61e9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dee8f584a094d50bd9a280f8d9efb97",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3054131ff474cbfa3c6619569962674",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d3caf7be90514a6abac8196d6c614260",
      "Inputs": [
        {
          "Id": "7f86a9a7780a4b9c9e7cb5211c56293e",
          "Name": "Family Type",
          "Description": "Тип семейства.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7829fab6752640eca121e052b774bced",
          "Name": "Elements",
          "Description": "Список элементов, соответствующих запросу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенного типа семейства."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Способ создания задания\";",
      "Id": "a5b020c2b3fa475aa33c92de85d6fa52",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2dff917db792426a9babae01e7adffd4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7a2643f34a0b46a692d7032f0dc624f4",
      "Inputs": [
        {
          "Id": "35d5f78cfd274e79bed14d0f006825cf",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a1426be3eed466f876bef86706d29c3",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e29a9f6af2d4154b57ec0f3820eda3d",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "8ee859cffd434598956867e9113f255b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99b421dea0df468398cb466b273f9128",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "f1291ca6ed1243d6a3aeba3c9dc8fc4f",
      "Inputs": [
        {
          "Id": "ea895fc875b740ff825e47845700a5e9",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "007831f51c7146bb845b972e2c42ce9d",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyType.ByName@string",
      "Id": "512dd6c66b3943deb1135640090c2546",
      "Inputs": [
        {
          "Id": "6f3e4bc38ac945999ab6092a5c9d3b97",
          "Name": "name",
          "Description": "Имя FamilyType\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d85f9cba879040aa95a18721c67c09f1",
          "Name": "FamilyType",
          "Description": "FamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выберите FamilyType, указав его имя. При наличии двух и более FamilyType с одинаковым именем этот метод вернет первый найденный FamilyType.\n\nFamilyType.ByName (name: string): FamilyType"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "132f6530eddb43e5bca399ee72771f25",
      "Inputs": [
        {
          "Id": "3d29698d04de42ca8faf5b1b9d4274ee",
          "Name": "Family Type",
          "Description": "Тип семейства.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e06188ebdb7456b820d3252075a3c80",
          "Name": "Elements",
          "Description": "Список элементов, соответствующих запросу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенного типа семейства."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Перекрытия_Прямоугольное\";",
      "Id": "4a0ad03b0d3a473087e800638e32549d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a26403b7b84041a984966398a5bb3ca9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(Отв_Задание)_Стены_Прямоугольное\";",
      "Id": "5e6086efc88b41ddbf0081fdf3df7291",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fd3a9b5dbbf24c3a8f3f23b9659d48cf",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2020\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n#https://github.com/albandechasteigner/GeniusLociForDynamo\n\nimport clr\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.GeometryConversion)\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\nimport math\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nelements = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]\nangles = [i* math.pi/180 for i in IN[1]] if isinstance(IN[1],list) else [IN[1]* math.pi/180]\n\ndef GetCropBox(view):\n\tprovider= ParameterValueProvider(ElementId(BuiltInParameter.ID_PARAM))\n\trule = FilterElementIdRule(provider, FilterNumericEquals(), view.Id )\n\tfilter= ElementParameterFilter(rule)\n\treturn doc.GetElement(FilteredElementCollector(view.Document).WherePasses(filter).ToElementIds().Find(lambda x: x.IntegerValue != view.Id.IntegerValue))\ntest_list = []\n\ntest_list2 = []\nTransactionManager.Instance.EnsureInTransaction(doc)\nfor angle, element,lloc in zip(angles, elements,IN[2]):\n\t#if angle>math.pi:\n\t\t#angle=abs(angle-2*math.pi)\n\t#else:angle\n\t#Get initial Rotation Angle using transform\n\t#transform=element.GetTransform()\n\t#vectorTran = transform.OfVector(transform.BasisX)\n\t#rot = transform.BasisX.AngleOnPlaneTo(vectorTran, transform.BasisZ) \n\t#rot = rot * (180 / math.pi)\n\tif hasattr(element, \"Location\"):\n\t\tloc = element.Location\n\t\tif loc:\n\t\t\ttest_list2.append(\"loc\")\t\t\n\t\t\t# Annotation symbol, importInstance and linkInstance\n\t\t\tif hasattr(element, \"GetTotalTransform\"):\n\t\t\t\ttrans=element.GetTotalTransform()\n\t\t\t\tloca = trans.Origin\n\t\t\t\tloca = XYZ(lloc.X/304.8,lloc.Y/304.8,lloc.Z/304.8)\n\t\t\t\trot = -trans.BasisX.AngleOnPlaneTo(XYZ.BasisX, XYZ.BasisZ)\n\t\t\t\t\n\n\tline = Line.CreateBound(loca, XYZ(loca.X,loca.Y,loca.Z+1))\n\t#Set Rotation\n\tAutodesk.Revit.DB.ElementTransformUtils.RotateElement(doc, element.Id, line, angle-rot)\n\t\n\ttest_list.Add([loca,rot])\nTransactionManager.Instance.TransactionTaskDone()\n\nif isinstance(IN[0], list): OUT = elements\nelse: OUT = elements[0]\n\nttest = []\nfor element in elements:\n\tttest.append(element.Category.Id)\n\n\nOUT = [elements,angles,test_list,ttest,IN[2]]",
      "VariableInputPorts": true,
      "Id": "0c84f267cc8f489183c5667c225708c9",
      "Inputs": [
        {
          "Id": "164f20938e16416391452bad6b9dff97",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e790001dd3c4c23be6eb9b7a7851ebb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc0e946bef40483384db54e6fec62472",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40d3624357d24fb791a276ccb2b25261",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Запускать скрипт с плана, разреза, фасада, 3д вида!!",
      "Id": "68356901639d4972ab97407fee2723bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "005fb88a304e46e4a4e07afedf05e1fc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndef GetSuperComponent(item):\r\n\tif hasattr(item, \"SuperComponent\"): \r\n\t\tsc = item.SuperComponent\r\n\t\tif sc: return item\r\n\t\telse: return BeamSystem.BeamBelongsTo(item)\r\n\tif hasattr(item, \"HostRailingId\"): return item\r\n\telif hasattr(item, \"GetStairs\"): return item\r\n\telse: return \"\"\r\n\r\nitems = UnwrapElement(IN[0])\r\n\r\nif isinstance(IN[0], list): OUT = [GetSuperComponent(x) for x in items]\r\nelse: OUT = GetSuperComponent(items)\r\n\r\nOUT = filter(None, OUT)",
      "VariableInputPorts": true,
      "Id": "7411f9c4d1844371a46dcd399752f2f3",
      "Inputs": [
        {
          "Id": "bf52131ee89249d5b4cccf375c554437",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "327e71eb1ccd41518c120ce8ea1a8522",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= IN[0]\r\notv_rot =[]\r\notv_loc = []\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/1)*1\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/1)*1\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\trot = round(rot/1)*1\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\notv_rot=(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\nOUT = []\r\nstr_list = []\r\npereneseno =[]\r\nver_list = []\r\nfor i, el in enumerate(otvs):\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/1)*1)) + '|' + str(int(round(float(otv_loc[i].Y)/1)*1)) + '|' + str(int(round(float(otv_loc[i].Z)/1)*1)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str(int(otv_rot[i]))\r\n\tstr_list.Add(strrr)\r\n\r\n\r\nfor i, sd in enumerate(IN[1]):\r\n\tsplit_list = split_string(sd,'|')\r\n\tnew_str=''\r\n\tif len(sd) == 8:\r\n\t\tver = split_list.pop(1)\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add(0)\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add(1)\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\tif len(sd) == 9:\r\n\t\tver = split_list.pop(0)\r\n\t\t\r\n\t\tx = ''\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add('Не перенесено')\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add('Перенесено')\t\t\t\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\telse:\r\n\t\ttry:\r\n\t\t\tver = split_list.pop(0)\r\n\t\t\tnewver = ver+'|'+str_list[i]\r\n\t\texcept:\r\n\t\t\r\n\t\t\tnewver = 'V0|'+str_list[i]\r\n\t\t#pereneseno.Add('Не перенесено')\r\n\tver_list.Add(newver)\r\n\t\r\n\tif str_list[i][:-4]\tin sd or sd =='':\r\n\t\tpereneseno.Add('Не перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Перенесено')\r\n\t\t\r\n\t\t\r\n\r\n\r\ncor_ver = []\r\nfor i,j in zip(IN[1],ver_list):\r\n\tif 'V' not in i:\r\n\t\tst = 'V0'\r\n\telse:\r\n\t\tst = ''\r\n\ti= split_string(i,'|')\r\n\ttry:\r\n\t\t\r\n\t\tcor_ver.append(st+j+'|'+i[8])\r\n\texcept:\r\n\t\tcor_ver.append(st+j)\r\n\t\r\ncor_perenes = []\r\n\r\nfor i,j in zip(cor_ver,pereneseno):\r\n\tif 'V0' in i:\r\n\t\tcor_perenes.append('Не перенесено')\r\n\telse:\r\n\t\tcor_perenes.append(j)\r\n\t\r\nOUT = [cor_ver, cor_perenes,str_list]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "5c4c5db79177436cbc21c24abe180796",
      "Inputs": [
        {
          "Id": "22b100cc13f84357911da84bbc8963c0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec7d58a8b90c43abae5eab880d24bc08",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6268ce771ab44f348bab5900b71fd2e3",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "22fee04f91fc4d89bb09d04676234674",
      "Inputs": [
        {
          "Id": "aba053f10c654a8eb8cf41cea3759897",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef3d107748d6404eadb25ba6fce78ef2",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe7df583eb0b4d44a26ea714eafb9094",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "ca30cebd2ea74983842dabfc4a4f051c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5fbba087aef7447387668b9ab9c36b20",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nimport math\r\nimport re\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\notvs= IN[0]\r\notv_rot =[]\r\notv_loc = []\r\n\r\n\r\n\r\ndef angle(angles):\r\n\t \r\n\tOUT = []\r\n\tlist=[]\r\n\tOUT1 =[]\r\n\t# Разместите код под этой строкой\r\n\tfor angle in angles:\r\n\t\tif 315<=angle<=360:\r\n\t\t\tangle-=315\r\n\t\telif 270<=angle<315:\r\n\t\t\tangle-=270\r\n\t\telif 225<=angle<=270:\r\n\t\t\tangle-=225\r\n\t\telif 180<=angle<=225:\r\n\t\t\tangle-=180\r\n\t\t\t\r\n\t\telif 135<=angle<=180:\r\n\t\t\tangle-=135\r\n\t\t\t\r\n\t\telif 90<=angle<=135:\r\n\t\t\tangle-=90\r\n\t\t\r\n\t\telif 45<=angle<=90:\r\n\t\t\tangle-=45\r\n\t\t\t\r\n\t\telif 45<=angle<=0:\r\n\t\t\tangle-=0\r\n\t\telse:\r\n\t\t\tangle=angle\r\n\t\tlist.Add(round(angle,2))\r\n\t\t\r\n\tfor angle in list:\r\n\t\tif angle >= 22.5:\r\n\t\t\tif angle>=33.4:\r\n\t\t\t\tangle = 45-angle\r\n\t\t\telse:\r\n\t\t\t\tangle = angle-22.5\t\t\r\n\t\telif angle < 22.5:\r\n\t\t\tangle=angle\r\n\t\tOUT1.Add(angle)\r\n\t\t\r\n\treturn OUT1\r\n\r\n\r\ndef split_string(source,separators):\r\n    return re.split('[{0}]'.format(re.escape(separators)),source)\r\n\r\n\r\n\r\n\r\n# созданные функции\r\n\r\ndef get_parameters_elements(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/10)*10\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\ndef get_parameters_elements5_round(otvs, strr):\t\r\n\tout_list1=[]\r\n\tout_list=[]\r\n\totv_lenth =[]\r\n\tfor model in otvs:\r\n\t\tout_list.append(model.Name)\r\n\t\t\t\r\n\telUnwrap = UnwrapElement(otvs)\r\n\tsum=0\r\n\tfor i in elUnwrap:\r\n\t\tif out_list[sum] == -1:\r\n\t\t\tout_list1.append(-1)\r\n\t\t\tsum+=1\r\n\t\telse:\r\n\t\t\tsum+=1\r\n\t\t\tDb = i.GetParameters(strr)\r\n\t\t\t\r\n\t\t\tfor i in Db:\r\n\t\t\t\tout_list1.append(i.AsValueString())\r\n\t\t\t\t\r\n\tfor i in out_list1:\r\n\t\tx = round(int(i)/5)*5\r\n\t\totv_lenth.Add(x)\r\n\treturn otv_lenth\r\n\r\n\r\n\r\nfor i,otv in enumerate(UnwrapElement(otvs)):\r\n\trot = math.degrees(otv.Location.Rotation)\r\n\t\r\n\totv_rot.Add(rot)\r\n\r\nfor i,otv in enumerate(otvs):\r\n\totv_loc.Add(otv.Location)\r\n\r\notv_rot=(otv_rot)\r\n\r\nlenth = get_parameters_elements(otvs, \"Ширина\")\r\ndepth = get_parameters_elements5_round(otvs, \"Глубина\")\r\nwidth = get_parameters_elements(otvs, \"Высота\")\r\n\r\nOUT = []\r\nstr_list = []\r\npereneseno =[]\r\nver_list = []\r\nfor i, el in enumerate(otvs):\r\n\tstrrr = str(int(round(float(otv_loc[i].X)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Y)/10)*10)) + '|' + str(int(round(float(otv_loc[i].Z)/10)*10)) + '|' + str(int(lenth[i])) + '|' + str(int(width[i]))+ '|' + str(int(depth[i])) + '|' + str((otv_rot[i]))\r\n\tstr_list.Add(strrr)\r\n\r\n\r\nfor i, sd in enumerate(IN[1]):\r\n\tsplit_list = split_string(sd,'|')\r\n\tnew_str=''\r\n\tif len(sd) == 8:\r\n\t\tver = split_list.pop(1)\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add(0)\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add(1)\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\tif len(sd) == 9:\r\n\t\tver = split_list.pop(0)\r\n\t\t\r\n\t\tx = ''\r\n\t\t#for i in split_list:\r\n\t\t\t#x+=i\r\n\t\t#if x == str_list[i]:\r\n\t\t\t#pereneseno.Add('Не перенесено')\r\n\t\t#else:\r\n\t\t\t#pereneseno.Add('Перенесено')\t\t\t\r\n\t\tnewver = ver+str_list[i]\r\n\t\t\r\n\telse:\r\n\t\ttry:\r\n\t\t\tver = split_list.pop(0)\r\n\t\t\tnewver = ver+'|'+str_list[i]\r\n\t\texcept:\r\n\t\t\r\n\t\t\tnewver = 'V0|'+str_list[i]\r\n\t\t#pereneseno.Add('Не перенесено')\r\n\tver_list.Add(newver)\r\n\t\r\n\tif str_list[i][:-4]\tin sd or sd =='':\r\n\t\tpereneseno.Add('Не перенесено')\r\n\telse:\r\n\t\tpereneseno.Add('Перенесено')\r\n\t\t\r\n\t\t\r\n\r\n\r\ncor_ver = []\r\nfor i,j in zip(IN[1],ver_list):\r\n\tif 'V' not in i:\r\n\t\tst = 'V0'\r\n\telse:\r\n\t\tst = ''\r\n\ti= split_string(i,'|')\r\n\ttry:\r\n\t\t\r\n\t\tcor_ver.append(st+j+'|'+i[8])\r\n\texcept:\r\n\t\tcor_ver.append(st+j)\r\n\t\r\ncor_perenes = []\r\n\r\nfor i,j in zip(cor_ver,pereneseno):\r\n\tif 'V0' in i:\r\n\t\tcor_perenes.append('Не перенесено')\r\n\telse:\r\n\t\tcor_perenes.append(j)\r\n\t\r\nOUT = [cor_ver, cor_perenes,str_list]\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "281c3b8b42de471a83ea991bdc2d9891",
      "Inputs": [
        {
          "Id": "152eb612ac3b4f9d96b9c859de65c10e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5e8935fa508476a855b0b57e906ced6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3bf56eb9cbf4cd2a3ad51791e570f70",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "d1643fdb0d9e4d8bb0509407496fc8f3",
      "Inputs": [
        {
          "Id": "f6240bfa829e464bafc28eac25afb897",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e8879942d2c48f89f317f2ae1d5c4da",
          "Name": "parameterName",
          "Description": "Имя параметра, значение которого требуется получить.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "012f9efe2b054cad939762a2b61f7b0b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение значения одного из параметров элемента.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SD_Версия задания\";",
      "Id": "9a50154c17ac400caadfe242faa21d1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa1c886b3ad049d7b8ef5731031d9ba2",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndef GetSuperComponent(item):\r\n\tif hasattr(item, \"SuperComponent\"): \r\n\t\tsc = item.SuperComponent\r\n\t\tif sc: return item\r\n\t\telse: return BeamSystem.BeamBelongsTo(item)\r\n\tif hasattr(item, \"HostRailingId\"): return item\r\n\telif hasattr(item, \"GetStairs\"): return item\r\n\telse: return \"\"\r\n\r\nitems = UnwrapElement(IN[0])\r\n\r\nif isinstance(IN[0], list): OUT = [GetSuperComponent(x) for x in items]\r\nelse: OUT = GetSuperComponent(items)\r\n\r\nOUT = filter(None, OUT)",
      "VariableInputPorts": true,
      "Id": "1d354dfc4d5b4f1b80d2ea024cd935cb",
      "Inputs": [
        {
          "Id": "2eb19c720bb7442a9342b95c4fe8c0d9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55818c31d7154fc9926376076be48e9b",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[2];",
      "Id": "04e9549b66ef444999fe4afe9f30c6f6",
      "Inputs": [
        {
          "Id": "5667aa1f3d8445d1a88d10594b447c81",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1f33166a7704588bb4447b7c4461e4e",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[2];",
      "Id": "d0e04afe98e440788c4832170dc9d45f",
      "Inputs": [
        {
          "Id": "b8609d2d9f164caa983ff275c72abd59",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61ab24d859a04c11b96446e6f66da666",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Alban de Chasteigner 2020\n#twitter : @geniusloci_bim\n#geniusloci.bim@gmail.com\n#https://github.com/albandechasteigner/GeniusLociForDynamo\n\nimport clr\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.GeometryConversion)\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\nimport math\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nelements = UnwrapElement(IN[0]) if isinstance(IN[0],list) else [UnwrapElement(IN[0])]\nangles = [i* math.pi/180 for i in IN[1]] if isinstance(IN[1],list) else [IN[1]* math.pi/180]\n\ndef GetCropBox(view):\n\tprovider= ParameterValueProvider(ElementId(BuiltInParameter.ID_PARAM))\n\trule = FilterElementIdRule(provider, FilterNumericEquals(), view.Id )\n\tfilter= ElementParameterFilter(rule)\n\treturn doc.GetElement(FilteredElementCollector(view.Document).WherePasses(filter).ToElementIds().Find(lambda x: x.IntegerValue != view.Id.IntegerValue))\ntest_list = []\n\ntest_list2 = []\nTransactionManager.Instance.EnsureInTransaction(doc)\nfor angle, element,lloc in zip(angles, elements,IN[2]):\n\t#if angle>math.pi:\n\t\t#angle=abs(angle-2*math.pi)\n\t#else:angle\n\t#Get initial Rotation Angle using transform\n\t#transform=element.GetTransform()\n\t#vectorTran = transform.OfVector(transform.BasisX)\n\t#rot = transform.BasisX.AngleOnPlaneTo(vectorTran, transform.BasisZ) \n\t#rot = rot * (180 / math.pi)\n\tif hasattr(element, \"Location\"):\n\t\tloc = element.Location\n\t\tif loc:\n\t\t\ttest_list2.append(\"loc\")\t\t\n\t\t\t# Annotation symbol, importInstance and linkInstance\n\t\t\tif hasattr(element, \"GetTotalTransform\"):\n\t\t\t\ttrans=element.GetTotalTransform()\n\t\t\t\tloca = trans.Origin\n\t\t\t\tloca = XYZ(lloc.X/304.8,lloc.Y/304.8,lloc.Z/304.8)\n\t\t\t\trot = -trans.BasisX.AngleOnPlaneTo(XYZ.BasisX, XYZ.BasisZ)\n\t\t\t\t\n\n\tline = Line.CreateBound(loca, XYZ(loca.X,loca.Y,loca.Z+1))\n\t#Set Rotation\n\tAutodesk.Revit.DB.ElementTransformUtils.RotateElement(doc, element.Id, line, angle-rot)\n\t\n\ttest_list.Add([loca,rot])\nTransactionManager.Instance.TransactionTaskDone()\n\nif isinstance(IN[0], list): OUT = elements\nelse: OUT = elements[0]\n\nttest = []\nfor element in elements:\n\tttest.append(element.Category.Id)\n\n\nOUT = [elements,angles,test_list,ttest,IN[2]]",
      "VariableInputPorts": true,
      "Id": "bba28cecf881427e901a9c5c273ceb4f",
      "Inputs": [
        {
          "Id": "5c375a399a364fb8a4342daf4dfeebd7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b16c86153634fd68cdcb97c9d793487",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73e97c1f23244c9b9ab421807f7d5240",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98a4ed9bc44444c2be34277b0f8a1dde",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "4ba480e7acdf416aba143627820cd36d",
      "Inputs": [
        {
          "Id": "c63fe759378844f4967b579d0bf01270",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f065ad5886444bf0b200da19bf330909",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "all_new = IN[0]\r\nvrych = IN[1]\r\nelem = IN[2]\r\nstrrr = str(vrych)\r\nout1= []\r\nout2= []\r\nfor i,el in zip(all_new,elem):\r\n\tif i in strrr:\r\n\t\tout1.append(el)\r\n\telse:\r\n\t\tout2.append(el)\r\nOUT = [out1, out2]\t",
      "VariableInputPorts": true,
      "Id": "94c75e6761784e81afa31a188c298f13",
      "Inputs": [
        {
          "Id": "6a50ded35c264e469ea38621c87aa227",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd86516aabaf4155b3d4a18e5a462270",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "411e56172fc84b61b78840427d3af894",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46a81c1be82243449b2052c35616e845",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "120cfa9602de4c718f91aa1ed28f1f4b",
      "Inputs": [
        {
          "Id": "87aa6ebad1c2464fbed54e26536a79b2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "341812048cfd45f4b947a921f38a0b58",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fcc8ad4ad7424f98b88dfb2a7e95be9d",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "bfd565eeb5ef447da2fefc7c40b0d62e",
      "Inputs": [
        {
          "Id": "23b3f00591c9452999d3d737d692db58",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b807c2653c14d51a6848a6b48326d5c",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e3a1806861d4237ab1ad4d9a1b7a588",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbdbcd56067a44b99bd5216ddf549812",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "all_new = IN[0]\r\nvrych = IN[1]\r\nelem = IN[2]\r\nstrrr = str(vrych)\r\nout1= []\r\nout2= []\r\nfor i,el in zip(all_new,elem):\r\n\tif i in strrr:\r\n\t\tout1.append(el)\r\n\telse:\r\n\t\tout2.append(el)\r\nOUT = [out1, out2]\t\t\t",
      "VariableInputPorts": true,
      "Id": "5fb99e8f98a549499f767b87bc12523d",
      "Inputs": [
        {
          "Id": "778c18e0a429415ebf3d6e65ccf13148",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "560736d52c5b4315b76a9d6e869c770c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c46347b6f654577bc4111544fb23e8a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "241d3dfcd45a4bdfa07a51eb13ab7acb",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "3f09b41c80284098b5593a9a0954fbde",
      "Inputs": [
        {
          "Id": "4f1950d0f372499db5df924e15170921",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47b2a50c29724828b5f5d7b19d5027f6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1108ac2f6fce401d938f26a8ee59074a",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "d3741151d1054ce2a14f6e604e3dc79a",
      "Inputs": [
        {
          "Id": "803e8086fa18485589c66523860306a8",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7459e6e160464098bc11110c9fa43179",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f047b7868b5a482595d1cca277fa12be",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5e2c144326443eaae5d47794e9a3d40",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPointAndLevel@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level",
      "Id": "9ff34eb2223c4afab6668301e275ab6b",
      "Inputs": [
        {
          "Id": "ea0f2d18e2d44190a6bd841bee8146e5",
          "Name": "familyType",
          "Description": "Тип семейства. Также называется обозначением семейства.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ddaf114edaa413f93c6b81a79cbca69",
          "Name": "point",
          "Description": "Точка в метрах.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b145bca00b24492dbcd3b16749d21b0e",
          "Name": "level",
          "Description": "Уровень для размещения экземпляра семейства.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf2ed6abefd34f5897e35f27bb507905",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Разместите Revit FamilyInstance, указав тип FamilyType (FamilySymbol в Revit API), его координаты в мировом пространстве и уровень\n\nFamilyInstance.ByPointAndLevel (familyType: FamilyType, point: Point, level: Level): FamilyInstance"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ee50f2ffba11471285ec6d0a60a838dc",
      "Inputs": [
        {
          "Id": "2ce666ae0fab445c8582b1db6968b9e4",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "608dc272f3ce4500938d3440d60828fc",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b24394df750549e7800b0d9e1615513b",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "2fcdff4d36ae46a6adc1f470635819e1",
      "Inputs": [
        {
          "Id": "d4bdbc98d7854c98973252b6822c0932",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6d21e5aeb29451f86b5644e5e9db8ac",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66f85f49a4c64268be1f26ff61eac647",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "016f523634544b618746019858112141",
      "Inputs": [
        {
          "Id": "793573986b874d60aa9c9ed05c0e81c2",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31972c7aa95445ff9c6f2e707241bdc6",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7ab5cf75cea8422b8830aa852467056f",
      "Inputs": [
        {
          "Id": "f0a54620055a4d5da22afc008d16c62d",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ba07d13f40c4b6c8f4de341bf5be510",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "7369e36b3ae247eeb19173e505a94eb9",
      "Inputs": [
        {
          "Id": "5eb8f3752b0d40feabdb7c2ee677c31c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b986ec0f46d44ac9f80746df73c06e6",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 605,
      "SelectedString": "OST_Levels",
      "NodeType": "ExtensionNode",
      "Id": "f769090ecd75474386c052967f0f2b66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2471203ac13a41f2963e52f2cf39a989",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d84d574e0c3f44cb9c097927115f2584",
      "Inputs": [
        {
          "Id": "8bd258710d5240faa7e0029b1a2b1924",
          "Name": "Category",
          "Description": "Категория",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e140350b7d1646bf91b227a0cb65b6e2",
          "Name": "Elements",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенной категории."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "OUT = []\r\nlevels = IN[0]\r\nlevels_elem = []\r\n\r\ndef el_level(z, levels):\r\n\t\r\n\tif z>= levels[-1].Elevation:\r\n\t\treturn levels[-1]\r\n\telif z<= levels[0].Elevation:\r\n\t\treturn levels[0]\r\n\telse:\r\n\t\tfor i in range(len(levels)):\r\n\t\t\tif levels[i].Elevation <= z < levels[i+1].Elevation:\r\n\t\t\t\treturn levels[i]\r\n\r\n\t\t\t\r\n\t\t\r\n\r\n\r\n\r\nfor Z,Zglub in zip(IN[1],IN[2]):\r\n\tz = Z+Zglub/2\r\n\tx = el_level(z,levels)\r\n\tlevels_elem.append(x)\r\n\r\n\r\nZ_elevation_elements = []\r\n\r\nfor Z, level_el in zip(IN[1],levels_elem):\r\n\tZ_elevation_elements.append(Z-level_el.Elevation)\r\n\t\r\nOUT = [levels_elem,Z_elevation_elements]",
      "VariableInputPorts": true,
      "Id": "20e971efbe514ba88ad03299bc178d13",
      "Inputs": [
        {
          "Id": "9aca3965c98e441d947859a0428494ce",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "68a16f08b67d477d966aaa694211b7a5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e95a7092a5a24fd3bf1d82060bd0442d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a3ae2c151304749b565874d3a643514",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "bcbeb7f79fe8437b96c0382721ced15a",
      "Inputs": [
        {
          "Id": "0591364d5fac4079b1908a4291c6f863",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d8130a5abdb40da82999153377faccc",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 605,
      "SelectedString": "OST_Levels",
      "NodeType": "ExtensionNode",
      "Id": "8f90d5b1dfe748d292d932f09af8cc85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "51c28658b2f94c038c782110ba2e54d4",
          "Name": "Category",
          "Description": "Выбранная категория.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Все предопределенные категории."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a8445848fabc4f798b1e29badb26debb",
      "Inputs": [
        {
          "Id": "94489f81d25c44e2951680946dfd1c00",
          "Name": "Category",
          "Description": "Категория",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc01a674591a48d6a8712bc13292ed18",
          "Name": "Elements",
          "Description": "Тип элемента.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Получение из модели всех элементов определенной категории."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPointAndLevel@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level",
      "Id": "f4e481cbc94b4114be4334322b0b0d2f",
      "Inputs": [
        {
          "Id": "26a6dabba3f749728cc23d6cd16bb9d2",
          "Name": "familyType",
          "Description": "Тип семейства. Также называется обозначением семейства.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b9aecfa97a840d686000a247fe0a20f",
          "Name": "point",
          "Description": "Точка в метрах.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a41a1a53f494ed5b82d760c3fb40ef3",
          "Name": "level",
          "Description": "Уровень для размещения экземпляра семейства.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af16dfcade12473ead4c77c53d638a34",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Разместите Revit FamilyInstance, указав тип FamilyType (FamilySymbol в Revit API), его координаты в мировом пространстве и уровень\n\nFamilyInstance.ByPointAndLevel (familyType: FamilyType, point: Point, level: Level): FamilyInstance"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "OUT = []\r\nlevels = IN[0]\r\nlevels_elem = []\r\n\r\ndef el_level(z, levels):\r\n\t\r\n\tif z>= levels[-1].Elevation:\r\n\t\treturn levels[-1]\r\n\telif z<= levels[0].Elevation:\r\n\t\treturn levels[0]\r\n\telse:\r\n\t\tfor i in range(len(levels)):\r\n\t\t\tif levels[i].Elevation <= z < levels[i+1].Elevation:\r\n\t\t\t\treturn levels[i]\r\n\r\n\t\t\t\r\n\t\t\r\n\r\n\r\n\r\nfor Z,Zglub in zip(IN[1],IN[2]):\r\n\tz = Z+Zglub/2\r\n\tx = el_level(z,levels)\r\n\tlevels_elem.append(x)\r\n\r\n\r\nZ_elevation_elements = []\r\n\r\nfor Z, level_el in zip(IN[1],levels_elem):\r\n\tZ_elevation_elements.append(Z-level_el.Elevation)\r\n\t\r\nOUT = [levels_elem,Z_elevation_elements]",
      "VariableInputPorts": true,
      "Id": "e1019ca95d2b4551a7fbf38387a07130",
      "Inputs": [
        {
          "Id": "cc65653c715141a48498830ecbe780ca",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19a1e0faeba54f3c94be1f2c41b2a804",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8bdc5dda6c849f8b51909707c393f13",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7be4d41a964494eaa5786133d93f19b",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "5a0521ce05f7405abfe5b17cacf716bd",
      "Inputs": [
        {
          "Id": "04ef747a5cdb402c9e3f8d3746f32d0f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcc85853b21845198f54ec1fe36e9c8d",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "800cdc64e3054158a604e1405af56bd4",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];\nx[1];",
      "Id": "d4e099e2ee3143ea871032fb910ad470",
      "Inputs": [
        {
          "Id": "c547caf78be648c8b26c6880798d84a6",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47e6f827b86a4a7b8bd2cdd26ca19660",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9649dc8bd5d6417ba5e6146e1b454659",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\r\nlevels = IN[0]\r\n\r\nelevation_list = []\r\nOUT = []\r\n\r\n\r\nfor lvl in levels:\r\n\televation_list.append(lvl.Elevation)\r\n\t\r\nsort_elevation_list = list(elevation_list)\r\nsort_elevation_list.sort()\r\n\r\nout_levels = []\r\nindex_list = []\r\nfor last_elevation, new_elevation,lvl in zip(elevation_list,sort_elevation_list,levels):\r\n\tindex = elevation_list.index(new_elevation)\r\n\tindex_list.append(index)\r\n\r\n\r\nfor i,indx in enumerate(index_list):\r\n\televation_list[i] = levels[indx]\r\n\r\nOUT = elevation_list",
      "VariableInputPorts": true,
      "Id": "a5d33b1b20ce4c048679440440ee42a1",
      "Inputs": [
        {
          "Id": "6b89b081941c48d8987ffb6ddf1d39c5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e84f82496fc64e2a91c0f7f20397a66a",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\r\nlevels = IN[0]\r\n\r\nelevation_list = []\r\nOUT = []\r\n\r\n\r\nfor lvl in levels:\r\n\televation_list.append(lvl.Elevation)\r\n\t\r\nsort_elevation_list = list(elevation_list)\r\nsort_elevation_list.sort()\r\n\r\nout_levels = []\r\nindex_list = []\r\nfor last_elevation, new_elevation,lvl in zip(elevation_list,sort_elevation_list,levels):\r\n\tindex = elevation_list.index(new_elevation)\r\n\tindex_list.append(index)\r\n\r\n\r\nfor i,indx in enumerate(index_list):\r\n\televation_list[i] = levels[indx]\r\n\r\nOUT = elevation_list",
      "VariableInputPorts": true,
      "Id": "2be89b9e0d424ff9a6c1b990112b4b79",
      "Inputs": [
        {
          "Id": "2774d156afe2405fbd90c7e77ae7bc38",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df71dc241f3c4dd2a5dfc0fb275b64fb",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "839a4bcd5ffb4e839590f4355c49996e",
      "Inputs": [
        {
          "Id": "e3b38d14c1f547c1ae940a94275e467b",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01d7204420044c43ac5fbabb795b0f5b",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\n\r\n\r\ntry:\r\n\tif len(IN[0])==0:\r\n\t\tOUT = IN[0]\r\n\tif len(IN[0])>0:\r\n\t\tOUT = IN[0]\r\n\t\r\nexcept:\r\n\tOUT =[\"\"]\r\n",
      "VariableInputPorts": true,
      "Id": "9380ca6b83a24cfa9034be9ef2d5fd93",
      "Inputs": [
        {
          "Id": "e0e62bf585c54c0ebb56ecb0b6d34efe",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41f2a100c5244f64992e816ec949518e",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "821be9a494034a61bc223245dfbbc3c1",
      "Inputs": [
        {
          "Id": "565ba5f708d24381b826d8852da5a07f",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "710aa907b61a487e8b938445bbc0b42a",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc8846ca4cf14c42ac9381e9faeb6d6f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7250835e46844b19a775bf8e1a7756af",
      "Inputs": [
        {
          "Id": "142dd3d28f7647b8ab2c0dbc0705c991",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4eed76f8c79f4f11a0c3f61fed3c7f3b",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d59737ec488543f0a5c716f6b84b8126",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7fe5c1022e81441bbb48458fbf1e5357",
      "Inputs": [
        {
          "Id": "ad29fded40154ba480f837189e96c076",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "55ac2aa9fd0c4d54b52f8c098b756031",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe7d533dc8ff4c6080ec132afd95de5f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6cf6ac794e314f0294aaee69405aae6e",
      "Inputs": [
        {
          "Id": "e6ecc7efb1994a749937253b3ee40dcb",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61a0c6b4baed48f4aba46ee24b2e64d2",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "420551b280f641c9a9e28a6d3c775c26",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "457a243212de4cc7be39fa67dfc1c5bb",
      "Inputs": [
        {
          "Id": "72e99f7fd82a47d78322a3c27ee0217e",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0183dc76d15b4c31a9ecf63acbaf4d44",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2cc78053ca19460e89e9d7d9225d2cbe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d14b433fc6aa4ab19179f86042a53e9c",
      "Inputs": [
        {
          "Id": "c2b07eb77ded4537b6db6c924e76c948",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "851e10ecd27348899827c7f2c88cdbef",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fad01c671806455c9a351b7c1ab7223b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Введенные в этом узле данные сохраняется в виде списка в переменных IN.\r\nangles = IN[0]\r\nOUT = []\r\nlist=[]\r\nOUT1 =[]\r\n# Разместите код под этой строкой\r\nfor angle in angles:\r\n\tif 315<=angle<=360:\r\n\t\tangle-=315\r\n\telif 270<=angle<315:\r\n\t\tangle-=270\r\n\telif 225<=angle<=270:\r\n\t\tangle-=225\r\n\telif 180<=angle<=225:\r\n\t\tangle-=180\r\n\t\t\r\n\telif 135<=angle<=180:\r\n\t\tangle-=135\r\n\t\t\r\n\telif 90<=angle<=135:\r\n\t\tangle-=90\r\n\t\r\n\telif 45<=angle<=90:\r\n\t\tangle-=45\r\n\t\t\r\n\telif 45<=angle<=0:\r\n\t\tangle-=0\r\n\telse:\r\n\t\tangle=angle\r\n\tlist.Add(round(angle,2))\r\n\t\r\nfor angle in list:\r\n\tif angle >= 22.5:\r\n\t\tif angle>=33.4:\r\n\t\t\tangle = 45-angle\r\n\t\telse:\r\n\t\t\tangle = angle-22.5\t\t\r\n\telif angle < 22.5:\r\n\t\tangle=angle\r\n\tOUT1.Add(angle)\r\n\t\r\nOUT.Add(OUT1)\t\t\r\n# Назначьте вывод переменной OUT.\r\n",
      "VariableInputPorts": true,
      "Id": "b6b5d312828a44b69d46df17f4a53696",
      "Inputs": [
        {
          "Id": "5cbb8a7d776b4e0c9ee3eec201cc31f4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba0cd56e8ad6497aa0a54a2ad0da0fba",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a2a7fc4b72714bec9548facaea119871",
      "Inputs": [
        {
          "Id": "9b008adeb4f84704a08ecaea1d4945ee",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be61a53be26c47ce808569ce9f4066a8",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "424415419b8e4ee6a039f0ac63d87533",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5b62813ce323471abd5faee8180acfb1",
      "Inputs": [
        {
          "Id": "d0b11b789cc047228260444225d21f20",
          "Name": "list",
          "Description": "Список для выравнивания.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76c348ef08cd4bbb8812166f9cd29dbb",
          "Name": "amt",
          "Description": "Слои вложения для удаления.\n\nint\nЗначение по умолчанию : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75ace101c6904570b12d571290909bfe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Выравнивание вложенного списка списков по определенному количественному значению.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "(ar>45?90-ar:ar);",
      "Id": "9e0122223f3f4f3b9308222fe0c9c871",
      "Inputs": [
        {
          "Id": "6e299047302040689c11fac96f9c17f0",
          "Name": "ar",
          "Description": "ar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7f117751dce4d2aa5b32f8a79c8e67c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "62905af78e8b4e099aa4bb9e95954fc4",
      "Inputs": [
        {
          "Id": "17d9b3d317e54eb2ba5d33345e1d070d",
          "Name": "list",
          "Description": "Список, который требуется отфильтровать, исключив повторы.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f17846cb41f4b869c232e0258bc065a",
          "Name": "list",
          "Description": "Отфильтрованный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание нового списка, содержащего все уникальные элементы из заданного списка.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "f539b90be4c844188aa551f092a26639",
      "Inputs": [
        {
          "Id": "e7fe52166a8248e1a4b6851e717e2861",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdc0cff639f044a099ce39b8c842bb22",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e70a00548de454db759d70229be2657",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "609694bec3104042bd67d230b650a6dc",
      "Inputs": [
        {
          "Id": "674d05fa427a456dbf0326a3c58dd5a7",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2515c7676f4444078a466f6bc10e4d14",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f90c45a52813494686536dedc7af6768",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d96cae55afe849909996dc526acaddec",
      "Inputs": [
        {
          "Id": "213c1605902e4fa599436cbbb8477aff",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "491fb7163b3a4fd29a0d21bbc5455216",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1fb0efdb5dbc4a6f87ef28f797c65695",
      "Inputs": [
        {
          "Id": "335c5ceb29a549119a5d4f26f28b11ac",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e60d10372d774bd28fdc3170bc18a866",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "51fed421c89f43eb82f8c05371a286c9",
      "Inputs": [
        {
          "Id": "0bff7e2e3fdb49b395128ffadfd9fb10",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdc95b1d3e5248a38fb6a879c6f77b33",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8b407541161f4c1fb86455d522032eb5",
      "Inputs": [
        {
          "Id": "1052d7c1362544d6afa8ef8ab3a6dfe2",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17e0cadf64d4494fa81134ee3ae7b9e7",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "86fc3e6325b547f0ac56814a41bbf7fd",
      "Inputs": [
        {
          "Id": "b2e1cf9527db4a55becb9fa193a851ac",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5095be5bcc8849b689f24eefcfea3d8c",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48dde48f7ac248a58c7ed79969a14780",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "24453078a3fb4adbb8d129352ad8f3d0",
      "Inputs": [
        {
          "Id": "464b2a04685a4d94bafc375d44d39b51",
          "Name": "list0",
          "Description": "Списки для объединения в один.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7314d3748b864c9eaefaa68c612685e5",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fa08155eee84f3185bfc0a3a7ca9623",
          "Name": "list",
          "Description": "Объединенный список.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Объединение всех имеющихся списков в один.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4573a20c13f74b5e98288fd8cb53d96d",
      "Inputs": [
        {
          "Id": "7f1ddb8b5a904780ba0b18567682f8cd",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39a33d89dc044259a265c457500f3e7d",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "cdc6279bc48d479dae854951953c72bf",
      "Inputs": [
        {
          "Id": "4cb05c2b11c145a682c0a2345963836e",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b05f959c88c49d4b6a0b96f466bb211",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d895183f196b4357949f2d1899454eb3",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "10d44301ab684a1eb0d865713352831e",
      "Inputs": [
        {
          "Id": "04a1d46ec9314d1b84ac70288fa69ac0",
          "Name": "list1",
          "Description": "Список объектов, которые будут включены в новый список.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c0b749ef909407f8b230c3753b3340c",
          "Name": "list2",
          "Description": "Список объектов, которые будут исключены из нового списка.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6dac1401ef9041edbc2a41d8084341d7",
          "Name": "newList",
          "Description": "Новый список, в котором содержатся объекты из Списка1 и отсутствуют из Списка2.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возвращает новый список, в котором содержатся объекты из Списка1, но отсутствуют объекты из Списка2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nclr.AddReference(\"RevitNodes\")\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nx=IN[0]\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nif isinstance(x, list) == True:\r\n\tfamily= [doc.LoadFamily(i) for i in x]\r\nelse:\r\n\tfamily = doc.LoadFamily(x)\r\n#doc.LoadFamily(FamilyPath)\r\nTransactionManager.Instance.TransactionTaskDone()\r\nOUT=family",
      "VariableInputPorts": true,
      "Id": "3973e2539c33470ea52957720497991a",
      "Inputs": [
        {
          "Id": "decda197f7914f499c3e485717ed3a50",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ecccd3c8367489abd06e5569df08a8d",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Q:\\4. Семейства\\430_Отверстия_задания\\(Отв_Задание)_Перекрытия_Прямоугольное.rfa",
      "Id": "82f0bb2762284f9bb839aeab7febf638",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c43c19b889a4d56ad41170b6380009a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "26586068a49c4e5a911913e2692864c3",
      "Inputs": [
        {
          "Id": "502a35922c4d44139ae6088ab55e2e9e",
          "Name": "item0",
          "Description": "Индекс элемента #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9592bc0798aa474c97d5fbd252df48c3",
          "Name": "item1",
          "Description": "Индекс элемента #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a0c37b6ac5f451e843702e4a557c4bd",
          "Name": "list",
          "Description": "Список",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового списка из заданных входных значений"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Q:\\4. Семейства\\430_Отверстия_задания\\(Отв_Задание)_Стены_Прямоугольное.rfa",
      "Id": "e1e04f2f6da84d17aaf179eb4346b420",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f801a8017179428484d190f3792929c4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "c1b60f6a236b43c0b36c8c89fc20daaf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7a3f6ed8dea48f5acd45ede74075e66",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "600;\n800;\n300;",
      "Id": "a89b8cfd32734473a51b477e9a114dc2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abd6818b1c8f43098b03c8e66f0feed5",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f50df26fd7b14d039e5b64c29b65bf13",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40f1942b1b16486cac19951f9f800ecb",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Отмена",
      "Id": "cb6ffc8f83d840409b00d156e78c5645",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29438dadf4524cde81e87c7597554d13",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Запуск",
      "Id": "28e3a7d24acb40bca176a24656e4ff87",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "193e32fc8b9a43e9a6736213d6aafd14",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "09d5ea72512a4b3b8f44fa9cefb211b7",
      "Inputs": [
        {
          "Id": "77c18c43443244119d22dc890119a0e4",
          "Name": "item0",
          "Description": "Индекс элемента #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "619580004a504cc7b1d5527354f832ac",
          "Name": "item1",
          "Description": "Индекс элемента #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2f5b4e79598422fa7ca2fd933f04b12",
          "Name": "item2",
          "Description": "Индекс элемента #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "042c81f6c21b477e923dfcf81b29a364",
          "Name": "item3",
          "Description": "Индекс элемента #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3957a12052b74739b3b07be7242133ed",
          "Name": "item4",
          "Description": "Индекс элемента #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3450cf33406f4ffa806597a36b541dc5",
          "Name": "item5",
          "Description": "Индекс элемента #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f705164c0b10479b9568aa68bbd7e003",
          "Name": "list",
          "Description": "Список",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового списка из заданных входных значений"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Создание заданий на отверстия",
      "Id": "881c97bac6624950a54069a9d33ae291",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "529e91d7fdf344ca920bf20fc0323fbb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Минимальная длина учитываемого участка",
      "Id": "0873c21ee66f4aacbb7c1be7068f67ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1fcfa56e0484a8db12c000a92be8139",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "5ba51263a2d5409cbcd28a305885c186",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bbe506ce3ee24dac9c46952579501e72",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "87ba6c9a355d4dbb92428bc30b728327",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f61a38f737ca4be286fb8d6eafa47882",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "50",
      "Id": "627cd9d452364036a0ccb6720524fdc0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f983acc5a5ff4f2b8cc762255a6084cd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "30",
      "Id": "dfa1b219a66946e0a42a6c52d357d962",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a50de56e4824f7798d0b80d7fca4fca",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Минимальный диаметр трубопровода для учета пересечений",
      "Id": "608323e8fd684d0e9f40fb66c3239f93",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa5e722d4e02438da71f80eb3397d590",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Расстояние между гранями\r\n трупопровода и отверстия",
      "Id": "ddbc0fe521e5412398fc94b3f55df127",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b19d895551c14494be8a187c22ad7e69",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "d87dddf6f18643b6821a6ce4877ba2a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "10fedae912624a00a58165bb8b1e3c03",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "50",
      "Id": "a307022778d149c982ad945a19449c29",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d786bc30df2492b949ef4aa717286da",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Округление размеров отверстия",
      "Id": "a939214583ef42f4920a75ced79450ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d00ce13edeca45a08102a224257d983a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "d1a3b37a481146c6b0142c96a98f7472",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e119595a6fb4be9a5699d6eb7a17aec",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "10",
      "Id": "3b685187b5154e0b8637a82e274f3505",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8cd552064a344cba5d7d77c82bbd45f",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Внешняя связь для заданий АР/КЖ",
      "Id": "535f325acce14d58a4f2ffa4f2049b53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7e64c355af664e67976caf049693221b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "1af0cae0641f4b8282f2a545334f3697",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ba73f0ac2cfe4d4f9ecf435243ce1b38",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "КЖ",
      "Id": "4d8bd426dc514a3e9e6e61e6ccd82652",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "358b341740ce4152a27f31f5787a5e9a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "96cfb54594334f6f90479126c290b8eb",
      "Inputs": [
        {
          "Id": "065c015ceb0f46ae830f8ac9302ac86a",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdeff47656444d4387a4772499753451",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[3];\nx[2];",
      "Id": "c760939f41cc4bb3b90c1721b5099907",
      "Inputs": [
        {
          "Id": "30ef4616dd094cdd96cbc54cc6841941",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2252f7b848c64657aacad4196526bb53",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bdde1289a7a41fea9f3d7a5ab154cac",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c15671e5675d4fd8b9b9947b64d9a656",
      "Inputs": [
        {
          "Id": "bd81e6285e27445faae15807b2b61f2a",
          "Name": "",
          "Description": "Узел для оценки.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90ab88f933a143e9a41782464165a2b4",
          "Name": "",
          "Description": "Просмотр содержимого.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Визуализация входного элемента узла."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[4];",
      "Id": "4a94efcd1a3c45d8a6c922d8dbfebc83",
      "Inputs": [
        {
          "Id": "ce3c89d57bce404da1a6597942487eb9",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b087b8b5771046ce89f66b1fb4a722b0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "d64daad985d447ba9fa554e8d37c18bb",
      "Inputs": [
        {
          "Id": "ab64e617d2a3457986ad9a758e76af3e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28202a88e56f408cb082a69004ae5a91",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[1];",
      "Id": "246d3dfa3bbb40e7b6f5cf24784297a5",
      "Inputs": [
        {
          "Id": "5428227e9d444a2f975691db1e99f53c",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87e527009bdd4f6c81adba33ccf49d23",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;\n\"30\";",
      "Id": "7caf7d4c219f48a39a645fe4d76a88c4",
      "Inputs": [
        {
          "Id": "2208e60b61254f9cae1d8ba6f9187b26",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49f4a9c9bfe4412fb535d372cbb64319",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "360092f3c9a2478082271d8d9b7f03ff",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "700;\n800;\n300;",
      "Id": "fcad9efbc63b430bbdd5d93ba7e6e835",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cad39bab42da49e0b691060ddf1d142f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d33e41a695945c380d3bce15151e57e",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bcbec3a8fd94c048959b6589ac343f3",
          "Name": "",
          "Description": "Значение выражения в строке 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "ee0a3d456a9c498795ac93f000009f2d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "89ab4a7ca9284934bde9c103824562c8",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Отмена",
      "Id": "2bd053b91abf47d1bbc648cccd0cd186",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46c6fb16b08a4b46b96dc9573a39849d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c7a464f36e3245948d8fe10fc5540437",
      "Inputs": [
        {
          "Id": "86a69d02422e4417902103b50dc5e8fa",
          "Name": "item0",
          "Description": "Индекс элемента #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f06481a535954d13b9141b5c00985267",
          "Name": "item1",
          "Description": "Индекс элемента #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb364a5aa1444d3fbe1ae1f3a1be1f65",
          "Name": "item2",
          "Description": "Индекс элемента #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b328e9ff6baf49de8e12d873ccbcb8a4",
          "Name": "item3",
          "Description": "Индекс элемента #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d94092fd49747d9bf09a597c2ffb6ea",
          "Name": "item4",
          "Description": "Индекс элемента #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3038accbdf944c893e1a08fa1ba96d7",
          "Name": "item5",
          "Description": "Индекс элемента #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c52c31e879d4ec8aeb838fe9d2db97c",
          "Name": "item6",
          "Description": "Индекс элемента #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a79820516f914428a052bccbae7913af",
          "Name": "item7",
          "Description": "Индекс элемента #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84418b21a97b464aa1b3056ed40c24b8",
          "Name": "list",
          "Description": "Список",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового списка из заданных входных значений"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Выходные данные",
      "Id": "afc2f23c54424c32b8b62335d0883e5d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b76f74031c7f4b03a48fdfe30baff2b3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Завершить",
      "Id": "ab78d5ae7a4c471e825edf26557c52b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "63f0bfd3f5ac4c4ea6ccc991a886f769",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "1.1 Создано новых заданий (стены)",
      "Id": "cd366cb608134ffd8aba1fc4522ef28c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "03c7fec5676d4d8fbfae3ce11065648d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "1.2 Создано новых заданий (перекрытия)",
      "Id": "8b18bf7fc55342a4a784dafc0ea8c814",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c0b55ed52b94b57a047e6fb9bb2ea54",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "2.1 Всего заданий в проекте было (стены)",
      "Id": "ab6092f79c5d43a2a7804ec52a0fea23",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "08c3d10e4ab548329c950afd631ed30e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BIM. отверстий в перекрытиях",
      "Id": "f4d442c301f94f1b9ba6f4f0b338274b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "214e27a25b684f69bc5a07a8e4cc843a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BIM. связанные файлы",
      "Id": "d7badd027cbe471aa92ff6b272b6c6cd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8fe9b546784d42eda0b6d03ef09e67d5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BIM. трубы/воздуховоды",
      "Id": "781a19c4f89d49f38e25da714ea5ed5b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad5d08307aa245fd91b275deb341db7b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BIM. отверстия в стенах",
      "Id": "e93877be4c014f5ab25bd3d12a58679c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de576555bf814fc687aa119e8a412b9e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e684c8e77de2412b856a157e9c0af73b",
      "Inputs": [
        {
          "Id": "6e6ea1e374e441989851c848b5b36f26",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab4c0de3d2514faf83b49ad8870029ee",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "70be1a297cda4f1da3d5ef4add336657",
      "Inputs": [
        {
          "Id": "21d32c7e96f643c48594f719f43a9abf",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "786cd98701584e5f9f021f089e728d69",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5548b2f1dbb94ce0aae2c255b059438b",
      "Inputs": [
        {
          "Id": "239306f6938a4bb9b5c375cfe556ebd8",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6467695eddd04f80b881c66c2f38c732",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "87d62093e86d41fe81fda2d91126be99",
      "Inputs": [
        {
          "Id": "84a2fc7fdc55401cb213f38ce663f4dd",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac8b5b58dca647a890716aa8dc922532",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f08c034265f64dd092791b600a8729e6",
      "Inputs": [
        {
          "Id": "a603c4865e5b467e82e6378597c8a76f",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f8dcfcffce346829bfc64d228085866",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f7dd21e6c1d54da58ffb28760cabd9cd",
      "Inputs": [
        {
          "Id": "2c3de85206c04dc5ad0a24b21338eb82",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c761b281db7446aca79943c906332aa7",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "33bfc43a10fc436693685be9d5b4ac10",
      "Inputs": [
        {
          "Id": "e65c66affbd4458fb0e39ee135e07a6a",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f19e29d34fb4f13815d9962e6abbb68",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "716fa2d16f1b4cf5a37091466589a0f4",
      "Inputs": [
        {
          "Id": "7092b3988d0c4e23b6a409be28724020",
          "Name": "obj",
          "Description": "Объект индексации",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2018825269954dc29e0ade58cf872236",
          "Name": "str",
          "Description": "Результат математических вычислений",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Преобразование объекта в строчное представление."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "89ff9efec38147e3b084ba75b698dfbb",
      "Inputs": [
        {
          "Id": "ff2b455aa9d24ef985d341876f6f1b3d",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "650ae02ca07940be810a290647b44c6d",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2b943212c12a4655b4aff07ad5599fef",
      "Inputs": [
        {
          "Id": "6668aceb913441eca10bb20b2a2c54ff",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75353eceab58488e83ba0c0eaf7741e6",
          "Name": "count",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Напоминание:",
      "Id": "b3e452db6f34430883241caabb58765f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "410a3bb1d5414c7a9859d63a3ce93b09",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "c720323c44234c59b34e3e1d2b017c44",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5c8f5b394d947248c40842113f82057",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Запускать с разреза, фасада, 3д вида",
      "Id": "c4624e32da6d494a928d7f8068c04878",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6198c2cd2b83456a9529265ab3aab1ff",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Q:\\5. Скрипты Автоматизация\\430_Отверстия\\logo.png",
      "Id": "b80ae10430334bfa9b0d766827206262",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48a6faf1cfcd4280896852c879f939da",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Q:\\5. Скрипты Автоматизация\\430_Отверстия\\logo.png",
      "Id": "4591e4601b2248db999026a00a773f99",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "02ecd4d78c4446e88cfa34378b438f37",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) Data Shapes,  2020\r\n#Data-Shapes www.data-shapes.io , elayoubi.mostafa@data-shapes.io @data_shapes\r\n\t\r\nimport clr\r\nimport sys\r\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\nsys.path.append(pyt_path)\r\nimport os\r\nimport webbrowser\r\nimport unicodedata\r\nimport io\r\nimport tempfile\r\nimport System\r\n\t\r\ntry:\r\n\tclr.AddReference('System.Windows.Forms')\r\n\tclr.AddReference('System.Drawing')\r\n\tclr.AddReference('System.Windows.Forms.DataVisualization')\r\n\t\r\n\tfrom System.Drawing import Point , Size , Graphics, Bitmap, Image, Font, FontStyle, Icon, Color, Region , Rectangle , ContentAlignment , SystemFonts, FontFamily\r\n\tfrom System.Windows.Forms import Application, DockStyle, Button, Form, Label, TrackBar , ToolTip, ColumnHeader, TextBox, CheckBox, FolderBrowserDialog, OpenFileDialog, DialogResult, ComboBox, FormBorderStyle, FormStartPosition, ListView, ListViewItem , SortOrder, Panel, ImageLayout, GroupBox, RadioButton, BorderStyle, PictureBox, PictureBoxSizeMode, LinkLabel, CheckState, ColumnHeaderStyle , ImageList, VScrollBar, DataGridView, DataGridViewSelectionMode, DataGridViewAutoSizeColumnsMode , DataGridViewClipboardCopyMode , TreeView , TreeNode , TreeNodeCollection , AutoScaleMode , Screen, Padding\r\n\tfrom System.Windows.Forms.DataVisualization.Charting import *#Chart , SeriesChartType\r\n\tfrom System.Collections.Generic import *\r\n\tfrom System.Collections.Generic import List as iList\r\n\tfrom System.Windows.Forms import View as vi\r\n\tclr.AddReference('System')\r\n\tfrom System import IntPtr , Char\r\n\tfrom System import Type as SType, IO\r\n\tfrom System import Array\r\n\tfrom System.ComponentModel import Container\r\n\tclr.AddReference('System.Data')\r\n\tfrom System.Data import DataTable , DataView\r\n\r\n\ttry: #try to import All Revit dependencies\r\n\t\tclr.AddReference('RevitAPIUI')\r\n\t\tfrom  Autodesk.Revit.UI import Selection , TaskDialog \r\n\t\tfrom  Autodesk.Revit.UI.Selection import ISelectionFilter\r\n\t\tclr.AddReference('RevitNodes')\r\n\t\timport Revit\r\n\t\tclr.ImportExtensions(Revit.Elements)\r\n\t\tclr.ImportExtensions(Revit.GeometryConversion)\r\n\t\t\r\n\t\tclr.AddReference('RevitServices')\r\n\t\tfrom RevitServices.Persistence import DocumentManager\r\n\t\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\t\tuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\t\r\n\t\tclr.AddReference('RevitAPI')\r\n\t\ttry:\r\n\t\t\tfrom Autodesk.Revit.DB import ImageImportOptions\t\r\n\t\texcept:\r\n\t\t\tfrom Autodesk.Revit.DB import ImageTypeOptions , ImageType, ImagePlacementOptions , ImageInstance\r\n\t\tfrom Autodesk.Revit.DB import FilteredElementCollector , Transaction, View , ViewType , ViewFamily, ViewDrafting, ViewFamilyType, Element, ElementId , FamilyInstance , Document , XYZ, BoxPlacement, UnitUtils\r\n\t\t\r\n\t\ttry:\r\n\t\t\tfrom Autodesk.Revit.DB import  UnitType\r\n\t\texcept:\r\n\t\t\tfrom Autodesk.Revit.DB import SpecTypeId\r\n\r\n\t\tdbviews = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if (v.ViewType == ViewType.FloorPlan or v.ViewType == ViewType.CeilingPlan or v.ViewType == ViewType.Section or v.ViewType == ViewType.Elevation or v.ViewType == ViewType.ThreeD)]\r\n\t\tviewindex = 0\r\n\t\ttry:\r\n\t\t\tUIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n\t\texcept:\r\n\t\t\tUIunit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n\t\t\t\r\n\t\tclass selectionfilter(ISelectionFilter):\r\n\t\t\tdef __init__(self,category):\r\n\t\t\t\tself.category = category\r\n\t\t\tdef AllowElement(self,element):\r\n\t\t\t\tif element.Category.Name in [c.Name for c in self.category]:\r\n\t\t\t\t\treturn True\r\n\t\t\t\telse:\r\n\t\t\t\t\treturn False\r\n\t\t\tdef AllowReference(reference,point):\r\n\t\t\t\treturn False\r\n\r\n\r\n\t\t\t\r\n\texcept: #in case we are in the Sandbox, Formit or Civil 3D environment\r\n\t\tpass\r\n\t\r\n\timportcolorselection = 0\r\n\t\r\n\ttry:\r\n\t\tfrom  Autodesk.Revit.UI import ColorSelectionDialog\r\n\texcept:\r\n\t\timportcolorselection = 1\r\n\t\r\n\r\n\t\r\n\tclr.AddReference('ProtoGeometry')\r\n\tfrom Autodesk.DesignScript.Geometry import Point as dsPoint\r\n\r\n\tfrom System.Reflection import Assembly\r\n\timport xml.etree.ElementTree as et\r\n\t\r\n\r\n\t\r\n\timport re\t\r\n\tdef regexEndNum(input):\r\n\t\ttry:\r\n\t\t\treturn \tre.search('(\\d+)$', input).group(0)\r\n\t\texcept:\r\n\t\t\treturn \"\"\r\n\r\n\tdef iterateThroughNodes(collection,li):\r\n\t\tif hasattr(collection,'Nodes'):\r\n\t\t\tntest = collection.Nodes\r\n\t\t\tif len(ntest) > 0:\r\n\t\t\t\tfor i in ntest:\r\n\t\t\t\t\titerateThroughNodes(i,li)\r\n\t\t\telse:\r\n\t\t\t\tif collection.Checked:\r\n\t\t\t\t\tli.append(collection.Tag)\r\n\t\treturn li\r\n\t\t\r\n\r\n\t\r\n\tclass MultiTextBoxForm(Form):\r\n\t\t\r\n\t    def __init__(self):\r\n\t        self.Text = 'strana developer'\r\n\t        self.output = []\r\n\t        self.values = []\r\n\t        self.cancelled = False\r\n\t\r\n\t    def setclose(self, sender, event):\r\n\t    \tcbindexread = 0\r\n\t    \tif sender.Name != \"Cancel\":\r\n\t    \t\tfor f in self.output:\r\n\t    \t\t\tif f.GetType() == myTextBox:\r\n\t    \t\t\t\tif f._isNum :\r\n\t    \t\t\t\t\tval = float(f.Text)\r\n\t    \t\t\t\telse:\r\n\t    \t\t\t\t\tval = f.Text\r\n\t    \t\t\t\tself.values.append(val)\r\n\t    \t\t\tif f.GetType() == CheckBox:\r\n\t    \t\t\t\tself.values.append(f.Checked)\r\n\t    \t\t\tif f.GetType() == Button:\r\n\t    \t\t\t\tif isinstance(f.Tag ,list):\r\n\t    \t\t\t\t\ttry:\r\n\t    \t\t\t\t\t\tself.values.append([e for e in f.Tag if e.__class__.__name__ != \"Category\"])\t    \t\t\t\t\t\r\n\t    \t\t\t\t\texcept:\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\t    \t\t\t\t\t\r\n\t    \t\t\t\telse:\r\n\t    \t\t\t\t\ttry:\t    \t\t\t\t\r\n\t    \t\t\t\t\t\tif f.Tag.__class__.__name__ != \"Category\":\r\n\t    \t\t\t\t\t\t\tself.values.append(f.Tag)\r\n\t    \t\t\t\t\t\telse:\r\n    \t\t\t\t\t\t\t\tself.values.append([])\r\n\t    \t\t\t\t\texcept:\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\t\r\n\t    \t\t\tif f.GetType() == ComboBox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = f.Text\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == mylistview:\r\n\t    \t\t\t\tself.values.append([f.Values[i.Text] for i in f.CheckedItems])\r\n\t    \t\t\tif f.GetType() == mytrackbar:\r\n\t    \t\t\t\tself.values.append(f.startval+f.Value*f.step)\r\n\t    \t\t\tif f.GetType() == mygroupbox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = [j.Text for j in f.Controls if j.Checked == True][0]\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == myDataGridView:\r\n\t    \t\t\t\tf.EndEdit()\r\n\t    \t\t\t\tdsrc = f.DataSource\r\n\t    \t\t\t\tout = []\r\n\t    \t\t\t\tcolcount = f.ColumnCount\r\n\t    \t\t\t\trowcount = f.RowCount - 1\r\n\t    \t\t\t\tif f.Tag:\r\n\t\t    \t\t\t\tl = []\r\n\t    \t\t\t\t\tfor i in range(colcount):\t    \t\t\t\t\t\t\r\n\t    \t\t\t\t\t\tl.append(dsrc.Columns[i].ColumnName)\r\n\t    \t\t\t\t\tout.append(l)\t    \t\t\t\t\t\t\r\n\t\t    \t\t\t\tfor r in range(rowcount):\r\n\t\t    \t\t\t\t\tl = []\r\n\t\t    \t\t\t\t\tfor i in range(colcount):\r\n\t\t    \t\t\t\t\t\tl.append(dsrc.DefaultView[r].Row[i])\r\n\t\t    \t\t\t\t\tout.append(l)\r\n\t    \t\t\t\telse: \r\n\t\t    \t\t\t\tfor r in range(rowcount):\r\n\t\t    \t\t\t\t\tl = []\r\n\t\t    \t\t\t\t\tfor i in range(colcount):\r\n\t\t    \t\t\t\t\t\tl.append(dsrc.DefaultView[r].Row[i])\r\n\t\t    \t\t\t\t\tout.append(l)\r\n\t    \t\t\t\tself.values.append(out)\r\n\t    \t\t\tif f.GetType() == TreeView:\r\n\t    \t\t\t\tls = []\r\n\t    \t\t\t\tnds = f.Nodes[0]\r\n\t    \t\t\t\titerateThroughNodes(nds,ls)\r\n\t    \t\t\t\tself.values.append(ls)\r\n\t    \t\t\tif f.GetType() == GroupBox:\r\n\t    \t\t\t\trb = [c for c in f.Controls if c.GetType() == RadioButton and c.Checked][0]\r\n\t    \t\t\t\tself.values.append(rb.Text)\r\n\t    \t\t\t\tf.Controls.Remove(rb)\r\n\t    \telse:\r\n\t    \t\tself.values = None\r\n\t    \t\tself.cancelled = True\r\n\t    \tself.Close()\r\n\t\r\n\t    def reset(self, sender, event):\r\n\t\t\tpass\r\n\t\r\n\t    def openfile(self, sender, event):\r\n\t\t\tofd = OpenFileDialog()\r\n\t\t\tdr = ofd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = ofd.FileName\r\n\t\t\t\tsender.Tag = ofd.FileName\r\n\r\n\t    def exportToExcel(self, sender, event):\r\n\t    \t#importing Excel IronPython libraries\r\n\t    \tclr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')\r\n\t    \tfrom Microsoft.Office.Interop import Excel\r\n\t    \tex = Excel.ApplicationClass()\r\n\t    \tex.Visible = sender.Tag[1]\r\n\t    \tex.DisplayAlerts = False\r\n\t    \tfbd = FolderBrowserDialog()\r\n\t    \tfbd.SelectedPath = sender.Text\r\n\t    \tparent = sender.Parent\r\n\t    \tfptextbox = parent.GetChildAtPoint(Point(parent.Location.X,sender.Location.Y+5*yRatio))\r\n\t    \tdataGrid = parent.GetChildAtPoint(Point(parent.Location.X,parent.Location.Y+23*xRatio))\r\n\t    \tdataTable = dataGrid.DataSource\r\n\t    \tfptext = fptextbox.Text\r\n\t    \ttitletext = parent.GetChildAtPoint(Point(0,0)).Text\r\n\t    \tdr = fbd.ShowDialog()\r\n\t    \tfrstRwTtle = sender.Tag[0]\r\n\t    \tif frstRwTtle:\r\n\t    \t\t_header = Excel.XlYesNoGuess.xlYes\r\n\t    \telse:\r\n\t    \t\t_header = Excel.XlYesNoGuess.xlNo\r\n\t    \tif dr == DialogResult.OK:\r\n\t    \t\tworkbk = ex.Workbooks.Add()\r\n\t    \t\tworksheet = workbk.Worksheets.Add()\r\n\t    \t\t#Writing title and doc info\r\n\t    \t\tif sender.Tag[2]:\r\n\t\t    \t\ttitleCell = worksheet.Cells[1,1]\r\n\t\t    \t\tworksheet.Cells[2,1].Value2 = sender.Tag[3]\r\n\t\t    \t\ttitleCell.Value2 = titletext\r\n\t\t    \t\ttitleCell.Font.Size = 18\r\n\t\t    \t\ttitleCell.Font.Bold = True\r\n\t\t    \t\tstartR = 3\r\n\t\t    \t\tendR = 3\r\n\t\t    \telse:\r\n\t\t    \t\tstartR = 1\r\n\t\t    \t\tendR = 0\t\r\n\t\t    \tif frstRwTtle:\r\n\t\t    \t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t    \t\t\tworksheet.Cells[startR,j+1] = dataTable.Columns[j].ColumnName\t\t    \t\r\n\t\t    \t\tfor i in range(0,dataTable.Rows.Count):\r\n\t\t    \t\t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t\t    \t\t\tworksheet.Cells[i+startR+1,j+1] = dataTable.DefaultView[i].Row[j].ToString()\r\n\t\t    \t\txlrange = ex.get_Range(worksheet.Cells[startR,1],worksheet.Cells[dataTable.Rows.Count+endR+1,dataTable.Columns.Count])\t\t\t    \t\t\t\r\n\t\t    \telse :\r\n\t\t    \t\tfor i in range(0,dataTable.Rows.Count):\r\n\t\t    \t\t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t\t    \t\t\tworksheet.Cells[i+startR,j+1] = dataTable.DefaultView[i].Row[j].ToString()\t\t    \t\r\n\t\t    \t\txlrange = ex.get_Range(worksheet.Cells[startR,1],worksheet.Cells[dataTable.Rows.Count+endR,dataTable.Columns.Count])\r\n\t\t    \txlrange.Columns.AutoFit()\r\n\t\t    \tworksheet.ListObjects.Add(Excel.XlListObjectSourceType.xlSrcRange, xlrange, SType.Missing, _header, SType.Missing).Name = \"DataShapesTable\"\r\n\t\t    \tworksheet.ListObjects[\"DataShapesTable\"].TableStyle =  \"TableStyleMedium16\"\r\n\t    \t\tworkbk.SaveAs(fbd.SelectedPath + \"\\\\\" + fptext)\r\n\t    \t\tif not sender.Tag[1]:\r\n\t    \t\t\tworkbk.Close()\r\n\t    \t\t\tex.Quit()\r\n\r\n\t    def startCell(self, sender, event ):\r\n\t\t\tsender.startcell[\"X\"] = event.ColumnIndex\r\n\t\t\tsender.startcell[\"Y\"] = event.RowIndex\t\r\n\r\n\t    def endCell(self, sender, event ):\r\n\t    \ttry:\r\n\t\t\t\tsender.endcell[\"X\"] = event.ColumnIndex\r\n\t\t\t\tsender.endcell[\"Y\"] = event.RowIndex \r\n\t\t\t\tstartval = sender.Rows[sender.startcell[\"Y\"]].Cells[sender.startcell[\"X\"]].Value\r\n\t\t\t\tendNum = regexEndNum(startval)\r\n\t\t\t\tif endNum != \"\":\r\n\t\t\t\t\tif sender.endcell[\"Y\"] == sender.startcell[\"Y\"]:\r\n\t\t\t\t\t\tfor e,i in enumerate(range(sender.startcell[\"X\"],sender.endcell[\"X\"] + 1)):\r\n\t\t\t\t\t\t\tsender.Rows[sender.startcell[\"Y\"]].Cells[i].Value = startval[:-len(endNum)] + str(int(endNum) + e)\r\n\t\t\t\t\telif sender.endcell[\"X\"] == sender.startcell[\"X\"]:\r\n\t\t\t\t\t\tfor e,i in enumerate(range(sender.startcell[\"Y\"],sender.endcell[\"Y\"] + 1)):\r\n\t\t\t\t\t\t\tsender.Rows[i].Cells[sender.endcell[\"X\"]].Value = startval[:-len(endNum)] + str(int(endNum) + e)\r\n\t\t\t\telse:\t\t\t\t\r\n\t\t\t\t\tif sender.endcell[\"Y\"] == sender.startcell[\"Y\"]:\r\n\t\t\t\t\t\tfor i in range(sender.startcell[\"X\"],sender.endcell[\"X\"] + 1):\r\n\t\t\t\t\t\t\tsender.Rows[sender.startcell[\"Y\"]].Cells[i].Value = startval\r\n\t\t\t\t\telif sender.endcell[\"X\"] == sender.startcell[\"X\"]:\r\n\t\t\t\t\t\tfor i in range(sender.startcell[\"Y\"],sender.endcell[\"Y\"] + 1):\r\n\t\t\t\t\t\t\tsender.Rows[i].Cells[sender.endcell[\"X\"]].Value = startval\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\t    \t\t    \t\r\n\t    def startRowDrag(self, sender, event ):\r\n\t    \tshmak\r\n\t\t\t\r\n\t    def opendirectory(self, sender, event):\r\n\t\t\tfbd = FolderBrowserDialog()\r\n\t\t\tfbd.SelectedPath = sender.Text\r\n\t\t\tdr = fbd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = fbd.SelectedPath\r\n\t\t\t\tsender.Tag = fbd.SelectedPath\r\n\t\r\n\t    def pickobjects(self, sender, event):   \r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t#THIS METHOD IS FOR CIVIL 3D EVIRONMENT\r\n\t    def pickautocadobjects(self, sender, event):   \r\n\t\t\tselelem = []\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tacadDoc = System.Runtime.InteropServices.Marshal.GetActiveObject(\"Autocad.Application\").ActiveDocument\r\n\t\t\t\tacadDoc.Activate()\r\n\t\t\t\tacadUser = acadDoc.GetVariable(\"users5\")\t\r\n\t\t\t\tacadDoc.SendCommand(\"(and(princ\\042\"+ sender.Text + \"\\042)(setq ss(ssget))(setvar\\042users5\\042\\042LinkDWGUIOK\\042)(command\\042_.Select\\042ss\\042\\042)) \")\r\n\t\t\t\tselection_ = acadDoc.ActiveSelectionSet\r\n\t\t\t\tacadDoc.SendCommand(\"(setq ss nil) \")\r\n\t\t\t\tif acadDoc.GetVariable(\"users5\") == \"LinkDWGUIOK\" and selection_ != None:\r\n\t\t\t\t\tfor sel in selection_:\t\t\t\t\r\n\t\t\t\t\t\tselelem.append(sel)\t\t\r\n\t\t\t\t\tacadDoc.SetVariable(\"users5\", acadUser)\r\n\t\t\t\tsender.Tag = list(selelem)\t\t\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\r\n\r\n\t    def pickautocadobject(self, sender, event):   \r\n\t\t\tselelem = None\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tacadDoc = System.Runtime.InteropServices.Marshal.GetActiveObject(\"Autocad.Application\").ActiveDocument\r\n\t\t\t\tacadUser = acadDoc.GetVariable(\"users5\")\r\n\t\t\t\tacadPickBox = acadDoc.GetVariable(\"pickbox\")\r\n\t\t\t\tacadDoc.SetVariable(\"pickbox\", 5)\r\n\t\t\t\tacadDoc.Activate()\r\n\t\t\t\tacadDoc.SendCommand(\"(setq obj(car(entsel\\042\" + sender.Text + \"\\042))) \")\r\n\t\t\t\tacadDoc.SendCommand(\"(and obj(setvar\\042users5\\042(cdr(assoc 5(entget obj))))(setq obj nil)) \")\t\t\r\n\t\t\t\tselection_ = acadDoc.GetVariable(\"users5\")\r\n\t\t\t\tacadDoc.SetVariable(\"pickbox\", acadPickBox)\r\n\t\t\t\tacadDoc.SetVariable(\"users5\", acadUser)\r\n\t\t\t\tselelem = acadDoc.HandleToObject(selection_)\r\n\t\t\t\tsender.Tag = selelem\t\t\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\r\n\r\n\t    def pickobjectsordered(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\toutput = []\r\n\t\t\ttest = True\r\n\t\t\tTaskDialog.Show(\"Data|Shapes\", 'Pick elements in order, then hit ESC to exit.')\r\n\t\t\twhile test:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tsel = doc.GetElement(uidoc.Selection.PickObject(Selection.ObjectType.Element, 'Pick elements in order').ElementId)\r\n\t\t\t\t\toutput.append(sel.ToDSType(True))\r\n\t\t\t\texcept : \r\n\t\t\t\t\ttest = False\r\n\t\t\t\tsender.Tag = output\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t    \r\n\t    def pickobjectsofcatordered(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\toutput = []\r\n\t\t\ttest = True\r\n\t\t\tif isinstance(sender.Tag,list):\t\t\t\r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\tTaskDialog.Show(\"Data|Shapes\", 'Select %s in order, then press ESC to exit.' %(', '.join([c.Name for c in category])))\r\n\t\t\twhile test:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\t\tsel = doc.GetElement(uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt, 'Select %s' %(', '.join([c.Name for c in category]))).ElementId)\t\t\t\t\r\n\t\t\t\t\toutput.append(sel.ToDSType(True))\r\n\t\t\t\texcept : \r\n\t\t\t\t\ttest = False\r\n\t\t\t\tsender.Tag = (output)\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobjects(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked elements and press Finish.')\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.LinkedElement,'Select the linked elements and press Finish.')\r\n\t\t\t\tselelem = [link.GetElement(s.LinkedElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\t\r\n\r\n\t    def pickobject(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobject(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked element.')\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.LinkedElement,'Select the linked element.')\r\n\t\t\t\tselelem = link.GetElement(sel.LinkedElementId)\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\t\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickobjectsofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def pickobjectofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickfaces(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tselface = uidoc.Selection.PickObjects(Selection.ObjectType.Face,'')\r\n\t\t\t\tfor s in selface:\r\n\t\t\t\t\tf = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).ToProtoType(True)\r\n\t\t\t\t\t[i.Tags.AddTag(\"RevitFaceReference\", s) for i in f]\r\n\t\t\t\t\tfaces.append(f)\r\n\t\t\t\tsender.Tag = [i for j in faces for i in j]\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickpointsonface(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tselpoints = uidoc.Selection.PickObjects(Selection.ObjectType.PointOnElement,'')\r\n\t\t\tpoints = []\r\n\t\t\tfor s in selpoints:\r\n\t\t\t\tpt = s.GlobalPoint\r\n\t\t\t\tpoints.append(dsPoint.ByCoordinates(UnitUtils.ConvertFromInternalUnits(pt.X,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Y,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Z,UIunit)))\r\n\t\t\tsender.Tag = points\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickedges(self, sender, event):\r\n\t\t\tedges = []\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\t\r\n\t\t\ttry:\t\t\t\t\r\n\t\t\t\tseledge = uidoc.Selection.PickObjects(Selection.ObjectType.Edge,'')\r\n\t\t\t\tfor s in seledge:\r\n\t\t\t\t\te = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).AsCurve().ToProtoType(True)\r\n\t\t\t\t\te.Tags.AddTag(\"RevitFaceReference\", s)\r\n\t\t\t\t\tedges.append(e)\r\n\t\t\t\tsender.Tag = edges\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def colorpicker(self, sender, event):\r\n\t\t\tdialog = ColorSelectionDialog()\r\n\t\t\tselection = ColorSelectionDialog.Show(dialog)\r\n\t\t\tselected = dialog.SelectedColor\r\n\t\t\tsender.Tag = selected\r\n\t\t\tsender.BackColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\t\tsender.ForeColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\r\n\t    def topmost(self):\r\n\t\t\tself.TopMost = True\r\n\t\r\n\t    def lvadd(self, sender, event):\r\n\t\t\tsender.Tag = [i for i in sender.CheckedItems]\r\n\t\t\t\r\n\t    def scroll(self, sender, event):\r\n\t\t\tparent = sender.Parent\r\n\t\t\tchild = parent.GetChildAtPoint(Point(0,5*yRatio))\r\n\t\t\tchild.Text = str(sender.startval+sender.Value*sender.step)\r\n\r\n\t    def openurl(self, sender, event):\r\n\t\t\twebbrowser.open(sender.Tag)\r\n\t\r\n\t    def selectall(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = True\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t    def selectnone(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = False\r\n\t\t\telse:\r\n\t\t\t\tpass\t\t\r\n\r\n\t    def updateallnone(self, sender, event):\r\n\t    \ttry:\r\n\t    \t\tparent = sender.Parent\r\n\t    \t\trball = parent.GetChildAtPoint(Point(0,sender.Height + 5*yRatio))\r\n\t    \t\trbnone = parent.GetChildAtPoint(Point(80 * xRatio,sender.Height + 5*yRatio))\r\n\t    \t\tif sender.CheckedItems.Count == 0 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count-1 and event.NewValue == CheckState.Checked:\r\n\t    \t\t\trball.Checked = True\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == 1 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = True\t    \t\r\n\t    \t\telse :\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\r\n\t    def zoomcenter(self, sender, event ):\r\n\t\t\tif event.X > 15:\t    \r\n\t\t\t\ttry:\r\n\t\t\t\t\telement = doc.GetElement(uidoc.Selection.GetElementIds()[0])\r\n\t\t\t\t\tuidoc.ShowElements(element)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t    def setviewforelement(self, sender, event ):    \r\n\t\t\tif event.X > 15*xRatio:\t    \t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\titem = sender.GetItemAt(event.X,event.Y).Text\r\n\t\t\t\t\telement = UnwrapElement(sender.Values[item])\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(element.__class__).ToElements()])]\r\n\t\t\t\t\texcept:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(FamilyInstance).ToElements()])]\r\n\t\t\t\t\tglobal viewindex\r\n\t\t\t\t\tdbView = viewsforelement[viewindex]\r\n\t\t\t\t\tid = [element.Id]\r\n\t\t\t\t\ticollection = iList[ElementId](id)\r\n\t\t\t\t\tuidoc.Selection.SetElementIds(icollection)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\t    \r\n\t\t\t\tpass\r\n\r\n\r\n\t    def CheckChildren(self, sender, event ):\r\n\t\t\tevNode = event.Node\t    \r\n\t\t\tcheckState = evNode.Checked\t\r\n\t\t\tfor n in event.Node.Nodes:\t   \t\r\n\t\t\t\tn.Checked = checkState\t\t\t\r\n\t\t\t\t\r\n\t    def ActivateOption(self, sender, event ):\r\n\t    \tparent = sender.Parent\r\n\t    \tassociatedControls = [p for p in parent.Controls if p.Name == sender.Text and p.GetType() == Panel][0]\r\n\t    \trestofcontrols = [p for p in parent.Controls if p.Name != sender.Text and p.GetType() == Panel]\r\n\t    \tif sender.Checked:\r\n\t    \t\tassociatedControls.Enabled = True\r\n\t    \t\tfor c in restofcontrols:\r\n\t    \t\t\tc.Enabled = False\r\n\t    \t\tparent.Tag = sender.Text\r\n\t    \t\t\r\n\t    def showtooltip(self, sender, event ):\r\n\t    \tttp = ToolTip()\r\n\t    \tttp.AutoPopDelay = 10000\r\n\t    \tttp.SetToolTip(sender , sender.Tag)\t\r\n\r\n\t    def numsOnly(self, sender, event ):\r\n\t    \tif Char.IsDigit(event.KeyChar)==False and event.KeyChar != \".\" and Char.IsControl(event.KeyChar)==False:\r\n\t    \t\tevent.Handled = True\r\n\t    \r\n\t    def chart_showLabels(self, sender, event):\r\n\t\t\tcb = sender\r\n\t\t\tpanelcht = sender.Parent\r\n\t\t\tchart1 = panelcht.GetChildAtPoint(Point(0,0))\r\n\t\t\tfor s in chart1.Series:\r\n\t\t\t\tif s.ChartType == SeriesChartType.Pie:\r\n\t\t\t\t\tif cb.Checked:\r\n\t\t\t\t\t\ts[\"PieLabelStyle\"] = \"Inside\"\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\ts[\"PieLabelStyle\"] = \"Disabled\"\r\n\t\t\t\telse:\r\n\t\t\t\t\tif cb.Checked:\r\n\t\t\t\t\t\ts.IsValueShownAsLabel = True\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\ts.IsValueShownAsLabel = False\r\n\t    \t\t\r\n\t    def imageexport(self, sender, event):\r\n\t    \timport datetime\r\n\t    \tfrom datetime import datetime\r\n\t    \tfrom RevitServices.Transactions import TransactionManager\r\n\t    \t#Modify resolution before the render\r\n\t    \tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t    \toriginalFont = Font(fontFam,8)\r\n\t    \tpanelcht = sender.Parent\r\n\t    \tchart1 = panelcht.GetChildAtPoint(Point(0,0))\r\n\t    \toriginalTitleFont = chart1.Titles[0].Font\r\n\t    \toriginalWidth = chart1.Width\r\n\t    \toriginalHeight = chart1.Height\r\n\t    \tchart1.Visible = False\r\n\t    \tchart1.Dock = DockStyle.None\r\n\t    \tchart1.Width = 2100 * 0.8\r\n\t    \tchart1.Height = 1500 * 0.8\r\n\t    \tchart1.ChartAreas[0].AxisX.LabelAutoFitStyle = LabelAutoFitStyles.None\r\n\t    \tchart1.ChartAreas[0].AxisY.LabelAutoFitStyle = LabelAutoFitStyles.None\r\n\t    \tchart1.ChartAreas[0].AxisX.LabelStyle.Font = Font(fontFam, 30)\r\n\t    \tchart1.ChartAreas[0].AxisY.LabelStyle.Font = Font(fontFam, 30)\r\n\t    \tchart1.ChartAreas[0].AxisX.TitleFont = Font(fontFam, 30)\r\n\t    \tchart1.ChartAreas[0].AxisY.TitleFont = Font(fontFam, 30)\r\n\t    \tchart1.TextAntiAliasingQuality = TextAntiAliasingQuality.High\r\n\t    \tchart1.BackColor = Color.White\r\n\t    \tchart1.Titles[0].Font = Font(fontFam, 32, FontStyle.Bold)\r\n\t    \tchart1.ChartAreas[0].BackColor = Color.White\r\n\t    \tfor serie in chart1.Series:\r\n\t    \t\tserie.Font = Font(fontFam, 30)\r\n\t\t    \tfor p in serie.Points:\r\n\t\t    \t\tp.Font = Font(fontFam, 30)\r\n\t\t    \t\tp.MarkerSize = 15\r\n\t    \tfor legend in chart1.Legends:\r\n\t    \t\tlegend.Font = Font(fontFam, 30)\r\n\t    \t\tlegend.BackColor = Color.White\r\n\t    \tchart1.Invalidate()\r\n\t    \tchart1.SaveImage(tempfile.gettempdir() + \"\\\\chartImage.bmp\", ChartImageFormat.Bmp)\r\n\t    \t#Get back to original settings\r\n\t    \tchart1.Width = originalWidth\r\n\t    \tchart1.Height = originalHeight\r\n\t    \tchart1.BackColor = Color.Transparent\r\n\t    \tchart1.ChartAreas[0].BackColor = Color.Transparent\r\n\t    \tchart1.ChartAreas[0].AxisX.LabelStyle.Font = originalFont\r\n\t    \tchart1.ChartAreas[0].AxisY.LabelStyle.Font = originalFont\r\n\t    \tchart1.ChartAreas[0].AxisX.TitleFont = originalFont\r\n\t    \tchart1.ChartAreas[0].AxisY.TitleFont = originalFont\r\n\t    \tchart1.Titles[0].Font = originalTitleFont\r\n\t    \tfor serie in chart1.Series:\r\n\t    \t\tserie.Font = originalFont\r\n\t    \t\tfor p in serie.Points:\r\n\t    \t\t\tp.Font = originalFont\r\n\t\t    \t\tp.MarkerSize = 8\r\n\t    \tfor legend in chart1.Legends:\r\n\t    \t\tlegend.Font = originalFont\r\n\t    \t\tlegend.BackColor = Color.Transparent\r\n\t    \tchart1.Invalidate()\r\n\t    \tchart1.Visible = True\r\n\t    \t#Import the picture in a Drafting View\r\n\t    \t#Import the picture in a Drafting View // The try catch if for handling the fact that ImageImportOptions was deprecated in 2020 and is obsolete in 2021\t    \t\r\n\t    \ttry:\r\n\t    \t\timportOptions = ImageImportOptions()\t\r\n\t    \t\timportOptions.Resolution = 72\r\n\t    \t\timportOptions.Placement = BoxPlacement.TopLeft\t    \t\t\r\n\t    \texcept:\r\n\t    \t\timageTypeOption = ImageTypeOptions()\t\r\n\t    \t\timageTypeOption.Resolution = 72\r\n\r\n\t    \tcollector = FilteredElementCollector(doc).OfClass(ViewFamilyType)\r\n\t    \tviewFamilyTypes = []\r\n\t    \tfor c in collector:\r\n\t    \t\tif c.ViewFamily == ViewFamily.Drafting:\r\n\t    \t\t\tviewFamilyTypes.append(c)\r\n\t    \tviewFamilyType = viewFamilyTypes[0]\r\n\t    \tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t    \tdraftView = ViewDrafting.Create(doc,viewFamilyType.Id)\r\n\t    \tdraftView.Name = chart1.Titles[0].Text + datetime.now().strftime(\" (%m/%d/%Y, %H.%M.%S)\")\r\n\t    \timagePath = tempfile.gettempdir() + \"\\\\chartImage.bmp\"\r\n\t    \tnewElement = clr.StrongBox[Element]()\r\n\t    \ttry:\r\n\t    \t\tdoc.Import(imagePath,importOptions,draftView,newElement)\t    \t\r\n\t    \texcept:\r\n\t    \t\timageTypeOption.SetPath(imagePath)\r\n\t    \t\timageType = ImageType.Create(doc,imageTypeOption)\r\n\t    \t\tplacementOptions = ImagePlacementOptions(XYZ(0,0,0),BoxPlacement.TopLeft)\r\n\t    \t\tImageInstance.Create(doc,draftView,imageType.Id,placementOptions)\t    \t\t\r\n\t    \tTransactionManager.Instance.TransactionTaskDone()\r\n\t    \t\t    \t\r\n\t    def chart_showLegend(self, sender, event ):\r\n\t    \tcb = sender\r\n\t    \tpanelcht = sender.Parent\r\n\t    \tchart1 = panelcht.GetChildAtPoint(Point(0,0))\r\n\t    \tif len(chart1.Legends) <= 1:\r\n\t    \t\tfor legend in chart1.Legends:\r\n\t    \t\t\tif cb.Checked:\r\n\t    \t\t\t\tlegend.Enabled = True\r\n\t    \t\t\telse:\r\n\t    \t\t\t\tlegend.Enabled = False\r\n\t    \telse:\r\n\t    \t\tif cb.Checked:\r\n\t    \t\t\tchart1.Legends[1].Enabled = True\r\n\t    \t\telse:\r\n\t    \t\t\tchart1.Legends[1].Enabled = False\r\n\t\t    \t\t\r\n\r\n\tclass mylistview(ListView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\r\n\tclass mytrackbar(TrackBar):\r\n\t\r\n\t\tdef __init__(self,startval,step):\r\n\t\t\tself.startval = startval\r\n\t\t\tself.step = step\r\n\r\n\tclass myDataGridView(DataGridView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.startcell = {}\r\n\t\t\tself.endcell = {}\r\n\t\t\t\r\n\tclass mygroupbox(GroupBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\t\t\t\r\n\tclass myTextBox(TextBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself._isNum = False\r\n\t\r\n\t\t\t\r\n\t#Form initialization\r\n\t\r\n\tform = MultiTextBoxForm()\r\n\txRatio = Screen.PrimaryScreen.Bounds.Width/1920\r\n\tif xRatio == 0:\r\n\t\txRatio = 1\r\n\tyRatio = Screen.PrimaryScreen.Bounds.Height/1080\r\n\tif yRatio == 0:\r\n\t\tyRatio = 1\r\n\tform.topmost()\t\r\n\tform.ControlBox = True\r\n\txlabel = 25 * xRatio\r\n\txinput = 150 * xRatio\r\n\tformy = 10 * yRatio\r\n\tif IN[8] * xRatio > (350 * xRatio):\tformwidth = IN[8] * xRatio\r\n\telse: formwidth = 350 * xRatio\r\n\tfields = []\r\n\terror = 0\r\n\t\r\n\t#Description \r\n\t\r\n\tif IN[3] != \"\":\r\n\t\tdes = Label()\r\n\t\tdes.Location = Point(xlabel,formy)\r\n\t\tdes.Font = Font(\"Arial\", 15,FontStyle.Bold)\t\t\r\n\t\tdes.AutoSize = True\r\n\t\tdes.MaximumSize = Size(formwidth - (2 * xlabel)*xRatio,0)\r\n\t\tdes.Text = IN[3]\r\n\t\tform.Controls.Add(des)\r\n\t\tformy = des.Bottom + (15*xRatio)\r\n\tformheaderheight = formy\r\n\t\r\n\t#Input form\r\n\t\r\n\t# Create a container panel for all inputs\r\n\tbody = Panel()\r\n\tbody.Location = Point(0,formy)\r\n\tbody.Width = formwidth - 15*xRatio\r\n\t\r\n\t\r\n\t# Process form inputs\r\n\tif isinstance(IN[0],list):\r\n\t\tinputtypes = IN[0]\r\n\telse:\r\n\t\tinputtypes = [IN[0]]\r\n\t# This definition is to handle the sorting of special characters\r\n\tdef remove_accents(input_str):\r\n\t    nfkd_form = unicodedata.normalize('NFKD', input_str)\r\n\t    only_ascii = nfkd_form.encode('ASCII', 'ignore')\r\n\t    return only_ascii\t\r\n\r\n\t#Adding Logo \r\n\t#default logo in case no input\t\r\n\tdef getImageByName(ImName):\r\n\t\tdynamo = Assembly.Load('DynamoCore')\r\n\t\tversion = str(dynamo.GetName().Version)[:3]\t\t\r\n\t\tdynPath = os.getenv('APPDATA')+\"\\\\Dynamo\\Dynamo Revit\\\\\" + version \r\n\t\troot = et.parse(dynPath + \"\\DynamoSettings.xml\").getroot()\r\n\t\tlogopaths = []\r\n\t\tfor child in root:\r\n\t\t\tif child.tag == \"CustomPackageFolders\":\r\n\t\t\t\tfor path in child:\r\n\t\t\t\t\tlogopaths.append(path.text + \"\\packages\\Data-Shapes\\extra\\\\\" + ImName)\r\n\t\t\t\t\tlogopaths.append(path.text + \"\\Data-Shapes\\extra\\\\\" + ImName)\r\n\t\tdeflogopath = \"\"\r\n\t\tfor path in logopaths:\r\n\t\t\tif deflogopath == \"\":\r\n\t\t\t\tif os.path.isfile(path):\r\n\t\t\t\t\tdeflogopath = path\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tima = Image.FromFile(deflogopath)\r\n\t\t\t\t\t\tbmp = Bitmap.FromFile(deflogopath)\r\n\t\t\t\t\t\treturn ima,bmp\r\n\t\t\t\t\texcept: \r\n\t\t\t\t\t\tpass\r\n\t\t\t\t\t\t\r\n\ttry:\r\n\t\tif IN[4] != '':\r\n\t\t\ttry:\r\n\t\t\t\tima = Image.FromFile(IN[4])\r\n\t\t\t\tbmp = Bitmap.FromFile(IN[4])\r\n\t\t\texcept:\r\n\t\t\t\tima = IN[4]\r\n\t\t\t\tbmp = IN[4]\r\n\r\n\t\telse :\r\n\t\t\t_ims = getImageByName(\"a.png\")\r\n\t\t\tima = _ims[0]\r\n\t\t\tbmp = _ims[1]\r\n\t\t\t\r\n\t\tlogo = Panel()\r\n\t\tif IN[6] == None:\r\n\t\t\txlogo = 20 * xRatio\r\n\t\t\tylogo = formy+ 10*yRatio\r\n\t\telse:\r\n\t\t\txlogo = 30 * xRatio\r\n\t\t\tylogo = formy\r\n\t\tsize = 110 * xRatio\r\n\t\tlogo = PictureBox()\r\n\t\tratio = (ima.Height)/(ima.Width)\r\n\t\th = float(ima.Height)\r\n\t\tw = float(ima.Width)\r\n\t\tratio = h/w\r\n\t\tlogo.Size = Size(size,size*ratio)\r\n\t\tscaledimage = Bitmap(size,size*ratio)\r\n\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\tgr.DrawImage(ima,0,0,size,size*ratio)\r\n\t\tlogo.Image = ima\r\n\t\tlogo.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\tform.Controls.Add(logo)\r\n\t\tlogo.Location = Point(xlogo,ylogo)\r\n\t\t\r\n\t\t\r\n\t\t#Setting icon \r\n\t\tthumb = bmp.GetThumbnailImage(64, 64, bmp.GetThumbnailImageAbort,IntPtr.Zero)\r\n\t\tthumb.MakeTransparent();\r\n\t\ticon = Icon.FromHandle(thumb.GetHicon())\r\n\t\tform.Icon = icon\r\n\r\n\texcept :\r\n\t\tlogo = Panel()\r\n\t\tlogo.Width = 110 * xRatio\r\n\t\tlogo.Height = 110 * yRatio\r\n\t\r\n\tdef addinput(formbody,inputs,starty,xinput,rightmargin,labelsize,importcolorselection):\r\n\t\ty = starty\r\n\t\tfor j in inputs:\r\n\t\t\tlabel = Label()\r\n\t\t\tlabel.Location = Point(xlabel,y+4*yRatio)\r\n\t\t\tlabel.AutoSize = True\r\n\t\t\tlabel.MaximumSize = Size(labelsize,0)\r\n\t\t\tif j.__class__.__name__ == 'listview' and j.element_count > 0:\r\n\t\t\t\tlabel.Text = j.inputname + '\\n(' + str(j.element_count) + ' element' + (\"s\" if j.element_count > 1 else \"\") + ')'\r\n\t\t\telse:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tlabel.Text = j.inputname\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\tformbody.Controls.Add(label)\r\n\t\r\n\t\t\tif j.__class__.__name__ == 'dropdown':\r\n\t\t\t\tcb = ComboBox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\tcb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\tcb.Location = Point(xlabel,y)\r\n\t\t\t\tcb.Sorted = j._sorted\r\n\t\t\t\t[cb.Items.Add(i) for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )]\r\n\t\t\t\tcb.Tag = j\r\n\t\t\t\tif j.defaultvalue != None:\r\n\t\t\t\t\tdefindex = [i for i in cb.Items].index([i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )][j.defaultvalue])\r\n\t\t\t\t\tcb.SelectedIndex = defindex\r\n\t\t\t\tformbody.Controls.Add(cb)\r\n\t\t\t\tform.output.append(cb)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\t#CHARTS \r\n\t\t\tif j.__class__.__name__ == 'uipiechart':\t\t\t\t\t\r\n\t\t\t\tlabels = j.xseries\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\txseries = [j.xseries]\r\n\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tlabel = SmartLabelStyle()\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs[\"PieLabelStyle\"] = \"Inside\"\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Pie\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,len(xseries)):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Legend text of the points\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tfor p in s.Points: \r\n\t\t\t\t\t\tp.Font = originalFont\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\t\t\t\t\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tlegend1.IsTextAutoFit = True\r\n\t\t\t\tlegend1.LegendStyle = LegendStyle.Column\r\n\t\t\t\tchart1.Legends.Add(legend1)\r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Font = originalFont\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.Font = originalFont\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 30)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uibarchart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\thorizont = j.ishorizontal\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values,_horizont):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tif _horizont:\r\n\t\t\t\t\t\tsrs.ChartType = SeriesChartType.Bar\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tsrs.ChartType = SeriesChartType.Column\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i],horizont))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tlegend1.Docking = Docking.Right\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.Font = originalFont\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uiradarchart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Create a panel for buttons\r\n\t\t\t\tpanelCtrls = Panel()\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\tpanelCtrls.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\tautoheight = 250 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Height = autoheight + 73 * yRatio\r\n\t\t\t\tratio = (panelChart.Height)/(panelChart.Width)\r\n\t\t\t\th = float(panelChart.Height)\r\n\t\t\t\tw = float(panelChart.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\tchart_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tpanelChart.Size = Size(chart_maxsize,chart_maxsize*ratio)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Radar\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tsrs.BorderWidth = 4\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Dock = DockStyle.Fill\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelCtrls.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Show/Hide legend\"\r\n\t\t\t\tpanelCtrls.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Show/Hide labels\"\r\n\t\t\t\tpanelCtrls.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uipointchart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Point\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Change marker size\r\n\t\t\t\toriginalMarkerSize = 8\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tfor p in s.Points:\r\n\t\t\t\t\t\tp.MarkerSize = originalMarkerSize\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\tchartArea1 = chart1.ChartAreas[0]\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend2 = Legend()\r\n\t\t\t\t#Add legends to charts\r\n\t\t\t\tchart1.Legends.Add(legend1)\r\n\t\t\t\tchart1.Legends.Add(legend2)\r\n\t\t\t\t#Create Custom legend\r\n\t\t\t\tcustomevent = CustomizeLegendEventArgs(legend2.CustomItems)\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tlegend2.CustomItems.Add(LegendItem(s.Name.ToString(),s.Color,\"\"))\t\t\t\t\t\r\n\t\t\t\tdef chart_CustomizeLegend(sender, customevent ):\r\n\t\t\t\t\tchart1 = sender\r\n\t\t\t\t\t#legend1.Enabled = False\r\n\t\t\t\t\tlegend2.Name = \"Legend2\"\r\n\t\t\t\t\tfor s,it in zip(series,legend2.CustomItems):\r\n\t\t\t\t\t\tit.ImageStyle = LegendImageStyle.Marker\r\n\t\t\t\t\t\tit.MarkerStyle = s.MarkerStyle\r\n\t\t\t\t\t\tit.MarkerColor = s.Color\r\n\t\t\t\t\t\tit.BorderColor = Color.Transparent\r\n\t\t\t\t\t\tit.MarkerSize *= 1.3\r\n\t\t\t\tlegend1.Enabled = False\r\n\t\t\t\tlegend2.Font = originalFont\r\n\t\t\t\tlegend2.IsTextAutoFit = True\r\n\t\t\t\tlegend2.BackColor = formbody.BackColor\t\t\t\r\n\t\t\t\tchart1.CustomizeLegend += chart_CustomizeLegend\r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uilinechart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Line\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tsrs.BorderWidth = 4\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uisplinechart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Spline\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tsrs.BorderWidth = 4\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uibubblechart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\t#panelChart.Padding = Padding(1) To create a black border\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\tautoheight = 250 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Height = autoheight + 73 * yRatio\r\n\t\t\t\tratio = (panelChart.Height)/(panelChart.Width)\r\n\t\t\t\th = float(panelChart.Height)\r\n\t\t\t\tw = float(panelChart.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\tchart_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tpanelChart.Size = Size(chart_maxsize,chart_maxsize*ratio)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Bubble\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Dock = DockStyle.Fill\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Show/Hide legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\r\n\t\t\telif j.__class__.__name__ == 'uitreeview':\r\n\t\t\t\ttv = TreeView()\r\n\t\t\t\ttv.CheckBoxes = True\r\n\t\t\t\ttitles = j._hastitles\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\ttv.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttv.Location = Point(xlabel,y)\r\n\t\t\t\ttv.Height = j._height\r\n\t\t\t\tdef treeIterationTitle(control, input):\r\n\t\t\t\t\tif isinstance(input,list):\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tcurrentNode = TreeNode(remove_accents(input[0].ToString()))\r\n\t\t\t\t\t\t\tcurrentNode.Tag = \"\"\r\n\t\t\t\t\t\t\tinput.pop(0)\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tcurrentNode = TreeNode(control.Text +\".\"+ str(len(control.Nodes)+1))\r\n\t\t\t\t\t\t\tcurrentNode.Tag = \"\"\r\n\t\t\t\t\t\tcontrol.Nodes.Add(currentNode)\r\n\t\t\t\t\t\tfor i in input:\r\n\t\t\t\t\t\t\ttreeIterationTitle(currentNode, i)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\titem = TreeNode(remove_accents(input.ToString()))\r\n\t\t\t\t\t\titem.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(item)\t\r\n\t\t\t\tdef treeIteration(control, input):\r\n\t\t\t\t\tif isinstance(input,list):\r\n\t\t\t\t\t\tcurrentNode = TreeNode(control.Text +\".\"+ str(len(control.Nodes)+1))\r\n\t\t\t\t\t\tcurrentNode.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(currentNode)\r\n\t\t\t\t\t\tfor i in input:\r\n\t\t\t\t\t\t\ttreeIteration(currentNode, i)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\titem = TreeNode(remove_accents(input.ToString()))\r\n\t\t\t\t\t\titem.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(item)\r\n\t\t\t\tcurrentNode = TreeNode(\"List1\")\r\n\t\t\t\tcurrentNode.Expand()\t\t\t\t\r\n\t\t\t\tif titles:\r\n\t\t\t\t\ttv.Nodes.Add(currentNode)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor dl in j.datalist:\r\n\t\t\t\t\t\ttreeIterationTitle(currentNode,dl)\t\r\n\t\t\t\telse:\r\n\t\t\t\t\ttv.Nodes.Add(currentNode)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor dl in j.datalist:\r\n\t\t\t\t\t\ttreeIteration(currentNode,dl)\r\n\t\t\t\ttv.AfterCheck += form.CheckChildren\t\t\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(tv)\r\n\t\t\t\tform.output.append(tv)\r\n\t\t\t\ty = tv.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'listview':\r\n\t\t\t\tlvp = Panel()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tlvp.Location = Point(xinput,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xinput\t\t\t\t\r\n\t\t\t\telif j.inputname == \"\" and j.element_count != 0:\r\n\t\t\t\t\tlvp.Location = Point(xlabel,y+35*yRatio)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\telse : \r\n\t\t\t\t\tlvp.Location = Point(xlabel,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\t\t\t\t\r\n\t\t\t\tlvp.Height = j.height * yRatio + 25 * yRatio\r\n\t\t\t\t#Creating the listview box\r\n\t\t\t\tlv = mylistview()\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tdummyheader = ColumnHeader()\r\n\t\t\t\tdummyheader.Text = \"\"\r\n\t\t\t\tdummyheader.Name = \"\"\r\n\t\t\t\tdummyheader.Width = -2 * xRatio\r\n\t\t\t\tlv.HeaderStyle = ColumnHeaderStyle.None\r\n\t\t\t\tlv.Columns.Add(dummyheader)\r\n\t\t\t\tlv.Values = j\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlv.CheckBoxes = True\r\n\t\t\t\tlv.View = vi.Details\r\n\t\t\t\tlvItems =  [i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'highlight' or i == 'display_mode' or i == 'element_count' or i == 'default_values' or i == 'sorted' or i == 'showId')]\r\n\t\t\t\tif j.sorted :\r\n\t\t\t\t\tlvItems = sorted(lvItems,key = remove_accents)\r\n\t\t\t\telse:\r\n\t\t\t\t\tpass\r\n\t\t\t\t[lv.Items.Add(i) for i in lvItems]\r\n\t\t\t\tlv.Location = Point(0,0)\r\n\t\t\t\tif j.inputname != \"\" and j.element_count != 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telif j.inputname != \"\" and j.element_count == 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telse:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tlv.Height = j.height * yRatio\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tlv.ItemCheck += form.updateallnone\r\n\t\t\t\tfor i in j.default_values:\r\n\t\t\t\t\tdefInd = lvItems.index([x for x in j.keys() if not (x == 'inputname' or x == 'height' or x == 'highlight' or x == 'display_mode' or x == 'element_count' or x == 'default_values' or x == 'sorted' or x == 'showId')][i])\r\n\t\t\t\t\tlv.Items[defInd].Checked = True\r\n\t\t\t\t#Click listview items to hilight and center in appropriate view\r\n\t\t\t\tif j.highlight :\r\n\t\t\t\t\tlv.MouseDown += form.setviewforelement\r\n\t\t\t\t\tlv.MouseUp += form.zoomcenter\r\n\t\t\t\t\titems = list(lv.Items)\r\n\t\t\t\t\tlv.FullRowSelect = True\r\n\t\t\t\t\tdel items[::2]\r\n\t\t\t\t\tfor item in items:\r\n\t\t\t\t\t\titem.BackColor = Color.FromArgb(230,243,255)\r\n\t\t\t\t#Creating select all and select none radiobuttons\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\trball = RadioButton()\r\n\t\t\t\t\trball.Location = Point(0,(j.height+5)*yRatio)\r\n\t\t\t\t\trball.Width = 100 * xRatio\r\n\t\t\t\t\trball.Height = 20 * yRatio\r\n\t\t\t\t\trball.Font = SystemFonts.DefaultFont\r\n\t\t\t\t\trball.Text = \"Select all\"\r\n\t\t\t\t\trball.Click += form.selectall\r\n\t\t\t\t\trbnone = RadioButton()\r\n\t\t\t\t\trbnone.Location = Point(105 * xRatio,(j.height+5)*yRatio)\r\n\t\t\t\t\trbnone.Width = 100 * xRatio\r\n\t\t\t\t\trbnone.Height = 20 * yRatio\r\n\t\t\t\t\trbnone.Font = SystemFonts.DefaultFont\r\n\t\t\t\t\trbnone.Text = \"Select none\"\t\t\t\r\n\t\t\t\t\trbnone.Click += form.selectnone\t\t\t\r\n\t\t\t\t#Adding controls to panel\r\n\t\t\t\tlvp.Controls.Add(lv)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlvp.Controls.Add(rball)\r\n\t\t\t\t\tlvp.Controls.Add(rbnone)\r\n\t\t\t\tformbody.Controls.Add(lvp)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tform.output.append(lv)\r\n\t\t\t\ty = lvp.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uitext':\r\n\t\t\t\ttb = myTextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tif j._isnum:\r\n\t\t\t\t\ttb._isNum = True\r\n\t\t\t\t\ttb.KeyPress += form.numsOnly\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uimultilinetext':\r\n\t\t\t\ttb = myTextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\ttb.Multiline  = True\r\n\t\t\t\ttb.Height = j._height * yRatio\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tif j._isnum:\r\n\t\t\t\t\ttb._isNum = True\r\n\t\t\t\t\ttb.KeyPress += form.numsOnly\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = tb.Bottom + 25 * yRatio\t\t\t\t\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'tableview':\r\n\t\t\t\t#Creating grouping panel\r\n\t\t\t\ttvp = Panel()\r\n\t\t\t\ttvp.Location = Point(xlabel,y)\r\n\t\t\t\ttvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tif (50 + len(j.dataList) * 15) * yRatio > 800 * yRatio:\r\n\t\t\t\t\tautoheight = 800 * yRatio\r\n\t\t\t\telse:\r\n\t\t\t\t\tautoheight = (50 + len(j.dataList) * 15\t) * yRatio\t\t\t\r\n\t\t\t\ttvp.Height = autoheight + 73 * yRatio\r\n\t\t\t\t#Creating title\r\n\t\t\t\ttitlep = Label()\r\n\t\t\t\ttitlep.Text = j._tabletitle\r\n\t\t\t\ttitlep.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\ttitlep.BackColor = Color.FromArgb(153,180,209)\r\n\t\t\t\ttitlep.Font = Font(\"Arial\", 11, FontStyle.Bold)\r\n\t\t\t\ttitlep.TextAlign = ContentAlignment.MiddleLeft\r\n\t\t\t\ttitlep.BorderStyle = BorderStyle.FixedSingle\r\n\t\t\t\ttitlep.Location = Point(0,0)\r\n\t\t\t\ttvp.Controls.Add(titlep)\r\n\t\t\t\t#Creating data structure\r\n\t\t\t\tdg = myDataGridView()\r\n\t\t\t\t#dg.SelectionMode = DataGridViewSelectionMode.CellSelect\r\n\t\t\t\tdg.EnableHeadersVisualStyles = False\t\t\t\t\r\n\t\t\t\tdt = DataTable()\r\n\t\t\t\tdl = j.dataList\r\n\t\t\t\tfor i in range(len(dl[0])):\r\n\t\t\t\t\tif j._hasTitle:\r\n\t\t\t\t\t\tdt.Columns.Add(remove_accents(dl[0][i].ToString()))\r\n\t\t\t\t\t\trngstart = 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tdt.Columns.Add(\"Column \" + str(i))\r\n\t\t\t\t\t\trngstart = 0\t\t\t\t\t\t\r\n\t\t\t\tfor rindex in range(rngstart,len(dl)):\r\n\t\t\t\t\trow = dt.NewRow()\r\n\t\t\t\t\tfor i in range(len(dl[rindex])):\r\n\t\t\t\t\t\trow[i] = dl[rindex][i]\r\n\t\t\t\t\tdt.Rows.Add(row)\t\t\t\t\t\t\r\n\t\t\t\tdg.Tag = j._hasTitle\t\t\t\t\r\n\t\t\t\tdg.DataSource = dt\r\n\t\t\t\tdg.ClipboardCopyMode = DataGridViewClipboardCopyMode.EnableWithAutoHeaderText\r\n\t\t\t\tdg.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells\r\n\t\t\t\tdg.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tdg.Location = Point(0,23 * yRatio)\r\n\t\t\t\tdg.Height = autoheight\r\n\t\t\t\t#Creatin Excel like drag copy functionalities\r\n\t\t\t\tdg.CellMouseDown += form.startCell\r\n\t\t\t\tdg.CellMouseUp += form.endCell\r\n\t\t\t\t#dg.MouseDown += form.startRowDrag\r\n\t\t\t\t#dg.MouseUp = \t\t\t\r\n\t\t\t\ttvp.Controls.Add(dg)\t\t\t\r\n\t\t\t\ty = tvp.Bottom + 15 * yRatio\r\n\t\t\t\t#Adding export to excel button\r\n\t\t\t\tex = Button()\r\n\t\t\t\tex.Tag = [j._hasTitle , j._openExcel , j._showinfo , j._fileInfo]\r\n\t\t\t\ttry:\r\n\t\t\t\t\texpImage = getImageByName(\"exp.png\")[0]\r\n\t\t\t\t\tex.BackgroundImage = expImage\r\n\t\t\t\texcept:\r\n\t\t\t\t\tex.Text = \"Export\"\t\t\t\t\t\r\n\t\t\t\tex.Width = 60 * xRatio\r\n\t\t\t\tex.Height = 30 * yRatio\r\n\t\t\t\tex.Location = Point(formwidth - 125 * xRatio ,dg.Bottom + 15 * yRatio)\t\t\t\t\t\r\n\t\t\t\ttvp.Controls.Add(ex)\r\n\t\t\t\tex.Click += form.exportToExcel\r\n\t\t\t\t#Adding filepath export textbox\r\n\t\t\t\tfilepathtb = TextBox()\r\n\t\t\t\tfilepathtb.Text = \"ExportFileName\"\r\n\t\t\t\tfilepathtb.Location = Point(0 ,dg.Bottom + 20 * yRatio)\r\n\t\t\t\tfilepathtb.Width = formwidth - xlabel - 125 * xRatio\r\n\t\t\t\ttvp.Controls.Add(filepathtb)\r\n\t\t\t\t#Adding copy to clipboard button\r\n\t\t\t\tcb = Button()\r\n\t\t\t\t#Adding panel to form\r\n\t\t\t\tformbody.Controls.Add(tvp)\r\n\t\t\t\tform.output.append(dg)\r\n\t\t\t\ty = tvp.Bottom + 25 * yRatio\r\n\t\t\t\tform.topmost()\r\n\t\t\telif j.__class__.__name__ == 'uitextnote':\r\n\t\t\t\tgb = GroupBox()\r\n\t\t\t\tgb.Text = j.title\r\n\t\t\t\tgb.Parent = form\r\n\t\t\t\tgb.SendToBack()\r\n\t\t\t\tgb.BackColor = Color.Transparent\r\n\t\t\t\tgb.Location = Point(xlabel, y)\r\n\t\t\t\ttn = Label()\r\n\t\t\t\ttn.Location = Point(xlabel,18 * yRatio)\r\n\t\t\t\ttn.AutoSize = True\r\n\t\t\t\ttn.MaximumSize = Size(formwidth - rightmargin - 50 * xRatio,0)\r\n\t\t\t\ttn.Text = j.textnote\r\n\t\t\t\ttn.BringToFront()\r\n\t\t\t\tgb.Controls.Add(tn)\r\n\t\t\t\tgb.Size = Size(formwidth  - rightmargin - 25 * xRatio, tn.Bottom-tn.Top+25 * yRatio)  \r\n\t\t\t\ty = gb.Bottom + 25 * xRatio\r\n\t\t\t\tformbody.Controls.Add(gb)\r\n\t\t\telif j.__class__.__name__ == 'uibool':\r\n\t\t\t\tyn = CheckBox()\r\n\t\t\t\tyn.Width = formwidth - xinput - rightmargin + 10 * xRatio\r\n\t\t\t\tyn.Location = Point(xinput,y)\r\n\t\t\t\tyn.Text = j.booltext\r\n\t\t\t\tg = yn.CreateGraphics()\r\n\t\t\t\tsizetext = g.MeasureString(yn.Text,yn.Font, formwidth - xinput - rightmargin -20 * xRatio)\r\n\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\tyn.Height = heighttext + 15 * yRatio\r\n\t\t\t\tyn.Checked = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(yn)\r\n\t\t\t\tform.output.append(yn)\r\n\t\t\t\ty = yn.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiradio':\r\n\t\t\t\tyrb = 20 * yRatio\r\n\t\t\t\trbs = []\r\n\t\t\t\trbgroup = mygroupbox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\trbgroup.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\trbgroup.Width = formwidth - xlabel - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\trbgroup.Tag = j\r\n\t\t\t\trbcounter = 0\r\n\t\t\t\tfor key in j.keys():\r\n\t\t\t\t\tif key != 'inputname' and key != 'defaultvalue':\r\n\t\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\t\trb.Text = key \r\n\t\t\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\t\t\trb.Width = formwidth - xinput - rightmargin - 35 * xRatio\r\n\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\trb.Width = formwidth - xlabel - rightmargin - 35 * xRatio\r\n\t\t\t\t\t\trb.Location = Point(20 * xRatio,yrb)\r\n\t\t\t\t\t\tif rbcounter == j.defaultvalue:\r\n\t\t\t\t\t\t\trb.Checked = True\r\n\t\t\t\t\t\trbgroup.Controls.Add(rb)\r\n\t\t\t\t\t\tg = rb.CreateGraphics()\r\n\t\t\t\t\t\tsizetext = g.MeasureString(key,rb.Font, formwidth - xinput - 90*xRatio)\r\n\t\t\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\t\t\trb.Height = heighttext + 15 * yRatio\r\n\t\t\t\t\t\tybot = rb.Bottom\r\n\t\t\t\t\t\tyrb += heighttext + 12 * yRatio\r\n\t\t\t\t\t\trbcounter += 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tpass\r\n\t\t\t\trbgroup.Height = ybot + 20 * yRatio\r\n\t\t\t\t[rbgroup.Controls.Add(rb) for rb in rbs]\r\n\t\t\t\tformbody.Controls.Add(rbgroup)\r\n\t\t\t\tform.output.append(rbgroup)\r\n\t\t\t\ty = rbgroup.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__  == 'uifilepath':\r\n\t\t\t\tfp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tfp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tfp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tfp.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\tif not j.defaultvalue == \"FilePath\":\r\n\t\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\t\tfp.MouseHover += form.showtooltip\t\r\n\t\t\t\tfp.Text = j.buttontext\r\n\t\t\t\tfp.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(fp)\r\n\t\t\t\tfp.Click += form.openfile\r\n\t\t\t\tform.output.append(fp)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uidirectorypath':\r\n\t\t\t\tdp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tdp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tdp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tdp.Location = Point(xlabel,y)\t\t\t\t\r\n\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\tdp.Text = j.buttontext\r\n\t\t\t\tif not j.defaultvalue == \"DirectoryPath\":\r\n\t\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\t\tdp.MouseHover += form.showtooltip\r\n\t\t\t\tdp.Text = j.buttontext\t\r\n\t\t\t\tdp.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(dp)\r\n\t\t\t\tdp.Click += form.opendirectory\r\n\t\t\t\tform.output.append(dp)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.pickobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectautocadelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickautocadobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click += form.pickautocadobject\t\t\t\t\t\t\t\t\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uiselectOrderedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tse.Click  += form.pickobjectsordered\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.picklinkedobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.picklinkedobject\r\n\t\t\t\tform.output.append(se)\r\n\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tsec.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tsec.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.pickobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.pickobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectOrderedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tsec.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tsec.Click += form.pickobjectsofcatordered\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectfaces':\r\n\t\t\t\tsf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsf.Location = Point(xlabel,y)\r\n\t\t\t\tsf.Text = j.buttontext\r\n\t\t\t\tsf.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sf)\r\n\t\t\t\tsf.Click += form.pickfaces\r\n\t\t\t\tform.output.append(sf)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectpointsonface':\r\n\t\t\t\tspf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tspf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tspf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tspf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tspf.Location = Point(xlabel,y)\r\n\t\t\t\tspf.Text = j.buttontext\r\n\t\t\t\tspf.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(spf)\r\n\t\t\t\tspf.Click += form.pickpointsonface\r\n\t\t\t\tform.output.append(spf)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectedges':\r\n\t\t\t\tsed = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsed.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsed.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsed.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsed.Location = Point(xlabel,y)\r\n\t\t\t\tsed.Text = j.buttontext\r\n\t\t\t\tsed.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sed)\r\n\t\t\t\tsed.Click += form.pickedges\r\n\t\t\t\tform.output.append(sed)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uislider':\r\n\t\t\t\tgb = Panel()\r\n\t\t\t\tif j.defaultvalue == '':\r\n\t\t\t\t\tdefval = j.minimum\r\n\t\t\t\telse:\r\n\t\t\t\t\tdefval = j.defaultvalue\r\n\t\t\t\tsl = mytrackbar(j.minimum,j.step)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tgb.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tgb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tgb.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tgb.Location = Point(xlabel,y)\r\n\t\t\t\tgb.Height = 40 * yRatio\r\n\t\t\t\tsl.Minimum = 0\r\n\t\t\t\tsl.Maximum = (j.maximum-j.minimum)/j.step\r\n\t\t\t\tsl.Value = (defval - j.minimum) / j.step\r\n\t\t\t\tsl.TickFrequency = (j.maximum-j.minimum)/j.step/10\r\n\t\t\t\tsl.Location = Point(40 * xRatio,0)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsl.Width = formwidth - xinput - rightmargin - 35 * xRatio\r\n\t\t\t\telse:\r\n\t\t\t\t\tsl.Width = formwidth - xlabel -rightmargin - 35 * xRatio\r\n\t\t\t\tgb.Controls.Add(sl)\r\n\t\t\t\tform.output.append(sl)\r\n\t\t\t\tdisplabel = Label()\r\n\t\t\t\tdisplabel.Width = 50 * xRatio\r\n\t\t\t\tdisplabel.Location = Point(0,5 * yRatio)\r\n\t\t\t\tdisplabel.Text = str(defval)\r\n\t\t\t\tdisplabel.Height = 30 * yRatio\r\n\t\t\t\tdisplabel.BringToFront()\r\n\t\t\t\tgb.Controls.Add(displabel)\t\r\n\t\t\t\tformbody.Controls.Add(gb)\t\t\t\r\n\t\t\t\tsl.Scroll += form.scroll\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiimage':\r\n\t\t\t\tpic = Image.FromFile(j.image)\r\n\t\t\t\tim = PictureBox()\r\n\t\t\t\tif j.showborder:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.Fixed3D\r\n\t\t\t\telse:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.None\r\n\t\t\t\tratio = (pic.Height)/(pic.Width)\r\n\t\t\t\th = float(pic.Height)\r\n\t\t\t\tw = float(pic.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\timage_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tim.Size = Size(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tscaledimage = Bitmap(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\t\t\tgr.DrawImage(pic,0,0,image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tim.Image = pic\r\n\t\t\t\tim.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\t\t\tformbody.Controls.Add(im)\r\n\t\t\t\tim.Location = Point(25 * xRatio,y+25*yRatio)\r\n\t\t\t\ty = im.Bottom + 25 * yRatio\r\n\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 0:\r\n\t\t\t\tcp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tcp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tcp.Location = Point(xlabel,y)\r\n\t\t\t\tcp.Text = j.buttontext\r\n\t\t\t\tcp.Height = 30 * yRatio\r\n\t\t\t\tformbody.Controls.Add(cp)\r\n\t\t\t\tcp.Click += form.colorpicker\r\n\t\t\t\tform.output.append(cp)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 1:\r\n\t\t\t\timportcolorselection = 2\r\n\t\t\telif j.__class__.__name__ == 'uigroup':\r\n\t\t\t\tgrouppanel = GroupBox()\r\n\t\t\t\tgrouppanel.Text = j.groupname\r\n\t\t\t\tgrouppanel.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanel.Width = formwidth - 65 * xRatio\r\n\t\t\t\t#recursive implementation of the definition to process grouped inputs\r\n\t\t\t\taddinput(grouppanel,j.inputgroup,25*yRatio,xinput-25*xRatio,80 * xRatio,90 * xRatio,importcolorselection)\r\n\t\t\t\tformbody.Controls.Add(grouppanel)\r\n\t\t\t\ty = grouppanel.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiconditional':\r\n\t\t\t\tgrouppanelcond = GroupBox()\r\n\t\t\t\tgrouppanelcond.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanelcond.Width = formwidth - 65 * xRatio\t\r\n\t\t\t\tform.output.append(grouppanelcond)\t\t\t\t\r\n\t\t\t\t#recursive implementation of the definition to process conditional groups of inputs\r\n\t\t\t\tpanlist = []\r\n\t\t\t\trblist = []\r\n\t\t\t\typ = 25 * yRatio\r\n\t\t\t\txrb = 25 * xRatio\r\n\t\t\t\tfor i,d in zip(j._Conditions,j._GroupedInputs):\t\r\n\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\trb.CheckedChanged += form.ActivateOption\r\n\t\t\t\t\trb.Text = i\r\n\t\t\t\t\trb.Location\t= Point(xrb,10*yRatio)\r\n\t\t\t\t\trb.Width = 95 * xRatio\r\n\t\t\t\t\trblist.append(rb)\t\t\t\t\t\r\n\t\t\t\t\tgrouppanelcond.Controls.Add(rb)\t\t\t\t\r\n\t\t\t\t\tcondition_pannel = Panel()\r\n\t\t\t\t\tcondition_pannel.Name = i\r\n\t\t\t\t\tcondition_pannel.Top = yp\r\n\t\t\t\t\tcondition_pannel.Width = formwidth - 65 * xRatio\r\n\t\t\t\t\tcondition_pannel.BackColor = Color.Transparent\r\n\t\t\t\t\tcondition_pannel.BringToFront()\t\t\t\t\t\r\n\t\t\t\t\taddinput(condition_pannel,d,25*yRatio,xinput-25*xRatio,80*xRatio,90*xRatio,importcolorselection)\r\n\t\t\t\t\tpanlist.append(condition_pannel)\r\n\t\t\t\t\typ = condition_pannel.Bottom - 25*yRatio\r\n\t\t\t\t\txrb += 100 * xRatio\r\n\t\t\t\tfor pan in panlist:\r\n\t\t\t\t\tgrouppanelcond.Controls.Add(pan)\r\n\t\t\t\tfor e,pan in enumerate(panlist):\r\n\t\t\t\t\tif e != j._defaultOptionIndex:\r\n\t\t\t\t\t\tpan.Enabled = False\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\trblist[j._defaultOptionIndex].Checked = True\r\n\t\t\t\tgrouppanelcond.Height = sum([p.Height for p in panlist]) - (len(panlist)-2)*25 * yRatio\r\n\t\t\t\tgrouppanelcond.BackColor = Color.Transparent\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(grouppanelcond)\r\n\t\t\t\tform.output.append([grouppanelcond.Tag])\t\t\t\t\r\n\t\t\t\ty = grouppanelcond.Bottom + 25*yRatio\r\n\t\t\tformbody.Height = y\r\n\r\n\r\n\t# process input lists \r\n\taddinput(body,inputtypes,0,IN[9],40 * xRatio ,IN[9] * xRatio,importcolorselection)\r\n\t\r\n\t#add the formbody panel to the form\r\n\tform.Controls.Add(body)\t\t\r\n\t\r\n\r\n\tif IN[6] != None:\r\n\t\tif IN[8] > 400 * yRatio:\r\n\t\t\tformy += 50 * yRatio\r\n\t\t\txinput = 270 * yRatio\r\n\t\telse:\r\n\t\t\tformy = logo.Bottom + 20 * yRatio\r\n\telse:\r\n\t\tformy += 50 * yRatio\r\n\r\n\r\n\r\n\t#Adding validation button\r\n\t\r\n\tbutton = Button()\r\n\tbutton.Text = IN[1]\r\n\tbutton.Width = formwidth - xinput - 40 * xRatio\r\n\tbutton.Height = 20 * yRatio\r\n\tbutton.Location = Point (xinput,formy)\r\n\tbutton.Click += form.setclose\r\n\tform.Controls.Add(button)\r\n\tform.MaximizeBox = False\r\n\tform.MinimizeBox = False\r\n\tform.FormBorderStyle = FormBorderStyle.FixedSingle\r\n\t\r\n\t#Adding Cancel button\r\n\tif IN[6] != None:\r\n\t\tcancelbutton = Button()\r\n\t\tcancelbutton.Text = IN[6]\r\n\t\tcancelbutton.Width = 120 * xRatio\r\n\t\tcancelbutton.Height = 20 * xRatio\r\n\t\tcancelbutton.Name = \"Cancel\"\r\n\t\tcancelbutton.Location = Point (xinput -120 * xRatio ,formy)\r\n\t\tcancelbutton.Click += form.setclose\r\n\t\tform.Controls.Add(cancelbutton)\r\n\t\tform.CancelButton = cancelbutton\r\n\t\r\n\t#Adding link to help\r\n\t\r\n\tif IN[5] != None :\r\n\t\thelplink = LinkLabel()\r\n\t\thelplink.Text = \"Help\"\r\n\t\thelplink.Tag = IN[5]\r\n\t\thelplink.Click += form.openurl\r\n\t\thelplink.Location = Point(formwidth - 65 * xRatio ,formy+30 * yRatio)\r\n\t\tform.Controls.Add(helplink)\r\n\telse:\r\n\t\tpass\t\r\n\t\t\t\r\n\tform.ShowIcon = True\r\n\tform.Width = formwidth\r\n\tform.Height = formy + 120 * yRatio\r\n\tformfooterheight = form.Height - formheaderheight\r\n\t\r\n\t# Make formbody scrollable\r\n\t\r\n\t# if the form is longer than its maximum height, do the following:\r\n\t# modify the form height\r\n\t# make the formbody panel scrollable\r\n\tif form.Height + body.Height > IN[7] * yRatio and IN[7] * yRatio > 0:\r\n\t\tformbody_calculatedheight = IN[7] * yRatio - form.Height\r\n\t\t# make sure the formbody is at least 100 px high\r\n\t\tif formbody_calculatedheight < 100 * yRatio: formbody_calculatedheight = 100 * yRatio\r\n\t\tbody.Height = formbody_calculatedheight\r\n\t\tform.Height = form.Height + formbody_calculatedheight\r\n\t\t# this (and apparently only this) will implement a vertical AutoScroll *only*\r\n\t\t# http://stackoverflow.com/a/28583501\r\n\t\tbody.HorizontalScroll.Maximum = 0\r\n\t\tbody.AutoScroll = False\r\n\t\tbody.VerticalScroll.Visible = False\r\n\t\tbody.AutoScroll = True\r\n\t\tbody.BorderStyle = BorderStyle.Fixed3D\r\n\telse:\r\n\t\tform.Height = form.Height + body.Height\r\n\t# Move footer elements\r\n\tlogo.Location = Point(logo.Location.X, logo.Location.Y + body.Height)\r\n\tbutton.Location = Point(button.Location.X, button.Location.Y + body.Height)\r\n\tif IN[6] != None: cancelbutton.Location = Point(cancelbutton.Location.X, cancelbutton.Location.Y + body.Height)\r\n\tif IN[5] != None: helplink.Location = Point(helplink.Location.X, helplink.Location.Y + body.Height)\r\n\r\n\t#Positionning the form at top left of current view\r\n\t#In The revit environment\r\n\ttry:\r\n\t\tuiviews = uidoc.GetOpenUIViews()\r\n\t\tif doc.ActiveView.IsValidType(doc.ActiveView.GetTypeId()):\r\n\t\t\tactiveviewid = doc.ActiveView.Id\r\n\t\t\tactiveUIView = [v for v in uiviews if v.ViewId == activeviewid][0]\r\n\t\telse:\r\n\t\t\tactiveUIView = uiviews[0]\r\n\t\trect = activeUIView.GetWindowRectangle()\r\n\t\tform.StartPosition = FormStartPosition.Manual\r\n\t\tform.Location = Point(rect.Left-7 * xRatio,rect.Top)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\t\t\r\n\tif IN[2]:\r\n\t\tif importcolorselection != 2:\r\n\t\t\tApplication.Run(form)\r\n\t\t\tresult = form.values\r\n\t\t\tOUT = result,True, form.cancelled \r\n\t\telse:\r\n\t\t\tOUT = ['ColorSelection input is only available With Revit 2017'] , False, False\r\n\telse :\r\n\t\tOUT = ['Set toggle to true!'] , False, False\r\nexcept:\r\n\timport traceback\r\n\tOUT = traceback.format_exc() , \"error\", \"error\"\r\n",
      "VariableInputPorts": true,
      "Id": "9141fa0cdd4a4f8ca85300c915d241af",
      "Inputs": [
        {
          "Id": "a4ee46f24d9843768cd08ad28f6e1ebb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f560ad983174ab39f68794241feffce",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa3154d14d2041f2b120305b3203d05a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbb18ce085a4414ea95fb0c1af4cd2b2",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a0798023a5743cc9afe47c52215cc81",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ba36edf9c4b40e3abafb33b47b6cefc",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f189a179b91a4843ad0ecace25c8c44f",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f12eb4ac18014e2b9cb5070311670adc",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e9b2d90b0404c0aaee1c34404d128fb",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bae6333fb81e421ea2cd685c058e2340",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4567d4fc7c224336a91fac5dffafe898",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "4e81b283c96040a49e45953f8619037b",
      "Inputs": [
        {
          "Id": "674073997e0c441097d3c1d21ac10981",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a30df7664a9541e7a3c3fda3dd70daa8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afdc08f52f014778a93a0e3ad1b2dcd2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d385ecbd405043a2ab7cf90a7ef5299b",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "6e2a945ac9ad44d5bbd9f159d2cb501b",
      "Inputs": [
        {
          "Id": "aecf5f14b3614f589c07e9ddffb3c0c4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bbb2b62d1134e03b03088df514745a8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6c5cb00697e49649155d99dfc3402b9",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f2f271d90284514bbbd97a20f27cd75",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "cbadf0be99fe43f1b9fdc6e0ecee9694",
      "Inputs": [
        {
          "Id": "ef3a34137fb54b32855c6db2cb92eaa6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ceddff91ce2b4b7fac78d5759e4ef624",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2211e0d4ddd84c4ea8e6931be8ded0c9",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3c3297d6cdf4502b1641e9fbcd5e093",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "f7e00df0d69d46dc965651f2d2858772",
      "Inputs": [
        {
          "Id": "017c1278c41f406fa7a4e1885db85d97",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7ec5b2cae3b4fba85d73b889dd79c69",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc194bcb0834438696b7c6bcc6b7485a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa0cb9c1491a42b9bce44f9acab36ed5",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "6bd2e7266896439f9490d4723066c54d",
      "Inputs": [
        {
          "Id": "c7f2b75e86b44bbca58545b4748e57ee",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cd4dbb1ebc244be88997b9deeebbf3e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caeeb75826c444568ad661ee01c46e39",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95ed8d1a0fd84832a9b724b475f5bcbe",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "079d8bea06454228bf83858cedb9a26e",
      "Inputs": [
        {
          "Id": "4930ab7bb8f94437af2515ec2c8ca463",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "959d89bd783945559f430eba7e2d5fa1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00c73419f72e4519acff85706f058367",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "473388b48c4e4ebea0eb2a6ee596cfe1",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "cf8b45acf80f4e94817e4e271bf35f55",
      "Inputs": [
        {
          "Id": "d7beb14c12e6462089e1aaee78fc109b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97e83cbd1cc54f0b9d163fe43d971eee",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c055941c9b574a338451fa88e6bca922",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a607114f005c4a95a1ed180ae0b82e33",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "d11f7083a31e49a89e2268284d727073",
      "Inputs": [
        {
          "Id": "7bc74e06b07340d483678628b0b6b28f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0208b6d7c8a4d56bcbcfcefdacc0b60",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d77c9da94fd14e259698f4136bcc4e27",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c708ee411c746e78873e34563f2c689",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "c6144f01eb3c459a8bb374bdba1853ea",
      "Inputs": [
        {
          "Id": "5620bb218fd14ca18cf5e309a3ef1857",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1574fd05077a4bb58391a6f13a2604c1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c9988670c054d6085be1d2fa1626f86",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9ac038efd364cee966577ab10b8b18d",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "2.2 Всего заданий в проекте было (перекрытия)",
      "Id": "8f283baab65f43eda2cf54b1c966f929",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a5a852d82c94262a7081734fb2148c3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "51be20f81df94eacb2a541fdcb993824",
      "Inputs": [
        {
          "Id": "89776bfd992d473b948b6392d0c6d566",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edffe862738744728a999c4b5a52e5ab",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4f81a8e763e4342a2015a5bb6335663",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12910a7192c8425698d5aad3e9a083f9",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "fdebc20156034001944481a9742ceff7",
      "Inputs": [
        {
          "Id": "ec9662b5d7d14a10876908a906a4ad51",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d48fd37bf9e34a6690b868366d4554f9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed43274b4fc84bcbbdb78317c0c8ecc5",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5dc547ab13c349f29bf534a9f5e27dff",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "253ae798c8f94415a9279c65cfff6be9",
      "Inputs": [
        {
          "Id": "135714c19e2348c2b12ff049d7f44e94",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d00393eb192a4e3fab2ca70cd356d01d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef9be6c7d75f42b49587a10e3c3ed86b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a649e1510c09419c8419dfca2a5ad966",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "7f9f752de8504189b904ad09096c1058",
      "Inputs": [
        {
          "Id": "fb2a89f8b0384f07aa10011c41be7aeb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46cb595a00ff4e8c91c7d96e78710704",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c874a6bb53845b395d5a42336a4493f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13288fe073544a30a9b988b7fa5a618f",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) mostafa el ayoubi ,  2018\r\n#Data-Shapes www.data-shapes.net , elayoubi.mostafa@gmail.com\r\n\r\nclass uitext():\r\n\r\n    def __init__(self,inputname,defaultvalue,_isnum):\r\n        self.inputname = inputname\r\n        self._isnum = _isnum\r\n        if _isnum: self.defaultvalue = defaultvalue.replace(',','.')\r\n        else: self.defaultvalue = defaultvalue\r\n\r\n    def __repr__(self):\r\n        return 'UI.Textbox input'\r\n        \r\nx = uitext(IN[0],IN[1],IN[2])\r\n\r\n\r\nOUT = x",
      "VariableInputPorts": true,
      "Id": "79b1c62f11234a1eb5bf4b9e1c30c5c0",
      "Inputs": [
        {
          "Id": "3bb82fd1d380439ba0792d0be9e76de8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c72ed9472ae4f7c8b9e56a6bae2b220",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "944bd33b82c343918dce51698a2598e7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c059c4271a8481698e8eb8def88a318",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright (c) Data Shapes,  2020\r\n#Data-Shapes www.data-shapes.io , elayoubi.mostafa@data-shapes.io @data_shapes\r\n\t\r\nimport clr\r\nimport sys\r\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\nsys.path.append(pyt_path)\r\nimport os\r\nimport webbrowser\r\nimport unicodedata\r\nimport io\r\nimport tempfile\r\nimport System\r\n\t\r\ntry:\r\n\tclr.AddReference('System.Windows.Forms')\r\n\tclr.AddReference('System.Drawing')\r\n\tclr.AddReference('System.Windows.Forms.DataVisualization')\r\n\t\r\n\tfrom System.Drawing import Point , Size , Graphics, Bitmap, Image, Font, FontStyle, Icon, Color, Region , Rectangle , ContentAlignment , SystemFonts, FontFamily\r\n\tfrom System.Windows.Forms import Application, DockStyle, Button, Form, Label, TrackBar , ToolTip, ColumnHeader, TextBox, CheckBox, FolderBrowserDialog, OpenFileDialog, DialogResult, ComboBox, FormBorderStyle, FormStartPosition, ListView, ListViewItem , SortOrder, Panel, ImageLayout, GroupBox, RadioButton, BorderStyle, PictureBox, PictureBoxSizeMode, LinkLabel, CheckState, ColumnHeaderStyle , ImageList, VScrollBar, DataGridView, DataGridViewSelectionMode, DataGridViewAutoSizeColumnsMode , DataGridViewClipboardCopyMode , TreeView , TreeNode , TreeNodeCollection , AutoScaleMode , Screen, Padding\r\n\tfrom System.Windows.Forms.DataVisualization.Charting import *#Chart , SeriesChartType\r\n\tfrom System.Collections.Generic import *\r\n\tfrom System.Collections.Generic import List as iList\r\n\tfrom System.Windows.Forms import View as vi\r\n\tclr.AddReference('System')\r\n\tfrom System import IntPtr , Char\r\n\tfrom System import Type as SType, IO\r\n\tfrom System import Array\r\n\tfrom System.ComponentModel import Container\r\n\tclr.AddReference('System.Data')\r\n\tfrom System.Data import DataTable , DataView\r\n\r\n\ttry: #try to import All Revit dependencies\r\n\t\tclr.AddReference('RevitAPIUI')\r\n\t\tfrom  Autodesk.Revit.UI import Selection , TaskDialog \r\n\t\tfrom  Autodesk.Revit.UI.Selection import ISelectionFilter\r\n\t\tclr.AddReference('RevitNodes')\r\n\t\timport Revit\r\n\t\tclr.ImportExtensions(Revit.Elements)\r\n\t\tclr.ImportExtensions(Revit.GeometryConversion)\r\n\t\t\r\n\t\tclr.AddReference('RevitServices')\r\n\t\tfrom RevitServices.Persistence import DocumentManager\r\n\t\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\t\tuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\t\r\n\t\tclr.AddReference('RevitAPI')\r\n\t\ttry:\r\n\t\t\tfrom Autodesk.Revit.DB import ImageImportOptions\t\r\n\t\texcept:\r\n\t\t\tfrom Autodesk.Revit.DB import ImageTypeOptions , ImageType, ImagePlacementOptions , ImageInstance\r\n\t\tfrom Autodesk.Revit.DB import FilteredElementCollector , Transaction, View , ViewType , ViewFamily, ViewDrafting, ViewFamilyType, Element, ElementId , FamilyInstance , Document , XYZ, BoxPlacement, UnitUtils\r\n\t\t\r\n\t\ttry:\r\n\t\t\tfrom Autodesk.Revit.DB import  UnitType\r\n\t\texcept:\r\n\t\t\tfrom Autodesk.Revit.DB import SpecTypeId\r\n\r\n\t\tdbviews = [v for v in FilteredElementCollector(doc).OfClass(View).ToElements() if (v.ViewType == ViewType.FloorPlan or v.ViewType == ViewType.CeilingPlan or v.ViewType == ViewType.Section or v.ViewType == ViewType.Elevation or v.ViewType == ViewType.ThreeD)]\r\n\t\tviewindex = 0\r\n\t\ttry:\r\n\t\t\tUIunit = Document.GetUnits(doc).GetFormatOptions(UnitType.UT_Length).DisplayUnits\r\n\t\texcept:\r\n\t\t\tUIunit = Document.GetUnits(doc).GetFormatOptions(SpecTypeId.Length).GetUnitTypeId()\r\n\t\t\t\r\n\t\tclass selectionfilter(ISelectionFilter):\r\n\t\t\tdef __init__(self,category):\r\n\t\t\t\tself.category = category\r\n\t\t\tdef AllowElement(self,element):\r\n\t\t\t\tif element.Category.Name in [c.Name for c in self.category]:\r\n\t\t\t\t\treturn True\r\n\t\t\t\telse:\r\n\t\t\t\t\treturn False\r\n\t\t\tdef AllowReference(reference,point):\r\n\t\t\t\treturn False\r\n\r\n\r\n\t\t\t\r\n\texcept: #in case we are in the Sandbox, Formit or Civil 3D environment\r\n\t\tpass\r\n\t\r\n\timportcolorselection = 0\r\n\t\r\n\ttry:\r\n\t\tfrom  Autodesk.Revit.UI import ColorSelectionDialog\r\n\texcept:\r\n\t\timportcolorselection = 1\r\n\t\r\n\r\n\t\r\n\tclr.AddReference('ProtoGeometry')\r\n\tfrom Autodesk.DesignScript.Geometry import Point as dsPoint\r\n\r\n\tfrom System.Reflection import Assembly\r\n\timport xml.etree.ElementTree as et\r\n\t\r\n\r\n\t\r\n\timport re\t\r\n\tdef regexEndNum(input):\r\n\t\ttry:\r\n\t\t\treturn \tre.search('(\\d+)$', input).group(0)\r\n\t\texcept:\r\n\t\t\treturn \"\"\r\n\r\n\tdef iterateThroughNodes(collection,li):\r\n\t\tif hasattr(collection,'Nodes'):\r\n\t\t\tntest = collection.Nodes\r\n\t\t\tif len(ntest) > 0:\r\n\t\t\t\tfor i in ntest:\r\n\t\t\t\t\titerateThroughNodes(i,li)\r\n\t\t\telse:\r\n\t\t\t\tif collection.Checked:\r\n\t\t\t\t\tli.append(collection.Tag)\r\n\t\treturn li\r\n\t\t\r\n\r\n\t\r\n\tclass MultiTextBoxForm(Form):\r\n\t\t\r\n\t    def __init__(self):\r\n\t        self.Text = 'strana development'\r\n\t        self.output = []\r\n\t        self.values = []\r\n\t        self.cancelled = False\r\n\t\r\n\t    def setclose(self, sender, event):\r\n\t    \tcbindexread = 0\r\n\t    \tif sender.Name != \"Cancel\":\r\n\t    \t\tfor f in self.output:\r\n\t    \t\t\tif f.GetType() == myTextBox:\r\n\t    \t\t\t\tif f._isNum :\r\n\t    \t\t\t\t\tval = float(f.Text)\r\n\t    \t\t\t\telse:\r\n\t    \t\t\t\t\tval = f.Text\r\n\t    \t\t\t\tself.values.append(val)\r\n\t    \t\t\tif f.GetType() == CheckBox:\r\n\t    \t\t\t\tself.values.append(f.Checked)\r\n\t    \t\t\tif f.GetType() == Button:\r\n\t    \t\t\t\tif isinstance(f.Tag ,list):\r\n\t    \t\t\t\t\ttry:\r\n\t    \t\t\t\t\t\tself.values.append([e for e in f.Tag if e.__class__.__name__ != \"Category\"])\t    \t\t\t\t\t\r\n\t    \t\t\t\t\texcept:\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\t    \t\t\t\t\t\r\n\t    \t\t\t\telse:\r\n\t    \t\t\t\t\ttry:\t    \t\t\t\t\r\n\t    \t\t\t\t\t\tif f.Tag.__class__.__name__ != \"Category\":\r\n\t    \t\t\t\t\t\t\tself.values.append(f.Tag)\r\n\t    \t\t\t\t\t\telse:\r\n    \t\t\t\t\t\t\t\tself.values.append([])\r\n\t    \t\t\t\t\texcept:\r\n\t    \t\t\t\t\t\tself.values.append(f.Tag)\t\r\n\t    \t\t\tif f.GetType() == ComboBox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = f.Text\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == mylistview:\r\n\t    \t\t\t\tself.values.append([f.Values[i.Text] for i in f.CheckedItems])\r\n\t    \t\t\tif f.GetType() == mytrackbar:\r\n\t    \t\t\t\tself.values.append(f.startval+f.Value*f.step)\r\n\t    \t\t\tif f.GetType() == mygroupbox:\r\n\t    \t\t\t\ttry:\r\n\t    \t\t\t\t\tkey = [j.Text for j in f.Controls if j.Checked == True][0]\r\n\t    \t\t\t\t\tself.values.append(f.Tag[key])\r\n\t    \t\t\t\texcept:\r\n\t    \t\t\t\t\tself.values.append(None)\r\n\t    \t\t\tif f.GetType() == myDataGridView:\r\n\t    \t\t\t\tf.EndEdit()\r\n\t    \t\t\t\tdsrc = f.DataSource\r\n\t    \t\t\t\tout = []\r\n\t    \t\t\t\tcolcount = f.ColumnCount\r\n\t    \t\t\t\trowcount = f.RowCount - 1\r\n\t    \t\t\t\tif f.Tag:\r\n\t\t    \t\t\t\tl = []\r\n\t    \t\t\t\t\tfor i in range(colcount):\t    \t\t\t\t\t\t\r\n\t    \t\t\t\t\t\tl.append(dsrc.Columns[i].ColumnName)\r\n\t    \t\t\t\t\tout.append(l)\t    \t\t\t\t\t\t\r\n\t\t    \t\t\t\tfor r in range(rowcount):\r\n\t\t    \t\t\t\t\tl = []\r\n\t\t    \t\t\t\t\tfor i in range(colcount):\r\n\t\t    \t\t\t\t\t\tl.append(dsrc.DefaultView[r].Row[i])\r\n\t\t    \t\t\t\t\tout.append(l)\r\n\t    \t\t\t\telse: \r\n\t\t    \t\t\t\tfor r in range(rowcount):\r\n\t\t    \t\t\t\t\tl = []\r\n\t\t    \t\t\t\t\tfor i in range(colcount):\r\n\t\t    \t\t\t\t\t\tl.append(dsrc.DefaultView[r].Row[i])\r\n\t\t    \t\t\t\t\tout.append(l)\r\n\t    \t\t\t\tself.values.append(out)\r\n\t    \t\t\tif f.GetType() == TreeView:\r\n\t    \t\t\t\tls = []\r\n\t    \t\t\t\tnds = f.Nodes[0]\r\n\t    \t\t\t\titerateThroughNodes(nds,ls)\r\n\t    \t\t\t\tself.values.append(ls)\r\n\t    \t\t\tif f.GetType() == GroupBox:\r\n\t    \t\t\t\trb = [c for c in f.Controls if c.GetType() == RadioButton and c.Checked][0]\r\n\t    \t\t\t\tself.values.append(rb.Text)\r\n\t    \t\t\t\tf.Controls.Remove(rb)\r\n\t    \telse:\r\n\t    \t\tself.values = None\r\n\t    \t\tself.cancelled = True\r\n\t    \tself.Close()\r\n\t\r\n\t    def reset(self, sender, event):\r\n\t\t\tpass\r\n\t\r\n\t    def openfile(self, sender, event):\r\n\t\t\tofd = OpenFileDialog()\r\n\t\t\tdr = ofd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = ofd.FileName\r\n\t\t\t\tsender.Tag = ofd.FileName\r\n\r\n\t    def exportToExcel(self, sender, event):\r\n\t    \t#importing Excel IronPython libraries\r\n\t    \tclr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')\r\n\t    \tfrom Microsoft.Office.Interop import Excel\r\n\t    \tex = Excel.ApplicationClass()\r\n\t    \tex.Visible = sender.Tag[1]\r\n\t    \tex.DisplayAlerts = False\r\n\t    \tfbd = FolderBrowserDialog()\r\n\t    \tfbd.SelectedPath = sender.Text\r\n\t    \tparent = sender.Parent\r\n\t    \tfptextbox = parent.GetChildAtPoint(Point(parent.Location.X,sender.Location.Y+5*yRatio))\r\n\t    \tdataGrid = parent.GetChildAtPoint(Point(parent.Location.X,parent.Location.Y+23*xRatio))\r\n\t    \tdataTable = dataGrid.DataSource\r\n\t    \tfptext = fptextbox.Text\r\n\t    \ttitletext = parent.GetChildAtPoint(Point(0,0)).Text\r\n\t    \tdr = fbd.ShowDialog()\r\n\t    \tfrstRwTtle = sender.Tag[0]\r\n\t    \tif frstRwTtle:\r\n\t    \t\t_header = Excel.XlYesNoGuess.xlYes\r\n\t    \telse:\r\n\t    \t\t_header = Excel.XlYesNoGuess.xlNo\r\n\t    \tif dr == DialogResult.OK:\r\n\t    \t\tworkbk = ex.Workbooks.Add()\r\n\t    \t\tworksheet = workbk.Worksheets.Add()\r\n\t    \t\t#Writing title and doc info\r\n\t    \t\tif sender.Tag[2]:\r\n\t\t    \t\ttitleCell = worksheet.Cells[1,1]\r\n\t\t    \t\tworksheet.Cells[2,1].Value2 = sender.Tag[3]\r\n\t\t    \t\ttitleCell.Value2 = titletext\r\n\t\t    \t\ttitleCell.Font.Size = 18\r\n\t\t    \t\ttitleCell.Font.Bold = True\r\n\t\t    \t\tstartR = 3\r\n\t\t    \t\tendR = 3\r\n\t\t    \telse:\r\n\t\t    \t\tstartR = 1\r\n\t\t    \t\tendR = 0\t\r\n\t\t    \tif frstRwTtle:\r\n\t\t    \t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t    \t\t\tworksheet.Cells[startR,j+1] = dataTable.Columns[j].ColumnName\t\t    \t\r\n\t\t    \t\tfor i in range(0,dataTable.Rows.Count):\r\n\t\t    \t\t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t\t    \t\t\tworksheet.Cells[i+startR+1,j+1] = dataTable.DefaultView[i].Row[j].ToString()\r\n\t\t    \t\txlrange = ex.get_Range(worksheet.Cells[startR,1],worksheet.Cells[dataTable.Rows.Count+endR+1,dataTable.Columns.Count])\t\t\t    \t\t\t\r\n\t\t    \telse :\r\n\t\t    \t\tfor i in range(0,dataTable.Rows.Count):\r\n\t\t    \t\t\tfor j in range(0,dataTable.Columns.Count):\r\n\t\t\t    \t\t\tworksheet.Cells[i+startR,j+1] = dataTable.DefaultView[i].Row[j].ToString()\t\t    \t\r\n\t\t    \t\txlrange = ex.get_Range(worksheet.Cells[startR,1],worksheet.Cells[dataTable.Rows.Count+endR,dataTable.Columns.Count])\r\n\t\t    \txlrange.Columns.AutoFit()\r\n\t\t    \tworksheet.ListObjects.Add(Excel.XlListObjectSourceType.xlSrcRange, xlrange, SType.Missing, _header, SType.Missing).Name = \"DataShapesTable\"\r\n\t\t    \tworksheet.ListObjects[\"DataShapesTable\"].TableStyle =  \"TableStyleMedium16\"\r\n\t    \t\tworkbk.SaveAs(fbd.SelectedPath + \"\\\\\" + fptext)\r\n\t    \t\tif not sender.Tag[1]:\r\n\t    \t\t\tworkbk.Close()\r\n\t    \t\t\tex.Quit()\r\n\r\n\t    def startCell(self, sender, event ):\r\n\t\t\tsender.startcell[\"X\"] = event.ColumnIndex\r\n\t\t\tsender.startcell[\"Y\"] = event.RowIndex\t\r\n\r\n\t    def endCell(self, sender, event ):\r\n\t    \ttry:\r\n\t\t\t\tsender.endcell[\"X\"] = event.ColumnIndex\r\n\t\t\t\tsender.endcell[\"Y\"] = event.RowIndex \r\n\t\t\t\tstartval = sender.Rows[sender.startcell[\"Y\"]].Cells[sender.startcell[\"X\"]].Value\r\n\t\t\t\tendNum = regexEndNum(startval)\r\n\t\t\t\tif endNum != \"\":\r\n\t\t\t\t\tif sender.endcell[\"Y\"] == sender.startcell[\"Y\"]:\r\n\t\t\t\t\t\tfor e,i in enumerate(range(sender.startcell[\"X\"],sender.endcell[\"X\"] + 1)):\r\n\t\t\t\t\t\t\tsender.Rows[sender.startcell[\"Y\"]].Cells[i].Value = startval[:-len(endNum)] + str(int(endNum) + e)\r\n\t\t\t\t\telif sender.endcell[\"X\"] == sender.startcell[\"X\"]:\r\n\t\t\t\t\t\tfor e,i in enumerate(range(sender.startcell[\"Y\"],sender.endcell[\"Y\"] + 1)):\r\n\t\t\t\t\t\t\tsender.Rows[i].Cells[sender.endcell[\"X\"]].Value = startval[:-len(endNum)] + str(int(endNum) + e)\r\n\t\t\t\telse:\t\t\t\t\r\n\t\t\t\t\tif sender.endcell[\"Y\"] == sender.startcell[\"Y\"]:\r\n\t\t\t\t\t\tfor i in range(sender.startcell[\"X\"],sender.endcell[\"X\"] + 1):\r\n\t\t\t\t\t\t\tsender.Rows[sender.startcell[\"Y\"]].Cells[i].Value = startval\r\n\t\t\t\t\telif sender.endcell[\"X\"] == sender.startcell[\"X\"]:\r\n\t\t\t\t\t\tfor i in range(sender.startcell[\"Y\"],sender.endcell[\"Y\"] + 1):\r\n\t\t\t\t\t\t\tsender.Rows[i].Cells[sender.endcell[\"X\"]].Value = startval\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\t    \t\t    \t\r\n\t    def startRowDrag(self, sender, event ):\r\n\t    \tshmak\r\n\t\t\t\r\n\t    def opendirectory(self, sender, event):\r\n\t\t\tfbd = FolderBrowserDialog()\r\n\t\t\tfbd.SelectedPath = sender.Text\r\n\t\t\tdr = fbd.ShowDialog()\r\n\t\t\tif dr == DialogResult.OK:\r\n\t\t\t\tsender.Text = fbd.SelectedPath\r\n\t\t\t\tsender.Tag = fbd.SelectedPath\r\n\t\r\n\t    def pickobjects(self, sender, event):   \r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t#THIS METHOD IS FOR CIVIL 3D EVIRONMENT\r\n\t    def pickautocadobjects(self, sender, event):   \r\n\t\t\tselelem = []\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tacadDoc = System.Runtime.InteropServices.Marshal.GetActiveObject(\"Autocad.Application\").ActiveDocument\r\n\t\t\t\tacadDoc.Activate()\r\n\t\t\t\tacadUser = acadDoc.GetVariable(\"users5\")\t\r\n\t\t\t\tacadDoc.SendCommand(\"(and(princ\\042\"+ sender.Text + \"\\042)(setq ss(ssget))(setvar\\042users5\\042\\042LinkDWGUIOK\\042)(command\\042_.Select\\042ss\\042\\042)) \")\r\n\t\t\t\tselection_ = acadDoc.ActiveSelectionSet\r\n\t\t\t\tacadDoc.SendCommand(\"(setq ss nil) \")\r\n\t\t\t\tif acadDoc.GetVariable(\"users5\") == \"LinkDWGUIOK\" and selection_ != None:\r\n\t\t\t\t\tfor sel in selection_:\t\t\t\t\r\n\t\t\t\t\t\tselelem.append(sel)\t\t\r\n\t\t\t\t\tacadDoc.SetVariable(\"users5\", acadUser)\r\n\t\t\t\tsender.Tag = list(selelem)\t\t\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\r\n\r\n\t    def pickautocadobject(self, sender, event):   \r\n\t\t\tselelem = None\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tacadDoc = System.Runtime.InteropServices.Marshal.GetActiveObject(\"Autocad.Application\").ActiveDocument\r\n\t\t\t\tacadUser = acadDoc.GetVariable(\"users5\")\r\n\t\t\t\tacadPickBox = acadDoc.GetVariable(\"pickbox\")\r\n\t\t\t\tacadDoc.SetVariable(\"pickbox\", 5)\r\n\t\t\t\tacadDoc.Activate()\r\n\t\t\t\tacadDoc.SendCommand(\"(setq obj(car(entsel\\042\" + sender.Text + \"\\042))) \")\r\n\t\t\t\tacadDoc.SendCommand(\"(and obj(setvar\\042users5\\042(cdr(assoc 5(entget obj))))(setq obj nil)) \")\t\t\r\n\t\t\t\tselection_ = acadDoc.GetVariable(\"users5\")\r\n\t\t\t\tacadDoc.SetVariable(\"pickbox\", acadPickBox)\r\n\t\t\t\tacadDoc.SetVariable(\"users5\", acadUser)\r\n\t\t\t\tselelem = acadDoc.HandleToObject(selection_)\r\n\t\t\t\tsender.Tag = selelem\t\t\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\r\n\r\n\t    def pickobjectsordered(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\toutput = []\r\n\t\t\ttest = True\r\n\t\t\tTaskDialog.Show(\"Data|Shapes\", 'Pick elements in order, then hit ESC to exit.')\r\n\t\t\twhile test:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tsel = doc.GetElement(uidoc.Selection.PickObject(Selection.ObjectType.Element, 'Pick elements in order').ElementId)\r\n\t\t\t\t\toutput.append(sel.ToDSType(True))\r\n\t\t\t\texcept : \r\n\t\t\t\t\ttest = False\r\n\t\t\t\tsender.Tag = output\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t    \r\n\t    def pickobjectsofcatordered(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\toutput = []\r\n\t\t\ttest = True\r\n\t\t\tif isinstance(sender.Tag,list):\t\t\t\r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\tTaskDialog.Show(\"Data|Shapes\", 'Select %s in order, then press ESC to exit.' %(', '.join([c.Name for c in category])))\r\n\t\t\twhile test:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\t\tsel = doc.GetElement(uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt, 'Select %s' %(', '.join([c.Name for c in category]))).ElementId)\t\t\t\t\r\n\t\t\t\t\toutput.append(sel.ToDSType(True))\r\n\t\t\t\texcept : \r\n\t\t\t\t\ttest = False\r\n\t\t\t\tsender.Tag = (output)\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobjects(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked elements and press Finish.')\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.LinkedElement,'Select the linked elements and press Finish.')\r\n\t\t\t\tselelem = [link.GetElement(s.LinkedElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\t\t\r\n\r\n\t    def pickobject(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,'')\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def picklinkedobject(self, sender, event):\r\n\t\t\t#This part was made easier by Dimitar Venkov's work\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tlinkref = uidoc.Selection.PickObject(Selection.ObjectType.Element,'Select the link instance.')\r\n\t\t\t\tlink = doc.GetElement(linkref.ElementId).GetLinkDocument()\r\n\t\t\t\ttd = TaskDialog.Show('Data-Shapes','Select the linked element.')\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.LinkedElement,'Select the linked element.')\r\n\t\t\t\tselelem = link.GetElement(sel.LinkedElementId)\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\t\t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickobjectsofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObjects(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = [doc.GetElement(s.ElementId) for s in sel]\r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def pickobjectofcat(self, sender, event):\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tif isinstance(sender.Tag,list):\t    \r\n\t\t\t\tcategory = UnwrapElement(sender.Tag)\r\n\t\t\telse:\r\n\t\t\t\tcategory = [UnwrapElement(sender.Tag)]\r\n\t\t\ttry:\r\n\t\t\t\tselfilt = selectionfilter(category)\r\n\t\t\t\tsel = uidoc.Selection.PickObject(Selection.ObjectType.Element,selfilt,'Select %s' %(', '.join([c.Name for c in category])))\r\n\t\t\t\tselelem = doc.GetElement(sel.ElementId) \r\n\t\t\t\tsender.Tag = (selelem)\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\r\n\t    def pickfaces(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\ttry:\r\n\t\t\t\tselface = uidoc.Selection.PickObjects(Selection.ObjectType.Face,'')\r\n\t\t\t\tfor s in selface:\r\n\t\t\t\t\tf = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).ToProtoType(True)\r\n\t\t\t\t\t[i.Tags.AddTag(\"RevitFaceReference\", s) for i in f]\r\n\t\t\t\t\tfaces.append(f)\r\n\t\t\t\tsender.Tag = [i for j in faces for i in j]\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickpointsonface(self, sender, event):\r\n\t\t\tfaces = []\t    \t\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\r\n\t\t\tselpoints = uidoc.Selection.PickObjects(Selection.ObjectType.PointOnElement,'')\r\n\t\t\tpoints = []\r\n\t\t\tfor s in selpoints:\r\n\t\t\t\tpt = s.GlobalPoint\r\n\t\t\t\tpoints.append(dsPoint.ByCoordinates(UnitUtils.ConvertFromInternalUnits(pt.X,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Y,UIunit),UnitUtils.ConvertFromInternalUnits(pt.Z,UIunit)))\r\n\t\t\tsender.Tag = points\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\t\t\t\t\r\n\t    def pickedges(self, sender, event):\r\n\t\t\tedges = []\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = False\t\r\n\t\t\ttry:\t\t\t\t\r\n\t\t\t\tseledge = uidoc.Selection.PickObjects(Selection.ObjectType.Edge,'')\r\n\t\t\t\tfor s in seledge:\r\n\t\t\t\t\te = uidoc.Document.GetElement(s).GetGeometryObjectFromReference(s).AsCurve().ToProtoType(True)\r\n\t\t\t\t\te.Tags.AddTag(\"RevitFaceReference\", s)\r\n\t\t\t\t\tedges.append(e)\r\n\t\t\t\tsender.Tag = edges\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\t\t\tfor c in self.Controls:\r\n\t\t\t\tc.Enabled = True\r\n\r\n\t    def colorpicker(self, sender, event):\r\n\t\t\tdialog = ColorSelectionDialog()\r\n\t\t\tselection = ColorSelectionDialog.Show(dialog)\r\n\t\t\tselected = dialog.SelectedColor\r\n\t\t\tsender.Tag = selected\r\n\t\t\tsender.BackColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\t\tsender.ForeColor = Color.FromArgb(selected.Red,selected.Green,selected.Blue)\r\n\t\r\n\t    def topmost(self):\r\n\t\t\tself.TopMost = True\r\n\t\r\n\t    def lvadd(self, sender, event):\r\n\t\t\tsender.Tag = [i for i in sender.CheckedItems]\r\n\t\t\t\r\n\t    def scroll(self, sender, event):\r\n\t\t\tparent = sender.Parent\r\n\t\t\tchild = parent.GetChildAtPoint(Point(0,5*yRatio))\r\n\t\t\tchild.Text = str(sender.startval+sender.Value*sender.step)\r\n\r\n\t    def openurl(self, sender, event):\r\n\t\t\twebbrowser.open(sender.Tag)\r\n\t\r\n\t    def selectall(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = True\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t    def selectnone(self, sender, event):\r\n\t\t\tif sender.Checked:\r\n\t\t\t\tparent = sender.Parent\r\n\t\t\t\tlistview = parent.GetChildAtPoint(Point(0,0))\r\n\t\t\t\tfor i in listview.Items:\r\n\t\t\t\t\ti.Checked = False\r\n\t\t\telse:\r\n\t\t\t\tpass\t\t\r\n\r\n\t    def updateallnone(self, sender, event):\r\n\t    \ttry:\r\n\t    \t\tparent = sender.Parent\r\n\t    \t\trball = parent.GetChildAtPoint(Point(0,sender.Height + 5*yRatio))\r\n\t    \t\trbnone = parent.GetChildAtPoint(Point(80 * xRatio,sender.Height + 5*yRatio))\r\n\t    \t\tif sender.CheckedItems.Count == 0 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == sender.Items.Count-1 and event.NewValue == CheckState.Checked:\r\n\t    \t\t\trball.Checked = True\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \t\telif sender.CheckedItems.Count == 1 and event.NewValue == CheckState.Unchecked:\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = True\t    \t\r\n\t    \t\telse :\r\n\t    \t\t\trball.Checked = False\r\n\t    \t\t\trbnone.Checked = False\r\n\t    \texcept:\r\n\t    \t\tpass\r\n\r\n\t    def zoomcenter(self, sender, event ):\r\n\t\t\tif event.X > 15:\t    \r\n\t\t\t\ttry:\r\n\t\t\t\t\telement = doc.GetElement(uidoc.Selection.GetElementIds()[0])\r\n\t\t\t\t\tuidoc.ShowElements(element)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\t\t\t\r\n\t    def setviewforelement(self, sender, event ):    \r\n\t\t\tif event.X > 15*xRatio:\t    \t\t\r\n\t\t\t\ttry:\r\n\t\t\t\t\titem = sender.GetItemAt(event.X,event.Y).Text\r\n\t\t\t\t\telement = UnwrapElement(sender.Values[item])\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(element.__class__).ToElements()])]\r\n\t\t\t\t\texcept:\r\n\t\t\t\t\t\tviewsforelement = [v for v in dbviews if (not v.IsTemplate) and (element.Id in [e.Id for e in FilteredElementCollector(doc,v.Id).OfClass(FamilyInstance).ToElements()])]\r\n\t\t\t\t\tglobal viewindex\r\n\t\t\t\t\tdbView = viewsforelement[viewindex]\r\n\t\t\t\t\tid = [element.Id]\r\n\t\t\t\t\ticollection = iList[ElementId](id)\r\n\t\t\t\t\tuidoc.Selection.SetElementIds(icollection)\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\telse:\t    \r\n\t\t\t\tpass\r\n\r\n\r\n\t    def CheckChildren(self, sender, event ):\r\n\t\t\tevNode = event.Node\t    \r\n\t\t\tcheckState = evNode.Checked\t\r\n\t\t\tfor n in event.Node.Nodes:\t   \t\r\n\t\t\t\tn.Checked = checkState\t\t\t\r\n\t\t\t\t\r\n\t    def ActivateOption(self, sender, event ):\r\n\t    \tparent = sender.Parent\r\n\t    \tassociatedControls = [p for p in parent.Controls if p.Name == sender.Text and p.GetType() == Panel][0]\r\n\t    \trestofcontrols = [p for p in parent.Controls if p.Name != sender.Text and p.GetType() == Panel]\r\n\t    \tif sender.Checked:\r\n\t    \t\tassociatedControls.Enabled = True\r\n\t    \t\tfor c in restofcontrols:\r\n\t    \t\t\tc.Enabled = False\r\n\t    \t\tparent.Tag = sender.Text\r\n\t    \t\t\r\n\t    def showtooltip(self, sender, event ):\r\n\t    \tttp = ToolTip()\r\n\t    \tttp.AutoPopDelay = 10000\r\n\t    \tttp.SetToolTip(sender , sender.Tag)\t\r\n\r\n\t    def numsOnly(self, sender, event ):\r\n\t    \tif Char.IsDigit(event.KeyChar)==False and event.KeyChar != \".\" and Char.IsControl(event.KeyChar)==False:\r\n\t    \t\tevent.Handled = True\r\n\t    \r\n\t    def chart_showLabels(self, sender, event):\r\n\t\t\tcb = sender\r\n\t\t\tpanelcht = sender.Parent\r\n\t\t\tchart1 = panelcht.GetChildAtPoint(Point(0,0))\r\n\t\t\tfor s in chart1.Series:\r\n\t\t\t\tif s.ChartType == SeriesChartType.Pie:\r\n\t\t\t\t\tif cb.Checked:\r\n\t\t\t\t\t\ts[\"PieLabelStyle\"] = \"Inside\"\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\ts[\"PieLabelStyle\"] = \"Disabled\"\r\n\t\t\t\telse:\r\n\t\t\t\t\tif cb.Checked:\r\n\t\t\t\t\t\ts.IsValueShownAsLabel = True\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\ts.IsValueShownAsLabel = False\r\n\t    \t\t\r\n\t    def imageexport(self, sender, event):\r\n\t    \timport datetime\r\n\t    \tfrom datetime import datetime\r\n\t    \tfrom RevitServices.Transactions import TransactionManager\r\n\t    \t#Modify resolution before the render\r\n\t    \tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t    \toriginalFont = Font(fontFam,8)\r\n\t    \tpanelcht = sender.Parent\r\n\t    \tchart1 = panelcht.GetChildAtPoint(Point(0,0))\r\n\t    \toriginalTitleFont = chart1.Titles[0].Font\r\n\t    \toriginalWidth = chart1.Width\r\n\t    \toriginalHeight = chart1.Height\r\n\t    \tchart1.Visible = False\r\n\t    \tchart1.Dock = DockStyle.None\r\n\t    \tchart1.Width = 2100 * 0.8\r\n\t    \tchart1.Height = 1500 * 0.8\r\n\t    \tchart1.ChartAreas[0].AxisX.LabelAutoFitStyle = LabelAutoFitStyles.None\r\n\t    \tchart1.ChartAreas[0].AxisY.LabelAutoFitStyle = LabelAutoFitStyles.None\r\n\t    \tchart1.ChartAreas[0].AxisX.LabelStyle.Font = Font(fontFam, 30)\r\n\t    \tchart1.ChartAreas[0].AxisY.LabelStyle.Font = Font(fontFam, 30)\r\n\t    \tchart1.ChartAreas[0].AxisX.TitleFont = Font(fontFam, 30)\r\n\t    \tchart1.ChartAreas[0].AxisY.TitleFont = Font(fontFam, 30)\r\n\t    \tchart1.TextAntiAliasingQuality = TextAntiAliasingQuality.High\r\n\t    \tchart1.BackColor = Color.White\r\n\t    \tchart1.Titles[0].Font = Font(fontFam, 32, FontStyle.Bold)\r\n\t    \tchart1.ChartAreas[0].BackColor = Color.White\r\n\t    \tfor serie in chart1.Series:\r\n\t    \t\tserie.Font = Font(fontFam, 30)\r\n\t\t    \tfor p in serie.Points:\r\n\t\t    \t\tp.Font = Font(fontFam, 30)\r\n\t\t    \t\tp.MarkerSize = 15\r\n\t    \tfor legend in chart1.Legends:\r\n\t    \t\tlegend.Font = Font(fontFam, 30)\r\n\t    \t\tlegend.BackColor = Color.White\r\n\t    \tchart1.Invalidate()\r\n\t    \tchart1.SaveImage(tempfile.gettempdir() + \"\\\\chartImage.bmp\", ChartImageFormat.Bmp)\r\n\t    \t#Get back to original settings\r\n\t    \tchart1.Width = originalWidth\r\n\t    \tchart1.Height = originalHeight\r\n\t    \tchart1.BackColor = Color.Transparent\r\n\t    \tchart1.ChartAreas[0].BackColor = Color.Transparent\r\n\t    \tchart1.ChartAreas[0].AxisX.LabelStyle.Font = originalFont\r\n\t    \tchart1.ChartAreas[0].AxisY.LabelStyle.Font = originalFont\r\n\t    \tchart1.ChartAreas[0].AxisX.TitleFont = originalFont\r\n\t    \tchart1.ChartAreas[0].AxisY.TitleFont = originalFont\r\n\t    \tchart1.Titles[0].Font = originalTitleFont\r\n\t    \tfor serie in chart1.Series:\r\n\t    \t\tserie.Font = originalFont\r\n\t    \t\tfor p in serie.Points:\r\n\t    \t\t\tp.Font = originalFont\r\n\t\t    \t\tp.MarkerSize = 8\r\n\t    \tfor legend in chart1.Legends:\r\n\t    \t\tlegend.Font = originalFont\r\n\t    \t\tlegend.BackColor = Color.Transparent\r\n\t    \tchart1.Invalidate()\r\n\t    \tchart1.Visible = True\r\n\t    \t#Import the picture in a Drafting View\r\n\t    \t#Import the picture in a Drafting View // The try catch if for handling the fact that ImageImportOptions was deprecated in 2020 and is obsolete in 2021\t    \t\r\n\t    \ttry:\r\n\t    \t\timportOptions = ImageImportOptions()\t\r\n\t    \t\timportOptions.Resolution = 72\r\n\t    \t\timportOptions.Placement = BoxPlacement.TopLeft\t    \t\t\r\n\t    \texcept:\r\n\t    \t\timageTypeOption = ImageTypeOptions()\t\r\n\t    \t\timageTypeOption.Resolution = 72\r\n\r\n\t    \tcollector = FilteredElementCollector(doc).OfClass(ViewFamilyType)\r\n\t    \tviewFamilyTypes = []\r\n\t    \tfor c in collector:\r\n\t    \t\tif c.ViewFamily == ViewFamily.Drafting:\r\n\t    \t\t\tviewFamilyTypes.append(c)\r\n\t    \tviewFamilyType = viewFamilyTypes[0]\r\n\t    \tTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t    \tdraftView = ViewDrafting.Create(doc,viewFamilyType.Id)\r\n\t    \tdraftView.Name = chart1.Titles[0].Text + datetime.now().strftime(\" (%m/%d/%Y, %H.%M.%S)\")\r\n\t    \timagePath = tempfile.gettempdir() + \"\\\\chartImage.bmp\"\r\n\t    \tnewElement = clr.StrongBox[Element]()\r\n\t    \ttry:\r\n\t    \t\tdoc.Import(imagePath,importOptions,draftView,newElement)\t    \t\r\n\t    \texcept:\r\n\t    \t\timageTypeOption.SetPath(imagePath)\r\n\t    \t\timageType = ImageType.Create(doc,imageTypeOption)\r\n\t    \t\tplacementOptions = ImagePlacementOptions(XYZ(0,0,0),BoxPlacement.TopLeft)\r\n\t    \t\tImageInstance.Create(doc,draftView,imageType.Id,placementOptions)\t    \t\t\r\n\t    \tTransactionManager.Instance.TransactionTaskDone()\r\n\t    \t\t    \t\r\n\t    def chart_showLegend(self, sender, event ):\r\n\t    \tcb = sender\r\n\t    \tpanelcht = sender.Parent\r\n\t    \tchart1 = panelcht.GetChildAtPoint(Point(0,0))\r\n\t    \tif len(chart1.Legends) <= 1:\r\n\t    \t\tfor legend in chart1.Legends:\r\n\t    \t\t\tif cb.Checked:\r\n\t    \t\t\t\tlegend.Enabled = True\r\n\t    \t\t\telse:\r\n\t    \t\t\t\tlegend.Enabled = False\r\n\t    \telse:\r\n\t    \t\tif cb.Checked:\r\n\t    \t\t\tchart1.Legends[1].Enabled = True\r\n\t    \t\telse:\r\n\t    \t\t\tchart1.Legends[1].Enabled = False\r\n\t\t    \t\t\r\n\r\n\tclass mylistview(ListView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\r\n\tclass mytrackbar(TrackBar):\r\n\t\r\n\t\tdef __init__(self,startval,step):\r\n\t\t\tself.startval = startval\r\n\t\t\tself.step = step\r\n\r\n\tclass myDataGridView(DataGridView):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.startcell = {}\r\n\t\t\tself.endcell = {}\r\n\t\t\t\r\n\tclass mygroupbox(GroupBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself.Values = []\r\n\t\t\t\r\n\tclass myTextBox(TextBox):\r\n\t\r\n\t\tdef __init__(self):\r\n\t\t\tself._isNum = False\r\n\t\r\n\t\t\t\r\n\t#Form initialization\r\n\t\r\n\tform = MultiTextBoxForm()\r\n\txRatio = Screen.PrimaryScreen.Bounds.Width/1920\r\n\tif xRatio == 0:\r\n\t\txRatio = 1\r\n\tyRatio = Screen.PrimaryScreen.Bounds.Height/1080\r\n\tif yRatio == 0:\r\n\t\tyRatio = 1\r\n\tform.topmost()\t\r\n\tform.ControlBox = True\r\n\txlabel = 25 * xRatio\r\n\txinput = 150 * xRatio\r\n\tformy = 10 * yRatio\r\n\tif IN[8] * xRatio > (350 * xRatio):\tformwidth = IN[8] * xRatio\r\n\telse: formwidth = 350 * xRatio\r\n\tfields = []\r\n\terror = 0\r\n\t\r\n\t#Description \r\n\t\r\n\tif IN[3] != \"\":\r\n\t\tdes = Label()\r\n\t\tdes.Location = Point(xlabel,formy)\r\n\t\tdes.Font = Font(\"Arial\", 15,FontStyle.Bold)\t\t\r\n\t\tdes.AutoSize = True\r\n\t\tdes.MaximumSize = Size(formwidth - (2 * xlabel)*xRatio,0)\r\n\t\tdes.Text = IN[3]\r\n\t\tform.Controls.Add(des)\r\n\t\tformy = des.Bottom + (15*xRatio)\r\n\tformheaderheight = formy\r\n\t\r\n\t#Input form\r\n\t\r\n\t# Create a container panel for all inputs\r\n\tbody = Panel()\r\n\tbody.Location = Point(0,formy)\r\n\tbody.Width = formwidth - 15*xRatio\r\n\t\r\n\t\r\n\t# Process form inputs\r\n\tif isinstance(IN[0],list):\r\n\t\tinputtypes = IN[0]\r\n\telse:\r\n\t\tinputtypes = [IN[0]]\r\n\t# This definition is to handle the sorting of special characters\r\n\tdef remove_accents(input_str):\r\n\t    nfkd_form = unicodedata.normalize('NFKD', input_str)\r\n\t    only_ascii = nfkd_form.encode('ASCII', 'ignore')\r\n\t    return only_ascii\t\r\n\r\n\t#Adding Logo \r\n\t#default logo in case no input\t\r\n\tdef getImageByName(ImName):\r\n\t\tdynamo = Assembly.Load('DynamoCore')\r\n\t\tversion = str(dynamo.GetName().Version)[:3]\t\t\r\n\t\tdynPath = os.getenv('APPDATA')+\"\\\\Dynamo\\Dynamo Revit\\\\\" + version \r\n\t\troot = et.parse(dynPath + \"\\DynamoSettings.xml\").getroot()\r\n\t\tlogopaths = []\r\n\t\tfor child in root:\r\n\t\t\tif child.tag == \"CustomPackageFolders\":\r\n\t\t\t\tfor path in child:\r\n\t\t\t\t\tlogopaths.append(path.text + \"\\packages\\Data-Shapes\\extra\\\\\" + ImName)\r\n\t\t\t\t\tlogopaths.append(path.text + \"\\Data-Shapes\\extra\\\\\" + ImName)\r\n\t\tdeflogopath = \"\"\r\n\t\tfor path in logopaths:\r\n\t\t\tif deflogopath == \"\":\r\n\t\t\t\tif os.path.isfile(path):\r\n\t\t\t\t\tdeflogopath = path\r\n\t\t\t\t\ttry:\r\n\t\t\t\t\t\tima = Image.FromFile(deflogopath)\r\n\t\t\t\t\t\tbmp = Bitmap.FromFile(deflogopath)\r\n\t\t\t\t\t\treturn ima,bmp\r\n\t\t\t\t\texcept: \r\n\t\t\t\t\t\tpass\r\n\t\t\t\t\t\t\r\n\ttry:\r\n\t\tif IN[4] != '':\r\n\t\t\ttry:\r\n\t\t\t\tima = Image.FromFile(IN[4])\r\n\t\t\t\tbmp = Bitmap.FromFile(IN[4])\r\n\t\t\texcept:\r\n\t\t\t\tima = IN[4]\r\n\t\t\t\tbmp = IN[4]\r\n\r\n\t\telse :\r\n\t\t\t_ims = getImageByName(\"a.png\")\r\n\t\t\tima = _ims[0]\r\n\t\t\tbmp = _ims[1]\r\n\t\t\t\r\n\t\tlogo = Panel()\r\n\t\tif IN[6] == None:\r\n\t\t\txlogo = 20 * xRatio\r\n\t\t\tylogo = formy+ 10*yRatio\r\n\t\telse:\r\n\t\t\txlogo = 30 * xRatio\r\n\t\t\tylogo = formy\r\n\t\tsize = 110 * xRatio\r\n\t\tlogo = PictureBox()\r\n\t\tratio = (ima.Height)/(ima.Width)\r\n\t\th = float(ima.Height)\r\n\t\tw = float(ima.Width)\r\n\t\tratio = h/w\r\n\t\tlogo.Size = Size(size,size*ratio)\r\n\t\tscaledimage = Bitmap(size,size*ratio)\r\n\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\tgr.DrawImage(ima,0,0,size,size*ratio)\r\n\t\tlogo.Image = ima\r\n\t\tlogo.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\tform.Controls.Add(logo)\r\n\t\tlogo.Location = Point(xlogo,ylogo)\r\n\t\t\r\n\t\t\r\n\t\t#Setting icon \r\n\t\tthumb = bmp.GetThumbnailImage(64, 64, bmp.GetThumbnailImageAbort,IntPtr.Zero)\r\n\t\tthumb.MakeTransparent();\r\n\t\ticon = Icon.FromHandle(thumb.GetHicon())\r\n\t\tform.Icon = icon\r\n\r\n\texcept :\r\n\t\tlogo = Panel()\r\n\t\tlogo.Width = 110 * xRatio\r\n\t\tlogo.Height = 110 * yRatio\r\n\t\r\n\tdef addinput(formbody,inputs,starty,xinput,rightmargin,labelsize,importcolorselection):\r\n\t\ty = starty\r\n\t\tfor j in inputs:\r\n\t\t\tlabel = Label()\r\n\t\t\tlabel.Location = Point(xlabel,y+4*yRatio)\r\n\t\t\tlabel.AutoSize = True\r\n\t\t\tlabel.MaximumSize = Size(labelsize,0)\r\n\t\t\tif j.__class__.__name__ == 'listview' and j.element_count > 0:\r\n\t\t\t\tlabel.Text = j.inputname + '\\n(' + str(j.element_count) + ' element' + (\"s\" if j.element_count > 1 else \"\") + ')'\r\n\t\t\telse:\r\n\t\t\t\ttry:\r\n\t\t\t\t\tlabel.Text = j.inputname\r\n\t\t\t\texcept:\r\n\t\t\t\t\tpass\r\n\t\t\tformbody.Controls.Add(label)\r\n\t\r\n\t\t\tif j.__class__.__name__ == 'dropdown':\r\n\t\t\t\tcb = ComboBox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\tcb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\tcb.Location = Point(xlabel,y)\r\n\t\t\t\tcb.Sorted = j._sorted\r\n\t\t\t\t[cb.Items.Add(i) for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )]\r\n\t\t\t\tcb.Tag = j\r\n\t\t\t\tif j.defaultvalue != None:\r\n\t\t\t\t\tdefindex = [i for i in cb.Items].index([i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'defaultvalue' or i == 'highlight' or i == '_sorted' )][j.defaultvalue])\r\n\t\t\t\t\tcb.SelectedIndex = defindex\r\n\t\t\t\tformbody.Controls.Add(cb)\r\n\t\t\t\tform.output.append(cb)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\t#CHARTS \r\n\t\t\tif j.__class__.__name__ == 'uipiechart':\t\t\t\t\t\r\n\t\t\t\tlabels = j.xseries\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\txseries = [j.xseries]\r\n\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tlabel = SmartLabelStyle()\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs[\"PieLabelStyle\"] = \"Inside\"\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Pie\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,len(xseries)):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Legend text of the points\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tfor p in s.Points: \r\n\t\t\t\t\t\tp.Font = originalFont\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\t\t\t\t\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tlegend1.IsTextAutoFit = True\r\n\t\t\t\tlegend1.LegendStyle = LegendStyle.Column\r\n\t\t\t\tchart1.Legends.Add(legend1)\r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Font = originalFont\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.Font = originalFont\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 30)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uibarchart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\thorizont = j.ishorizontal\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values,_horizont):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tif _horizont:\r\n\t\t\t\t\t\tsrs.ChartType = SeriesChartType.Bar\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tsrs.ChartType = SeriesChartType.Column\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i],horizont))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tlegend1.Docking = Docking.Right\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.Font = originalFont\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uiradarchart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Create a panel for buttons\r\n\t\t\t\tpanelCtrls = Panel()\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\tpanelCtrls.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\tautoheight = 250 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Height = autoheight + 73 * yRatio\r\n\t\t\t\tratio = (panelChart.Height)/(panelChart.Width)\r\n\t\t\t\th = float(panelChart.Height)\r\n\t\t\t\tw = float(panelChart.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\tchart_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tpanelChart.Size = Size(chart_maxsize,chart_maxsize*ratio)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Radar\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tsrs.BorderWidth = 4\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Dock = DockStyle.Fill\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelCtrls.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Show/Hide legend\"\r\n\t\t\t\tpanelCtrls.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Show/Hide labels\"\r\n\t\t\t\tpanelCtrls.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uipointchart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Point\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Change marker size\r\n\t\t\t\toriginalMarkerSize = 8\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tfor p in s.Points:\r\n\t\t\t\t\t\tp.MarkerSize = originalMarkerSize\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\tchartArea1 = chart1.ChartAreas[0]\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend2 = Legend()\r\n\t\t\t\t#Add legends to charts\r\n\t\t\t\tchart1.Legends.Add(legend1)\r\n\t\t\t\tchart1.Legends.Add(legend2)\r\n\t\t\t\t#Create Custom legend\r\n\t\t\t\tcustomevent = CustomizeLegendEventArgs(legend2.CustomItems)\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tlegend2.CustomItems.Add(LegendItem(s.Name.ToString(),s.Color,\"\"))\t\t\t\t\t\r\n\t\t\t\tdef chart_CustomizeLegend(sender, customevent ):\r\n\t\t\t\t\tchart1 = sender\r\n\t\t\t\t\t#legend1.Enabled = False\r\n\t\t\t\t\tlegend2.Name = \"Legend2\"\r\n\t\t\t\t\tfor s,it in zip(series,legend2.CustomItems):\r\n\t\t\t\t\t\tit.ImageStyle = LegendImageStyle.Marker\r\n\t\t\t\t\t\tit.MarkerStyle = s.MarkerStyle\r\n\t\t\t\t\t\tit.MarkerColor = s.Color\r\n\t\t\t\t\t\tit.BorderColor = Color.Transparent\r\n\t\t\t\t\t\tit.MarkerSize *= 1.3\r\n\t\t\t\tlegend1.Enabled = False\r\n\t\t\t\tlegend2.Font = originalFont\r\n\t\t\t\tlegend2.IsTextAutoFit = True\r\n\t\t\t\tlegend2.BackColor = formbody.BackColor\t\t\t\r\n\t\t\t\tchart1.CustomizeLegend += chart_CustomizeLegend\r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uilinechart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Line\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tsrs.BorderWidth = 4\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uisplinechart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\tpanelChart.Name = \"panelChart\"\r\n\t\t\t\t#Panels colors\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Spline\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.IsValueShownAsLabel = True\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tsrs.BorderWidth = 4\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Size = Size(panelChart.Width,panelChart.Width)\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.AutoSize = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t\r\n\t\t\t\t#Add a checkBox to show/hide labels\r\n\t\t\t\tcheckBox2 = CheckBox()\r\n\t\t\t\tcheckBox2.AutoCheck = True\r\n\t\t\t\tcheckBox2.Name = \"checkBox2\"\r\n\t\t\t\tcheckBox2.Text = \"Labels\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox2)\r\n\t\t\t\tcheckBox2.BringToFront()\r\n\t\t\t\tcheckBox2.Checked = True\r\n\t\t\t\tcheckBox2.Font = originalFont\r\n\t\t\t\tcheckBox2.AutoSize = True\r\n\t\t\t\tcheckBox2.Click += form.chart_showLabels\r\n\t\t\t\t\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uibubblechart':\r\n\t\t\t\tif isinstance(j.labels,list):\r\n\t\t\t\t\tlabels = j.labels\r\n\t\t\t\telse:\r\n\t\t\t\t\tlabels = [j.labels]\r\n\t\t\t\tinputcolors = j.inputcolors\r\n\t\t\t\tpyList = []\r\n\t\t\t\tif isinstance(j.xseries[0],list) and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.xseries[0],list) == False and isinstance(j.yseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.yseries)\r\n\t\t\t\t\txseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\txseries.append(j.xseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\tyseries = j.yseries\r\n\t\t\t\telif isinstance(j.yseries[0],list) == False and isinstance(j.xseries[0],list):\r\n\t\t\t\t\tnbOfSeries = len(j.xseries)\r\n\t\t\t\t\tyseries = []\r\n\t\t\t\t\ti = 1\r\n\t\t\t\t\twhile i <= nbOfSeries:\r\n\t\t\t\t\t\tyseries.append(j.yseries)\r\n\t\t\t\t\t\ti = i + 1\r\n\t\t\t\t\txseries = j.xseries\r\n\t\t\t\telse:\r\n\t\t\t\t\txseries = [j.xseries]\r\n\t\t\t\t\tyseries = [j.yseries]\r\n\t\t\t\t\tnbOfSeries = 1\r\n\t\t\t\tif inputcolors is not None:\r\n\t\t\t\t\tcolorBool = True\r\n\t\t\t\t\tfor color in inputcolors:\r\n\t\t\t\t\t\tpyList.append(Color.FromArgb(color.Red,color.Green,color.Blue))\r\n\t\t\t\t\twfColor = Array[Color](pyList)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcolorBool = False\r\n\t\t\t\t#Set a global Font code\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\toriginalFont = Font(fontFam,8)\r\n\t\t\t\t#Chart created and Panel to host the chart\r\n\t\t\t\tchart1 = Chart()\r\n\t\t\t\tpanelChart = Panel()\r\n\t\t\t\t#panelChart.Padding = Padding(1) To create a black border\r\n\t\t\t\tchart1.BackColor = formbody.BackColor\r\n\t\t\t\tpanelChart.BackColor = Color.Transparent\r\n\t\t\t\t#PanelChart location\r\n\t\t\t\tpanelChart.Width = formwidth  - rightmargin - xlabel\r\n\t\t\t\tpanelChart.Location = Point(xlabel,y + 30)\t\t\t\t\r\n\t\t\t\tautoheight = 250 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Height = autoheight + 73 * yRatio\r\n\t\t\t\tratio = (panelChart.Height)/(panelChart.Width)\r\n\t\t\t\th = float(panelChart.Height)\r\n\t\t\t\tw = float(panelChart.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\tchart_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tpanelChart.Size = Size(chart_maxsize,chart_maxsize*ratio)\t\t\t\t\r\n\t\t\t\t#Chart colors palette\r\n\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tif colorBool:\r\n\t\t\t\t\tchart1.PaletteCustomColors = wfColor\r\n\t\t\t\telse:\r\n\t\t\t\t\tchart1.Palette =  ChartColorPalette.None\r\n\t\t\t\tchart1.Series.Clear()\r\n\t\t\t\t#Series created\r\n\t\t\t\tdef createSeries(seriesName,_keys,_values):\r\n\t\t\t\t\tsrs = Series()\r\n\t\t\t\t\tsrs.Name = seriesName\r\n\t\t\t\t\tsrs.ChartType = SeriesChartType.Bubble\r\n\t\t\t\t\tsrs.ToolTip = \"Percent: #PERCENT\"\r\n\t\t\t\t\tsrs.Font = originalFont\r\n\t\t\t\t\tfor i,j in zip(_keys,_values):\r\n\t\t\t\t\t\tsrs.Points.AddXY(i,j)\r\n\t\t\t\t\treturn srs\r\n\t\t\t\t#Create series\r\n\t\t\t\tseries = []\r\n\t\t\t\tfor i in range(0,nbOfSeries):\r\n\t\t\t\t\tseries.append(createSeries(labels[i],xseries[i],yseries[i]))\r\n\t\t\t\t#Add series to chart\r\n\t\t\t\tfor s in series:\r\n\t\t\t\t\tchart1.Series.Add(s)\r\n\t\t\t\t#Refresh the Chart\r\n\t\t\t\tchart1.Invalidate()\r\n\t\t\t\t#Create a ChartArea and add it to the chart\r\n\t\t\t\tchartArea1 = ChartArea()\r\n\t\t\t\tchartArea1.BackColor = formbody.BackColor\r\n\t\t\t\tchartArea1.Name = \"ChartArea1\"\r\n\t\t\t\tchartArea1.AxisX.Title = j.xaxislabel\r\n\t\t\t\tchartArea1.AxisY.Title = j.yaxislabel\r\n\t\t\t\tchart1.ChartAreas.Add(chartArea1)\r\n\t\t\t\t#Create a Legend and add it to the chart\r\n\t\t\t\tlegend1 = Legend()\r\n\t\t\t\tlegend1.BackColor = formbody.BackColor\r\n\t\t\t\tlegend1.Font = originalFont\r\n\t\t\t\tlegend1.Name = \"Legend1\"\r\n\t\t\t\tchart1.Legends.Add(legend1) \r\n\t\t\t\t#Initialize the chart and its properties\r\n\t\t\t\tchart1.BeginInit()\r\n\t\t\t\tchart1.Dock = DockStyle.Fill\r\n\t\t\t\tchart1.AntiAliasing = AntiAliasingStyles.All\r\n\t\t\t\tfontFam = FontFamily(\"Segoe UI Symbol\")\r\n\t\t\t\ttitleFont = Font(fontFam,10,FontStyle.Bold)\r\n\t\t\t\ttitle = Title()\r\n\t\t\t\ttitle.Text = j.chartname\r\n\t\t\t\ttitle.Alignment = ContentAlignment.TopLeft\r\n\t\t\t\ttitle.Font = titleFont\r\n\t\t\t\tchart1.Titles.Add(title)\r\n\t\t\t\t#Add a button to push on view\r\n\t\t\t\tbt = Button()\r\n\t\t\t\tbt.Tag = \"Push the chart on a view in Revit\"\r\n\t\t\t\tbt.Text = \"Push on a draft view\"\r\n\t\t\t\tbt.Height = 20 * yRatio\r\n\t\t\t\tbt.Width = 140 * yRatio\t\t\t\r\n\t\t\t\tpanelChart.Controls.Add(bt)\r\n\t\t\t\tbt.BringToFront()\r\n\t\t\t\tbt.Click += form.imageexport\r\n\t\t\t\t#Add a checkBox to show/hide legend\r\n\t\t\t\tcheckBox1 = CheckBox()\r\n\t\t\t\tcheckBox1.AutoCheck = True\r\n\t\t\t\tcheckBox1.Name = \"checkBox1\"\r\n\t\t\t\tcheckBox1.Text = \"Show/Hide legend\"\r\n\t\t\t\tpanelChart.Controls.Add(checkBox1)\r\n\t\t\t\tcheckBox1.BringToFront()\r\n\t\t\t\tcheckBox1.Checked = True\r\n\t\t\t\tcheckBox1.Click += form.chart_showLegend\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Size = Size(panelChart.Width, panelChart.Width + checkBox2.Height + 20)\r\n\t\t\t\t#Add chart to panel\r\n\t\t\t\tpanelChart.Controls.Add(chart1)\r\n\t\t\t\tchart1.Location = Point(0,0)\r\n\t\t\t\tbt.Location = Point(panelChart.Width - bt.Width, panelChart.Width + 15)\r\n\t\t\t\tcheckBox1.Location = Point(panelChart.Width - bt.Width - 80, panelChart.Width + 15)\r\n\t\t\t\tcheckBox2.Location = Point(panelChart.Width - bt.Width - 160, panelChart.Width + 15)\r\n\t\t\t\tformbody.Controls.Add(panelChart)\r\n\t\t\t\t\r\n\t\t\t\ty = panelChart.Bottom + 25 * yRatio\r\n\r\n\t\t\telif j.__class__.__name__ == 'uitreeview':\r\n\t\t\t\ttv = TreeView()\r\n\t\t\t\ttv.CheckBoxes = True\r\n\t\t\t\ttitles = j._hastitles\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\t\ttv.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttv.Location = Point(xlabel,y)\r\n\t\t\t\ttv.Height = j._height\r\n\t\t\t\tdef treeIterationTitle(control, input):\r\n\t\t\t\t\tif isinstance(input,list):\r\n\t\t\t\t\t\ttry:\r\n\t\t\t\t\t\t\tcurrentNode = TreeNode(remove_accents(input[0].ToString()))\r\n\t\t\t\t\t\t\tcurrentNode.Tag = \"\"\r\n\t\t\t\t\t\t\tinput.pop(0)\r\n\t\t\t\t\t\texcept:\r\n\t\t\t\t\t\t\tcurrentNode = TreeNode(control.Text +\".\"+ str(len(control.Nodes)+1))\r\n\t\t\t\t\t\t\tcurrentNode.Tag = \"\"\r\n\t\t\t\t\t\tcontrol.Nodes.Add(currentNode)\r\n\t\t\t\t\t\tfor i in input:\r\n\t\t\t\t\t\t\ttreeIterationTitle(currentNode, i)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\titem = TreeNode(remove_accents(input.ToString()))\r\n\t\t\t\t\t\titem.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(item)\t\r\n\t\t\t\tdef treeIteration(control, input):\r\n\t\t\t\t\tif isinstance(input,list):\r\n\t\t\t\t\t\tcurrentNode = TreeNode(control.Text +\".\"+ str(len(control.Nodes)+1))\r\n\t\t\t\t\t\tcurrentNode.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(currentNode)\r\n\t\t\t\t\t\tfor i in input:\r\n\t\t\t\t\t\t\ttreeIteration(currentNode, i)\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\titem = TreeNode(remove_accents(input.ToString()))\r\n\t\t\t\t\t\titem.Tag = input\r\n\t\t\t\t\t\tcontrol.Nodes.Add(item)\r\n\t\t\t\tcurrentNode = TreeNode(\"List1\")\r\n\t\t\t\tcurrentNode.Expand()\t\t\t\t\r\n\t\t\t\tif titles:\r\n\t\t\t\t\ttv.Nodes.Add(currentNode)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor dl in j.datalist:\r\n\t\t\t\t\t\ttreeIterationTitle(currentNode,dl)\t\r\n\t\t\t\telse:\r\n\t\t\t\t\ttv.Nodes.Add(currentNode)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor dl in j.datalist:\r\n\t\t\t\t\t\ttreeIteration(currentNode,dl)\r\n\t\t\t\ttv.AfterCheck += form.CheckChildren\t\t\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(tv)\r\n\t\t\t\tform.output.append(tv)\r\n\t\t\t\ty = tv.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'listview':\r\n\t\t\t\tlvp = Panel()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tlvp.Location = Point(xinput,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xinput\t\t\t\t\r\n\t\t\t\telif j.inputname == \"\" and j.element_count != 0:\r\n\t\t\t\t\tlvp.Location = Point(xlabel,y+35*yRatio)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\telse : \r\n\t\t\t\t\tlvp.Location = Point(xlabel,y)\r\n\t\t\t\t\tlvp.Width = formwidth - rightmargin - xlabel\t\t\t\t\r\n\t\t\t\tlvp.Height = j.height * yRatio + 25 * yRatio\r\n\t\t\t\t#Creating the listview box\r\n\t\t\t\tlv = mylistview()\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tdummyheader = ColumnHeader()\r\n\t\t\t\tdummyheader.Text = \"\"\r\n\t\t\t\tdummyheader.Name = \"\"\r\n\t\t\t\tdummyheader.Width = -2 * xRatio\r\n\t\t\t\tlv.HeaderStyle = ColumnHeaderStyle.None\r\n\t\t\t\tlv.Columns.Add(dummyheader)\r\n\t\t\t\tlv.Values = j\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlv.CheckBoxes = True\r\n\t\t\t\tlv.View = vi.Details\r\n\t\t\t\tlvItems =  [i for i in j.keys() if not (i == 'inputname' or i == 'height' or i == 'highlight' or i == 'display_mode' or i == 'element_count' or i == 'default_values' or i == 'sorted' or i == 'showId')]\r\n\t\t\t\tif j.sorted :\r\n\t\t\t\t\tlvItems = sorted(lvItems,key = remove_accents)\r\n\t\t\t\telse:\r\n\t\t\t\t\tpass\r\n\t\t\t\t[lv.Items.Add(i) for i in lvItems]\r\n\t\t\t\tlv.Location = Point(0,0)\r\n\t\t\t\tif j.inputname != \"\" and j.element_count != 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telif j.inputname != \"\" and j.element_count == 0:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xinput\r\n\t\t\t\telse:\r\n\t\t\t\t\tlv.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tlv.Height = j.height * yRatio\r\n\t\t\t\tlv.Scrollable = True\r\n\t\t\t\tlv.ItemCheck += form.updateallnone\r\n\t\t\t\tfor i in j.default_values:\r\n\t\t\t\t\tdefInd = lvItems.index([x for x in j.keys() if not (x == 'inputname' or x == 'height' or x == 'highlight' or x == 'display_mode' or x == 'element_count' or x == 'default_values' or x == 'sorted' or x == 'showId')][i])\r\n\t\t\t\t\tlv.Items[defInd].Checked = True\r\n\t\t\t\t#Click listview items to hilight and center in appropriate view\r\n\t\t\t\tif j.highlight :\r\n\t\t\t\t\tlv.MouseDown += form.setviewforelement\r\n\t\t\t\t\tlv.MouseUp += form.zoomcenter\r\n\t\t\t\t\titems = list(lv.Items)\r\n\t\t\t\t\tlv.FullRowSelect = True\r\n\t\t\t\t\tdel items[::2]\r\n\t\t\t\t\tfor item in items:\r\n\t\t\t\t\t\titem.BackColor = Color.FromArgb(230,243,255)\r\n\t\t\t\t#Creating select all and select none radiobuttons\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\trball = RadioButton()\r\n\t\t\t\t\trball.Location = Point(0,(j.height+5)*yRatio)\r\n\t\t\t\t\trball.Width = 100 * xRatio\r\n\t\t\t\t\trball.Height = 20 * yRatio\r\n\t\t\t\t\trball.Font = SystemFonts.DefaultFont\r\n\t\t\t\t\trball.Text = \"Select all\"\r\n\t\t\t\t\trball.Click += form.selectall\r\n\t\t\t\t\trbnone = RadioButton()\r\n\t\t\t\t\trbnone.Location = Point(105 * xRatio,(j.height+5)*yRatio)\r\n\t\t\t\t\trbnone.Width = 100 * xRatio\r\n\t\t\t\t\trbnone.Height = 20 * yRatio\r\n\t\t\t\t\trbnone.Font = SystemFonts.DefaultFont\r\n\t\t\t\t\trbnone.Text = \"Select none\"\t\t\t\r\n\t\t\t\t\trbnone.Click += form.selectnone\t\t\t\r\n\t\t\t\t#Adding controls to panel\r\n\t\t\t\tlvp.Controls.Add(lv)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tlvp.Controls.Add(rball)\r\n\t\t\t\t\tlvp.Controls.Add(rbnone)\r\n\t\t\t\tformbody.Controls.Add(lvp)\r\n\t\t\t\tif not j.display_mode:\r\n\t\t\t\t\tform.output.append(lv)\r\n\t\t\t\ty = lvp.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uitext':\r\n\t\t\t\ttb = myTextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tif j._isnum:\r\n\t\t\t\t\ttb._isNum = True\r\n\t\t\t\t\ttb.KeyPress += form.numsOnly\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uimultilinetext':\r\n\t\t\t\ttb = myTextBox()\r\n\t\t\t\ttb.Text = j.defaultvalue\r\n\t\t\t\ttb.Multiline  = True\r\n\t\t\t\ttb.Height = j._height * yRatio\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\ttb.Width = formwidth  - rightmargin - xinput\r\n\t\t\t\t\ttb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\ttb.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\t\ttb.Location = Point(xlabel,y)\r\n\t\t\t\tif j._isnum:\r\n\t\t\t\t\ttb._isNum = True\r\n\t\t\t\t\ttb.KeyPress += form.numsOnly\r\n\t\t\t\tformbody.Controls.Add(tb)\r\n\t\t\t\tformbody.Controls.Add(label)\r\n\t\t\t\tform.output.append(tb)\r\n\t\t\t\ty = tb.Bottom + 25 * yRatio\t\t\t\t\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'tableview':\r\n\t\t\t\t#Creating grouping panel\r\n\t\t\t\ttvp = Panel()\r\n\t\t\t\ttvp.Location = Point(xlabel,y)\r\n\t\t\t\ttvp.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tif (50 + len(j.dataList) * 15) * yRatio > 800 * yRatio:\r\n\t\t\t\t\tautoheight = 800 * yRatio\r\n\t\t\t\telse:\r\n\t\t\t\t\tautoheight = (50 + len(j.dataList) * 15\t) * yRatio\t\t\t\r\n\t\t\t\ttvp.Height = autoheight + 73 * yRatio\r\n\t\t\t\t#Creating title\r\n\t\t\t\ttitlep = Label()\r\n\t\t\t\ttitlep.Text = j._tabletitle\r\n\t\t\t\ttitlep.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\ttitlep.BackColor = Color.FromArgb(153,180,209)\r\n\t\t\t\ttitlep.Font = Font(\"Arial\", 11, FontStyle.Bold)\r\n\t\t\t\ttitlep.TextAlign = ContentAlignment.MiddleLeft\r\n\t\t\t\ttitlep.BorderStyle = BorderStyle.FixedSingle\r\n\t\t\t\ttitlep.Location = Point(0,0)\r\n\t\t\t\ttvp.Controls.Add(titlep)\r\n\t\t\t\t#Creating data structure\r\n\t\t\t\tdg = myDataGridView()\r\n\t\t\t\t#dg.SelectionMode = DataGridViewSelectionMode.CellSelect\r\n\t\t\t\tdg.EnableHeadersVisualStyles = False\t\t\t\t\r\n\t\t\t\tdt = DataTable()\r\n\t\t\t\tdl = j.dataList\r\n\t\t\t\tfor i in range(len(dl[0])):\r\n\t\t\t\t\tif j._hasTitle:\r\n\t\t\t\t\t\tdt.Columns.Add(remove_accents(dl[0][i].ToString()))\r\n\t\t\t\t\t\trngstart = 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tdt.Columns.Add(\"Column \" + str(i))\r\n\t\t\t\t\t\trngstart = 0\t\t\t\t\t\t\r\n\t\t\t\tfor rindex in range(rngstart,len(dl)):\r\n\t\t\t\t\trow = dt.NewRow()\r\n\t\t\t\t\tfor i in range(len(dl[rindex])):\r\n\t\t\t\t\t\trow[i] = dl[rindex][i]\r\n\t\t\t\t\tdt.Rows.Add(row)\t\t\t\t\t\t\r\n\t\t\t\tdg.Tag = j._hasTitle\t\t\t\t\r\n\t\t\t\tdg.DataSource = dt\r\n\t\t\t\tdg.ClipboardCopyMode = DataGridViewClipboardCopyMode.EnableWithAutoHeaderText\r\n\t\t\t\tdg.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells\r\n\t\t\t\tdg.Width = formwidth - rightmargin - xlabel\r\n\t\t\t\tdg.Location = Point(0,23 * yRatio)\r\n\t\t\t\tdg.Height = autoheight\r\n\t\t\t\t#Creatin Excel like drag copy functionalities\r\n\t\t\t\tdg.CellMouseDown += form.startCell\r\n\t\t\t\tdg.CellMouseUp += form.endCell\r\n\t\t\t\t#dg.MouseDown += form.startRowDrag\r\n\t\t\t\t#dg.MouseUp = \t\t\t\r\n\t\t\t\ttvp.Controls.Add(dg)\t\t\t\r\n\t\t\t\ty = tvp.Bottom + 15 * yRatio\r\n\t\t\t\t#Adding export to excel button\r\n\t\t\t\tex = Button()\r\n\t\t\t\tex.Tag = [j._hasTitle , j._openExcel , j._showinfo , j._fileInfo]\r\n\t\t\t\ttry:\r\n\t\t\t\t\texpImage = getImageByName(\"exp.png\")[0]\r\n\t\t\t\t\tex.BackgroundImage = expImage\r\n\t\t\t\texcept:\r\n\t\t\t\t\tex.Text = \"Export\"\t\t\t\t\t\r\n\t\t\t\tex.Width = 60 * xRatio\r\n\t\t\t\tex.Height = 30 * yRatio\r\n\t\t\t\tex.Location = Point(formwidth - 125 * xRatio ,dg.Bottom + 15 * yRatio)\t\t\t\t\t\r\n\t\t\t\ttvp.Controls.Add(ex)\r\n\t\t\t\tex.Click += form.exportToExcel\r\n\t\t\t\t#Adding filepath export textbox\r\n\t\t\t\tfilepathtb = TextBox()\r\n\t\t\t\tfilepathtb.Text = \"ExportFileName\"\r\n\t\t\t\tfilepathtb.Location = Point(0 ,dg.Bottom + 20 * yRatio)\r\n\t\t\t\tfilepathtb.Width = formwidth - xlabel - 125 * xRatio\r\n\t\t\t\ttvp.Controls.Add(filepathtb)\r\n\t\t\t\t#Adding copy to clipboard button\r\n\t\t\t\tcb = Button()\r\n\t\t\t\t#Adding panel to form\r\n\t\t\t\tformbody.Controls.Add(tvp)\r\n\t\t\t\tform.output.append(dg)\r\n\t\t\t\ty = tvp.Bottom + 25 * yRatio\r\n\t\t\t\tform.topmost()\r\n\t\t\telif j.__class__.__name__ == 'uitextnote':\r\n\t\t\t\tgb = GroupBox()\r\n\t\t\t\tgb.Text = j.title\r\n\t\t\t\tgb.Parent = form\r\n\t\t\t\tgb.SendToBack()\r\n\t\t\t\tgb.BackColor = Color.Transparent\r\n\t\t\t\tgb.Location = Point(xlabel, y)\r\n\t\t\t\ttn = Label()\r\n\t\t\t\ttn.Location = Point(xlabel,18 * yRatio)\r\n\t\t\t\ttn.AutoSize = True\r\n\t\t\t\ttn.MaximumSize = Size(formwidth - rightmargin - 50 * xRatio,0)\r\n\t\t\t\ttn.Text = j.textnote\r\n\t\t\t\ttn.BringToFront()\r\n\t\t\t\tgb.Controls.Add(tn)\r\n\t\t\t\tgb.Size = Size(formwidth  - rightmargin - 25 * xRatio, tn.Bottom-tn.Top+25 * yRatio)  \r\n\t\t\t\ty = gb.Bottom + 25 * xRatio\r\n\t\t\t\tformbody.Controls.Add(gb)\r\n\t\t\telif j.__class__.__name__ == 'uibool':\r\n\t\t\t\tyn = CheckBox()\r\n\t\t\t\tyn.Width = formwidth - xinput - rightmargin + 10 * xRatio\r\n\t\t\t\tyn.Location = Point(xinput,y)\r\n\t\t\t\tyn.Text = j.booltext\r\n\t\t\t\tg = yn.CreateGraphics()\r\n\t\t\t\tsizetext = g.MeasureString(yn.Text,yn.Font, formwidth - xinput - rightmargin -20 * xRatio)\r\n\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\tyn.Height = heighttext + 15 * yRatio\r\n\t\t\t\tyn.Checked = j.defaultvalue\r\n\t\t\t\tformbody.Controls.Add(yn)\r\n\t\t\t\tform.output.append(yn)\r\n\t\t\t\ty = yn.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiradio':\r\n\t\t\t\tyrb = 20 * yRatio\r\n\t\t\t\trbs = []\r\n\t\t\t\trbgroup = mygroupbox()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\trbgroup.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\trbgroup.Width = formwidth - xlabel - rightmargin\r\n\t\t\t\t\trbgroup.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\trbgroup.Tag = j\r\n\t\t\t\trbcounter = 0\r\n\t\t\t\tfor key in j.keys():\r\n\t\t\t\t\tif key != 'inputname' and key != 'defaultvalue':\r\n\t\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\t\trb.Text = key \r\n\t\t\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\t\t\trb.Width = formwidth - xinput - rightmargin - 35 * xRatio\r\n\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\trb.Width = formwidth - xlabel - rightmargin - 35 * xRatio\r\n\t\t\t\t\t\trb.Location = Point(20 * xRatio,yrb)\r\n\t\t\t\t\t\tif rbcounter == j.defaultvalue:\r\n\t\t\t\t\t\t\trb.Checked = True\r\n\t\t\t\t\t\trbgroup.Controls.Add(rb)\r\n\t\t\t\t\t\tg = rb.CreateGraphics()\r\n\t\t\t\t\t\tsizetext = g.MeasureString(key,rb.Font, formwidth - xinput - 90*xRatio)\r\n\t\t\t\t\t\theighttext = sizetext.Height\r\n\t\t\t\t\t\trb.Height = heighttext + 15 * yRatio\r\n\t\t\t\t\t\tybot = rb.Bottom\r\n\t\t\t\t\t\tyrb += heighttext + 12 * yRatio\r\n\t\t\t\t\t\trbcounter += 1\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tpass\r\n\t\t\t\trbgroup.Height = ybot + 20 * yRatio\r\n\t\t\t\t[rbgroup.Controls.Add(rb) for rb in rbs]\r\n\t\t\t\tformbody.Controls.Add(rbgroup)\r\n\t\t\t\tform.output.append(rbgroup)\r\n\t\t\t\ty = rbgroup.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__  == 'uifilepath':\r\n\t\t\t\tfp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tfp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tfp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tfp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tfp.Location = Point(xlabel,y)\t\t\t\t\t\r\n\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\tif not j.defaultvalue == \"FilePath\":\r\n\t\t\t\t\tfp.Tag = j.defaultvalue\r\n\t\t\t\t\tfp.MouseHover += form.showtooltip\t\r\n\t\t\t\tfp.Text = j.buttontext\r\n\t\t\t\tfp.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(fp)\r\n\t\t\t\tfp.Click += form.openfile\r\n\t\t\t\tform.output.append(fp)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uidirectorypath':\r\n\t\t\t\tdp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tdp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tdp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tdp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tdp.Location = Point(xlabel,y)\t\t\t\t\r\n\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\tdp.Text = j.buttontext\r\n\t\t\t\tif not j.defaultvalue == \"DirectoryPath\":\r\n\t\t\t\t\tdp.Tag = j.defaultvalue\r\n\t\t\t\t\tdp.MouseHover += form.showtooltip\r\n\t\t\t\tdp.Text = j.buttontext\t\r\n\t\t\t\tdp.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(dp)\r\n\t\t\t\tdp.Click += form.opendirectory\r\n\t\t\t\tform.output.append(dp)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.pickobject\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectautocadelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.pickautocadobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click += form.pickautocadobject\t\t\t\t\t\t\t\t\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uiselectOrderedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tse.Click  += form.pickobjectsordered\r\n\t\t\t\tform.output.append(se)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelements':\r\n\t\t\t\tse = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tse.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tse.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tse.Location = Point(xlabel,y)\r\n\t\t\t\tse.Text = j.buttontext\r\n\t\t\t\tse.Height = 20 * yRatio\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(se)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tse.Click += form.picklinkedobjects\r\n\t\t\t\telse:\r\n\t\t\t\t\tse.Click  += form.picklinkedobject\r\n\t\t\t\tform.output.append(se)\r\n\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectlinkedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tsec.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.picklinkedobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tsec.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tif j.multi == False:\r\n\t\t\t\t\tsec.Click += form.pickobjectsofcat\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Click += form.pickobjectofcat\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectOrderedelementsofcat':\r\n\t\t\t\tsec = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsec.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsec.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsec.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsec.Location = Point(xlabel,y)\r\n\t\t\t\tsec.Text = j.buttontext\r\n\t\t\t\tsec.Tag = j.category\r\n\t\t\t\tsec.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sec)\r\n\t\t\t\tsec.Click += form.pickobjectsofcatordered\r\n\t\t\t\tform.output.append(sec)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectfaces':\r\n\t\t\t\tsf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsf.Location = Point(xlabel,y)\r\n\t\t\t\tsf.Text = j.buttontext\r\n\t\t\t\tsf.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sf)\r\n\t\t\t\tsf.Click += form.pickfaces\r\n\t\t\t\tform.output.append(sf)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectpointsonface':\r\n\t\t\t\tspf = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tspf.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tspf.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tspf.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tspf.Location = Point(xlabel,y)\r\n\t\t\t\tspf.Text = j.buttontext\r\n\t\t\t\tspf.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(spf)\r\n\t\t\t\tspf.Click += form.pickpointsonface\r\n\t\t\t\tform.output.append(spf)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiselectedges':\r\n\t\t\t\tsed = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsed.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tsed.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tsed.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tsed.Location = Point(xlabel,y)\r\n\t\t\t\tsed.Text = j.buttontext\r\n\t\t\t\tsed.Height = 20 * yRatio\r\n\t\t\t\tformbody.Controls.Add(sed)\r\n\t\t\t\tsed.Click += form.pickedges\r\n\t\t\t\tform.output.append(sed)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\t\t\r\n\t\t\telif j.__class__.__name__ == 'uislider':\r\n\t\t\t\tgb = Panel()\r\n\t\t\t\tif j.defaultvalue == '':\r\n\t\t\t\t\tdefval = j.minimum\r\n\t\t\t\telse:\r\n\t\t\t\t\tdefval = j.defaultvalue\r\n\t\t\t\tsl = mytrackbar(j.minimum,j.step)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tgb.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tgb.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tgb.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tgb.Location = Point(xlabel,y)\r\n\t\t\t\tgb.Height = 40 * yRatio\r\n\t\t\t\tsl.Minimum = 0\r\n\t\t\t\tsl.Maximum = (j.maximum-j.minimum)/j.step\r\n\t\t\t\tsl.Value = (defval - j.minimum) / j.step\r\n\t\t\t\tsl.TickFrequency = (j.maximum-j.minimum)/j.step/10\r\n\t\t\t\tsl.Location = Point(40 * xRatio,0)\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tsl.Width = formwidth - xinput - rightmargin - 35 * xRatio\r\n\t\t\t\telse:\r\n\t\t\t\t\tsl.Width = formwidth - xlabel -rightmargin - 35 * xRatio\r\n\t\t\t\tgb.Controls.Add(sl)\r\n\t\t\t\tform.output.append(sl)\r\n\t\t\t\tdisplabel = Label()\r\n\t\t\t\tdisplabel.Width = 50 * xRatio\r\n\t\t\t\tdisplabel.Location = Point(0,5 * yRatio)\r\n\t\t\t\tdisplabel.Text = str(defval)\r\n\t\t\t\tdisplabel.Height = 30 * yRatio\r\n\t\t\t\tdisplabel.BringToFront()\r\n\t\t\t\tgb.Controls.Add(displabel)\t\r\n\t\t\t\tformbody.Controls.Add(gb)\t\t\t\r\n\t\t\t\tsl.Scroll += form.scroll\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiimage':\r\n\t\t\t\tpic = Image.FromFile(j.image)\r\n\t\t\t\tim = PictureBox()\r\n\t\t\t\tif j.showborder:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.Fixed3D\r\n\t\t\t\telse:\r\n\t\t\t\t\tim.BorderStyle = BorderStyle.None\r\n\t\t\t\tratio = (pic.Height)/(pic.Width)\r\n\t\t\t\th = float(pic.Height)\r\n\t\t\t\tw = float(pic.Width)\r\n\t\t\t\tratio = h/w\r\n\t\t\t\timage_maxsize = formwidth - xlabel - rightmargin\r\n\t\t\t\tim.Size = Size(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tscaledimage = Bitmap(image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tgr = Graphics.FromImage(scaledimage)\r\n\t\t\t\tgr.DrawImage(pic,0,0,image_maxsize,image_maxsize*ratio)\r\n\t\t\t\tim.Image = pic\r\n\t\t\t\tim.SizeMode = PictureBoxSizeMode.Zoom\r\n\t\t\t\tformbody.Controls.Add(im)\r\n\t\t\t\tim.Location = Point(25 * xRatio,y+25*yRatio)\r\n\t\t\t\ty = im.Bottom + 25 * yRatio\r\n\t\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 0:\r\n\t\t\t\tcp = Button()\r\n\t\t\t\tif j.inputname != \"\":\r\n\t\t\t\t\tcp.Width = formwidth - xinput - rightmargin\r\n\t\t\t\t\tcp.Location = Point(xinput,y)\r\n\t\t\t\telse:\r\n\t\t\t\t\tcp.Width = formwidth - xlabel - rightmargin\t\t\r\n\t\t\t\t\tcp.Location = Point(xlabel,y)\r\n\t\t\t\tcp.Text = j.buttontext\r\n\t\t\t\tcp.Height = 30 * yRatio\r\n\t\t\t\tformbody.Controls.Add(cp)\r\n\t\t\t\tcp.Click += form.colorpicker\r\n\t\t\t\tform.output.append(cp)\r\n\t\t\t\ty = label.Bottom + 25 * yRatio\t\r\n\t\t\telif j.__class__.__name__ == 'uicolorpick' and importcolorselection == 1:\r\n\t\t\t\timportcolorselection = 2\r\n\t\t\telif j.__class__.__name__ == 'uigroup':\r\n\t\t\t\tgrouppanel = GroupBox()\r\n\t\t\t\tgrouppanel.Text = j.groupname\r\n\t\t\t\tgrouppanel.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanel.Width = formwidth - 65 * xRatio\r\n\t\t\t\t#recursive implementation of the definition to process grouped inputs\r\n\t\t\t\taddinput(grouppanel,j.inputgroup,25*yRatio,xinput-25*xRatio,80 * xRatio,90 * xRatio,importcolorselection)\r\n\t\t\t\tformbody.Controls.Add(grouppanel)\r\n\t\t\t\ty = grouppanel.Bottom + 25 * yRatio\r\n\t\t\telif j.__class__.__name__ == 'uiconditional':\r\n\t\t\t\tgrouppanelcond = GroupBox()\r\n\t\t\t\tgrouppanelcond.Location = Point(xlabel,y)\r\n\t\t\t\tgrouppanelcond.Width = formwidth - 65 * xRatio\t\r\n\t\t\t\tform.output.append(grouppanelcond)\t\t\t\t\r\n\t\t\t\t#recursive implementation of the definition to process conditional groups of inputs\r\n\t\t\t\tpanlist = []\r\n\t\t\t\trblist = []\r\n\t\t\t\typ = 25 * yRatio\r\n\t\t\t\txrb = 25 * xRatio\r\n\t\t\t\tfor i,d in zip(j._Conditions,j._GroupedInputs):\t\r\n\t\t\t\t\trb = RadioButton()\r\n\t\t\t\t\trb.CheckedChanged += form.ActivateOption\r\n\t\t\t\t\trb.Text = i\r\n\t\t\t\t\trb.Location\t= Point(xrb,10*yRatio)\r\n\t\t\t\t\trb.Width = 95 * xRatio\r\n\t\t\t\t\trblist.append(rb)\t\t\t\t\t\r\n\t\t\t\t\tgrouppanelcond.Controls.Add(rb)\t\t\t\t\r\n\t\t\t\t\tcondition_pannel = Panel()\r\n\t\t\t\t\tcondition_pannel.Name = i\r\n\t\t\t\t\tcondition_pannel.Top = yp\r\n\t\t\t\t\tcondition_pannel.Width = formwidth - 65 * xRatio\r\n\t\t\t\t\tcondition_pannel.BackColor = Color.Transparent\r\n\t\t\t\t\tcondition_pannel.BringToFront()\t\t\t\t\t\r\n\t\t\t\t\taddinput(condition_pannel,d,25*yRatio,xinput-25*xRatio,80*xRatio,90*xRatio,importcolorselection)\r\n\t\t\t\t\tpanlist.append(condition_pannel)\r\n\t\t\t\t\typ = condition_pannel.Bottom - 25*yRatio\r\n\t\t\t\t\txrb += 100 * xRatio\r\n\t\t\t\tfor pan in panlist:\r\n\t\t\t\t\tgrouppanelcond.Controls.Add(pan)\r\n\t\t\t\tfor e,pan in enumerate(panlist):\r\n\t\t\t\t\tif e != j._defaultOptionIndex:\r\n\t\t\t\t\t\tpan.Enabled = False\r\n\t\t\t\t\telse:\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\trblist[j._defaultOptionIndex].Checked = True\r\n\t\t\t\tgrouppanelcond.Height = sum([p.Height for p in panlist]) - (len(panlist)-2)*25 * yRatio\r\n\t\t\t\tgrouppanelcond.BackColor = Color.Transparent\t\t\t\t\r\n\t\t\t\tformbody.Controls.Add(grouppanelcond)\r\n\t\t\t\tform.output.append([grouppanelcond.Tag])\t\t\t\t\r\n\t\t\t\ty = grouppanelcond.Bottom + 25*yRatio\r\n\t\t\tformbody.Height = y\r\n\r\n\r\n\t# process input lists \r\n\taddinput(body,inputtypes,0,IN[9],40 * xRatio ,IN[9] * xRatio,importcolorselection)\r\n\t\r\n\t#add the formbody panel to the form\r\n\tform.Controls.Add(body)\t\t\r\n\t\r\n\r\n\tif IN[6] != None:\r\n\t\tif IN[8] > 400 * yRatio:\r\n\t\t\tformy += 50 * yRatio\r\n\t\t\txinput = 270 * yRatio\r\n\t\telse:\r\n\t\t\tformy = logo.Bottom + 20 * yRatio\r\n\telse:\r\n\t\tformy += 50 * yRatio\r\n\r\n\r\n\r\n\t#Adding validation button\r\n\t\r\n\tbutton = Button()\r\n\tbutton.Text = IN[1]\r\n\tbutton.Width = formwidth - xinput - 40 * xRatio\r\n\tbutton.Height = 20 * yRatio\r\n\tbutton.Location = Point (xinput,formy)\r\n\tbutton.Click += form.setclose\r\n\tform.Controls.Add(button)\r\n\tform.MaximizeBox = False\r\n\tform.MinimizeBox = False\r\n\tform.FormBorderStyle = FormBorderStyle.FixedSingle\r\n\t\r\n\t#Adding Cancel button\r\n\tif IN[6] != None:\r\n\t\tcancelbutton = Button()\r\n\t\tcancelbutton.Text = IN[6]\r\n\t\tcancelbutton.Width = 120 * xRatio\r\n\t\tcancelbutton.Height = 20 * xRatio\r\n\t\tcancelbutton.Name = \"Cancel\"\r\n\t\tcancelbutton.Location = Point (xinput -120 * xRatio ,formy)\r\n\t\tcancelbutton.Click += form.setclose\r\n\t\tform.Controls.Add(cancelbutton)\r\n\t\tform.CancelButton = cancelbutton\r\n\t\r\n\t#Adding link to help\r\n\t\r\n\tif IN[5] != None :\r\n\t\thelplink = LinkLabel()\r\n\t\thelplink.Text = \"Help\"\r\n\t\thelplink.Tag = IN[5]\r\n\t\thelplink.Click += form.openurl\r\n\t\thelplink.Location = Point(formwidth - 65 * xRatio ,formy+30 * yRatio)\r\n\t\tform.Controls.Add(helplink)\r\n\telse:\r\n\t\tpass\t\r\n\t\t\t\r\n\tform.ShowIcon = True\r\n\tform.Width = formwidth\r\n\tform.Height = formy + 120 * yRatio\r\n\tformfooterheight = form.Height - formheaderheight\r\n\t\r\n\t# Make formbody scrollable\r\n\t\r\n\t# if the form is longer than its maximum height, do the following:\r\n\t# modify the form height\r\n\t# make the formbody panel scrollable\r\n\tif form.Height + body.Height > IN[7] * yRatio and IN[7] * yRatio > 0:\r\n\t\tformbody_calculatedheight = IN[7] * yRatio - form.Height\r\n\t\t# make sure the formbody is at least 100 px high\r\n\t\tif formbody_calculatedheight < 100 * yRatio: formbody_calculatedheight = 100 * yRatio\r\n\t\tbody.Height = formbody_calculatedheight\r\n\t\tform.Height = form.Height + formbody_calculatedheight\r\n\t\t# this (and apparently only this) will implement a vertical AutoScroll *only*\r\n\t\t# http://stackoverflow.com/a/28583501\r\n\t\tbody.HorizontalScroll.Maximum = 0\r\n\t\tbody.AutoScroll = False\r\n\t\tbody.VerticalScroll.Visible = False\r\n\t\tbody.AutoScroll = True\r\n\t\tbody.BorderStyle = BorderStyle.Fixed3D\r\n\telse:\r\n\t\tform.Height = form.Height + body.Height\r\n\t# Move footer elements\r\n\tlogo.Location = Point(logo.Location.X, logo.Location.Y + body.Height)\r\n\tbutton.Location = Point(button.Location.X, button.Location.Y + body.Height)\r\n\tif IN[6] != None: cancelbutton.Location = Point(cancelbutton.Location.X, cancelbutton.Location.Y + body.Height)\r\n\tif IN[5] != None: helplink.Location = Point(helplink.Location.X, helplink.Location.Y + body.Height)\r\n\r\n\t#Positionning the form at top left of current view\r\n\t#In The revit environment\r\n\ttry:\r\n\t\tuiviews = uidoc.GetOpenUIViews()\r\n\t\tif doc.ActiveView.IsValidType(doc.ActiveView.GetTypeId()):\r\n\t\t\tactiveviewid = doc.ActiveView.Id\r\n\t\t\tactiveUIView = [v for v in uiviews if v.ViewId == activeviewid][0]\r\n\t\telse:\r\n\t\t\tactiveUIView = uiviews[0]\r\n\t\trect = activeUIView.GetWindowRectangle()\r\n\t\tform.StartPosition = FormStartPosition.Manual\r\n\t\tform.Location = Point(rect.Left-7 * xRatio,rect.Top)\r\n\texcept:\r\n\t\tpass\r\n\t\r\n\t\t\r\n\tif IN[2]:\r\n\t\tif importcolorselection != 2:\r\n\t\t\tApplication.Run(form)\r\n\t\t\tresult = form.values\r\n\t\t\tOUT = result,True, form.cancelled \r\n\t\telse:\r\n\t\t\tOUT = ['ColorSelection input is only available With Revit 2017'] , False, False\r\n\telse :\r\n\t\tOUT = ['Set toggle to true!'] , False, False\r\nexcept:\r\n\timport traceback\r\n\tOUT = traceback.format_exc() , \"error\", \"error\"\r\n",
      "VariableInputPorts": true,
      "Id": "a9d6c9a74ca048b9b34dcdfe67fc26dc",
      "Inputs": [
        {
          "Id": "cc94e9a821454e0db84774242149bd80",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf996d2d0ddd46728372d64e504a056c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37492103967c4223beb65f0a02c56b6a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "667df6e0660f484b9fcd3a325821c426",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38c56822bb5a40e0ba7d00b629e05253",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2817f1bb1f6e41aeb023626854400ccf",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "170d82e5bee743ce90a85fe0977ad5de",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c72b22b21854f30aafbcdd3a1d58fe6",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8db29de46ca94cf59e2edeac0b70acd8",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "199d57761baf42c2956eef25a6427ab4",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa7129d29905448e80410bf1fc0b1734",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "e2665cce790f4a88a52ebe6c63fb7686",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9f40c83d32d74a0db7c9b26dc69874f4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "eae4a0d508634d359c45cff013f6a79a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de4f1c1dbe10401eb2b0a307a5c359d8",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "206fc118a75a45fbacf3da0a72144208",
      "Inputs": [
        {
          "Id": "e1878d77db154bc1960c291388dfc760",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "644d547b521f4a68b5ace7e4b3ed9f04",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    }
  ],
  "Connectors": [
    {
      "Start": "c329822c5b1a462f83d653bd998bc035",
      "End": "f004075f561c4ed6adaf033f4ec699d6",
      "Id": "ac7e7d3924914eb9bfcb3100d35d76d5"
    },
    {
      "Start": "3920c9d8a5ce4ebcb30c0e8f6567d732",
      "End": "cfc57beca84144fcb3ecc333400890c3",
      "Id": "beba73c0e19e4d7d845797cc9ece581d"
    },
    {
      "Start": "3cec46894bb04b3798b37d90a22f0aec",
      "End": "e06f4c4c24e54ea1ad67787b96dbf447",
      "Id": "445f4b46195b4bc9a495d1d22ff9f578"
    },
    {
      "Start": "6155c81bbecd44e389f65f970305e669",
      "End": "4d26abb2ee094de1b839f1efb563c549",
      "Id": "5406d80bd8194c6c9976a910e887d739"
    },
    {
      "Start": "6155c81bbecd44e389f65f970305e669",
      "End": "919ea9a5b97f4fffb5d1a630c30f2676",
      "Id": "a125f7813b1148b2913da3a8b5af6911"
    },
    {
      "Start": "47a8beb69b304479a19d2234dd577b0d",
      "End": "4caddfb222044077b9d22012901f27f2",
      "Id": "6c371eb31a784222a17ccd5243657a18"
    },
    {
      "Start": "7a6a89cda60642cbaf143a02aca8e554",
      "End": "2c7387b123bc486b85ffe4c80f418943",
      "Id": "13b45c69a0ab4a25b0de776f60384d69"
    },
    {
      "Start": "d6e81149a4dd473a8e55570eb8592f0e",
      "End": "39946ea605c94256a65490b27541b829",
      "Id": "140544ce2d014a64880595d0503499e4"
    },
    {
      "Start": "21e689a28de2438496c0943be1c2062e",
      "End": "3ee3531ebdc149ef85ec23a27b81723f",
      "Id": "cb43f1652542466cac06eff4af900b72"
    },
    {
      "Start": "f0a9b11311d249c687ec9bb4894e3e35",
      "End": "51fce86777b643d2889613754cbf2c60",
      "Id": "6a3ebc12846d4e3e9d3443ea056d577e"
    },
    {
      "Start": "e9ad8f76bfc045bfa98e28bb34bc2cb6",
      "End": "beff5ad3cd454b6fa4491eb73b4443c6",
      "Id": "fdcb40c0e3bd4cd0961bc203f194cf2e"
    },
    {
      "Start": "e9ad8f76bfc045bfa98e28bb34bc2cb6",
      "End": "146d47164fe54968a4e30d2cad18749f",
      "Id": "597ace82ad4c498e978426be335418ad"
    },
    {
      "Start": "e9ad8f76bfc045bfa98e28bb34bc2cb6",
      "End": "00043a8bf35847f0aefa587f45ac5efe",
      "Id": "34f0954421b24a748152014aabb9156d"
    },
    {
      "Start": "e9ad8f76bfc045bfa98e28bb34bc2cb6",
      "End": "9b0ab687ef024ce99899d898ff8cbdd8",
      "Id": "0ff165014ce94a1491ae067ac5ec8782"
    },
    {
      "Start": "dd23938b517c4ae7b7571381c64c672b",
      "End": "2e02e7ce2b5d49cfa5048e4c55681c38",
      "Id": "651a0c8de75b41e5ac5a10e10464ccce"
    },
    {
      "Start": "1f725de22aab4b2d95cb5042a09eeed1",
      "End": "c6c4dc0f47594bd0bcb65fbfc248c3a5",
      "Id": "5fafd26dedf14c38a1f7ada0633c7126"
    },
    {
      "Start": "1f725de22aab4b2d95cb5042a09eeed1",
      "End": "e2ad1aaa5fc340a19dcb25fd48bb2e5d",
      "Id": "081cea71405348a5a94f464e7df91515"
    },
    {
      "Start": "dfc9fbda632f400987fd395ee5b42bde",
      "End": "61b67d2ff46a46d780b47f98693ee710",
      "Id": "852dc88d518841c3a6adf51731c3afe3"
    },
    {
      "Start": "dfc9fbda632f400987fd395ee5b42bde",
      "End": "5380b6bedb59428f8f713448034711a1",
      "Id": "4a4c76785cfc4835b6b71963918027ed"
    },
    {
      "Start": "9fc02cf3bf13477787a49682758bdda8",
      "End": "0f9d985d358940918f6cee9362c2d190",
      "Id": "22cb621ba1dd476dbf1bc867f215b729"
    },
    {
      "Start": "9fc02cf3bf13477787a49682758bdda8",
      "End": "2891c4fc992d4ab09f31a5034c3a9a3b",
      "Id": "9cd0ad14bffa45dc8ef529fde10e5c0e"
    },
    {
      "Start": "9db941d9fdc8441e9ab82e1c7bc673bf",
      "End": "c7f32b9245f7407d870be2c347476485",
      "Id": "fc0b419ab6d44c9cb9640449037251be"
    },
    {
      "Start": "9db941d9fdc8441e9ab82e1c7bc673bf",
      "End": "f4f6678bff9e4b52b9fd47df2bf50d41",
      "Id": "bf4d36c7924d43269a5f3d724cb1b38c"
    },
    {
      "Start": "e193d8f444c44dbaaec6150476159119",
      "End": "a7f6e8403d27443eb52543e6a22ee817",
      "Id": "c40923da9a2b451f9c69ec8d8e51ef20"
    },
    {
      "Start": "17d54e8ee18b4c05b611a2fee6c0e8ba",
      "End": "75056bd5ffd24777a120e9ee4231a9e8",
      "Id": "608b49137e154a9e843106cf5e44c128"
    },
    {
      "Start": "17d54e8ee18b4c05b611a2fee6c0e8ba",
      "End": "75056bd5ffd24777a120e9ee4231a9e8",
      "Id": "3650df991288464a94810941e24459de"
    },
    {
      "Start": "167122cb10b843828b1dbae60b8f0b32",
      "End": "4cfb3b991d4c4fec9e7d8597e950544a",
      "Id": "53f1f64b4a5042da9ebf4ab693062a56"
    },
    {
      "Start": "4bf0ac7dd1d9425db1742a86da2c19bc",
      "End": "8b20922e92c54d8a8c153c4f4f2806f9",
      "Id": "4b85d8a022034b2cb3cb9be3941cb5ba"
    },
    {
      "Start": "4bf0ac7dd1d9425db1742a86da2c19bc",
      "End": "2cefd3c02ae84ca7a8fae5a967ab5b60",
      "Id": "be6b743d413f46e7932b0459b890851a"
    },
    {
      "Start": "4bf0ac7dd1d9425db1742a86da2c19bc",
      "End": "33707a4151b34430974fb2da3998a757",
      "Id": "a5966c827044476fb981e5bbf7d2bac7"
    },
    {
      "Start": "4bf0ac7dd1d9425db1742a86da2c19bc",
      "End": "55a699b69d154cc4aca772e1f114df78",
      "Id": "429ac9e4c47d46febcfdc259b9920f1e"
    },
    {
      "Start": "4bf0ac7dd1d9425db1742a86da2c19bc",
      "End": "d6c28a8839f24add84ebba52281b40fa",
      "Id": "15a2a789448a48008c297b505112d119"
    },
    {
      "Start": "de489fab4b4d4da798bb936cb590a309",
      "End": "f687c7bb3c974821b5e1f26343e078d1",
      "Id": "95dc78cc583e4a2dbbb745caa9e99727"
    },
    {
      "Start": "b4bb569711d4430287cefb68c03420b1",
      "End": "a5604078702a4081870a72571cacc895",
      "Id": "3139ccf2108449caabb5eddb232fcc1e"
    },
    {
      "Start": "05c2c53c33f74f53a7f1144b36f6257e",
      "End": "6714d65a50244986b802787382e15785",
      "Id": "0120e01ce78848f4bcb7a37a87f25775"
    },
    {
      "Start": "26453b820bb74be9bcc7541b5e982941",
      "End": "9c6eef08e92045a8ae804c61def2c09c",
      "Id": "fd9bfb61f5a34ee3bc3fb9a8f30cab28"
    },
    {
      "Start": "26453b820bb74be9bcc7541b5e982941",
      "End": "7791dd8a8ac849ada7a5d949deb628ca",
      "Id": "bf19c23c896443deb6d476c4443a8582"
    },
    {
      "Start": "77064e322d8e4a4ba190f0a4ddd2a653",
      "End": "460c974c613645dfadaa8fd9247db348",
      "Id": "10642661575b4fbd8e2c1007d510b637"
    },
    {
      "Start": "7a6991127ab24fadac42830150ca2621",
      "End": "14c47b29e30044ec8f8cea85a3b6f2f1",
      "Id": "52f21bca389f469e81138429714cd480"
    },
    {
      "Start": "7a6991127ab24fadac42830150ca2621",
      "End": "5da8415847e24db8a8848ee7083d2d57",
      "Id": "fc9eba81ee554110b87c518928af0cec"
    },
    {
      "Start": "7a6991127ab24fadac42830150ca2621",
      "End": "86922d2d36154f7faa6c075ecb0602fa",
      "Id": "d048c1592eb94cecbcca3816b91717ad"
    },
    {
      "Start": "e6e999c1aaff4fa188e3d28fcde04d7f",
      "End": "3a35ac5154ce42a28c2d53dfcc83188a",
      "Id": "274a8f91490e40bebb5762733f558e0b"
    },
    {
      "Start": "d4e110a9a7744575a45b08c759671b30",
      "End": "046f906e790943f184522f2718055633",
      "Id": "48bb1c7ef9814d3abb58fb4a7e3694a0"
    },
    {
      "Start": "b3f9dfefacce401488fe2b2f5211ecd2",
      "End": "3df4b52fd9784701865dfed1fcedcb52",
      "Id": "b5a8f477515d43b99780369725446a03"
    },
    {
      "Start": "585889bc6341459682ac5de9f35f56f6",
      "End": "6267e6a0b3214380b0a20c3ecbeda029",
      "Id": "f64eb39825834d3899344e988cfc243e"
    },
    {
      "Start": "4ce2977ab923446e890076c760f06786",
      "End": "823699a343664bef9acc6bc44a1ef920",
      "Id": "3cb1dde268584f22870f53480ed46b07"
    },
    {
      "Start": "8ac95ff6e5104e2a833ce5e92fb59520",
      "End": "41880e7b358645908c1f50c45a719559",
      "Id": "95ba53841e3844029426e1d70d975f76"
    },
    {
      "Start": "a3e5caded40c45c3b95fb9466508cf99",
      "End": "2a58eeb7c2774defb6cb222ab507706a",
      "Id": "4ba5586e655a4c838e021db329020bff"
    },
    {
      "Start": "aa99286819964c8d8043d531bade11c4",
      "End": "41a62d7d1de04c6098f53c72b8a895ca",
      "Id": "a494d22e2f3e413fb34b87e9430736c7"
    },
    {
      "Start": "e2bc35e82c3d473fac91a111f62f8387",
      "End": "4651483d83084b9db27ff4a97a9602e3",
      "Id": "3910cd4fbe94452e905de654e542c0c8"
    },
    {
      "Start": "e2bc35e82c3d473fac91a111f62f8387",
      "End": "8b7e5b8850b842c3822f5a4b17f4e629",
      "Id": "8a29bd1c5495445eb499de9025d3f17e"
    },
    {
      "Start": "de9a8dd57a6e4603b5e5c5fb67ee0a1d",
      "End": "7841316ae56049768525b963ab3e520a",
      "Id": "c675e776aedb43a4819cef6e81fa45c9"
    },
    {
      "Start": "d630f4252cb546889dfbf10b1a5cebd8",
      "End": "f397c95181a64f6d9e4fc38d4d636016",
      "Id": "4751f57a37bb48e0b9b5a9dc8072e997"
    },
    {
      "Start": "a13fb8186704415c907d6b4ea815d789",
      "End": "9832010e95f5467b86a7a76385aac4c0",
      "Id": "8cfe34ae2cc745ff8253970accb7aa7b"
    },
    {
      "Start": "56845c7505a3403c934135702a76a603",
      "End": "568b50ebb3d34ca192f8580866de74bf",
      "Id": "89827f02841f46c2aff1368892a16e6e"
    },
    {
      "Start": "56845c7505a3403c934135702a76a603",
      "End": "3eb26725236548d7a7af113fa939c4b9",
      "Id": "46befb0ff6dc450c8252b22f81e6cf63"
    },
    {
      "Start": "57956c3e32074eb781e4434e29b5adc9",
      "End": "b15c62e31a464425b9dcbcf762c0b76d",
      "Id": "64d518009b4b4cd8b551189d21aa3875"
    },
    {
      "Start": "57956c3e32074eb781e4434e29b5adc9",
      "End": "e99707e3296e49d8a90174394423e791",
      "Id": "ca860cd04e504d35ae0d767492a0df43"
    },
    {
      "Start": "4040d753d7d145378a6a36b4b5757491",
      "End": "a9783ba34e274d49b8c841e58a832bac",
      "Id": "ea379325b88241bfa00b3170eee55bbb"
    },
    {
      "Start": "4040d753d7d145378a6a36b4b5757491",
      "End": "68eadfcab9d14a989524d22d53d775b8",
      "Id": "b3555a3f77bd4da1950db3bc1a2b8084"
    },
    {
      "Start": "6ad47ef42bd94eaea1d6345654939728",
      "End": "b96027ea4c6d4257b92dc680946fb3f1",
      "Id": "f0f77380f69a40e2ad1966d3f040e3fb"
    },
    {
      "Start": "31fea5b50c644594a93daa4ccfb433ca",
      "End": "e6ecc7efb1994a749937253b3ee40dcb",
      "Id": "c2eef079f5294dcea0c8faaba2a27ded"
    },
    {
      "Start": "31fea5b50c644594a93daa4ccfb433ca",
      "End": "bf473181f2ed47ddbc82a87ebe8cca45",
      "Id": "d8e845ce2b5145d4b47599358a067244"
    },
    {
      "Start": "a36a000cc2f142ed8bf4e0fe199013b4",
      "End": "af9c5a1fea8a4887b05ed39c36e18063",
      "Id": "47aac5bbbecd4fa4b158d6eacc9aafc8"
    },
    {
      "Start": "112bb5b0ae0140c1be7e1b3b9a450c0b",
      "End": "8e6e3dbd41c040919d996acb14b5e9dc",
      "Id": "21e5792f5c2e48c5986140555072f6dd"
    },
    {
      "Start": "da2881b150a24d6a944bd6bb351778a7",
      "End": "0df10ede049544eabbd8df878a1912ad",
      "Id": "fe1d02efd91a49749d04717242d9f4d2"
    },
    {
      "Start": "d2642c6f84224752852e10d58117dc51",
      "End": "54c14f2f303840a692d10109578e9ff3",
      "Id": "dda05f4812db489281bd5412108e5ec9"
    },
    {
      "Start": "15e4e04782844e37bec26857c6371d88",
      "End": "908f7e1e54204eb4a7f91b1f791214b5",
      "Id": "b82452545a2c418a88743b9c291a8128"
    },
    {
      "Start": "1780accb643f46db8b83a0e197d1f517",
      "End": "618d87c7fddd4ba1a350a4de5a2808b9",
      "Id": "7728918f54ee41a7885fbb713a96acb4"
    },
    {
      "Start": "496f9e348f904fa7a7b6865f58b6b5de",
      "End": "d0b11b789cc047228260444225d21f20",
      "Id": "408eb8c8bbc14e02bd5b77b6f9999595"
    },
    {
      "Start": "496f9e348f904fa7a7b6865f58b6b5de",
      "End": "0eb49a0856ad4c64b195f4027b7d7344",
      "Id": "d89c3a23e9de41caa66dbd8bed31d1de"
    },
    {
      "Start": "79fe0121f60b481e936ee51448dfd9c0",
      "End": "164274d6bbf04b99bf0386fbef0d6a44",
      "Id": "9e5edaf8dcb845069e8e9d4a8028368a"
    },
    {
      "Start": "98a4a9e1066b429bb1039aa7a76c5516",
      "End": "b06ac977f6394ef78072946652586366",
      "Id": "ccce32e60c884ccabf24d20a5c51e819"
    },
    {
      "Start": "053cda3c01214c16a93fae99ac8bbfbe",
      "End": "7f25c776e1144e569e75941173962c0c",
      "Id": "d440b082d9e848e087b3a6d3aa741479"
    },
    {
      "Start": "ea4f3615bdc74f6994fcfa5b9ce41803",
      "End": "bb7279545e264316a3f975c7e3f4c78c",
      "Id": "2963141249b84de4af98841cc97b0f4f"
    },
    {
      "Start": "ea4f3615bdc74f6994fcfa5b9ce41803",
      "End": "a955f91622ba4ad2b5312a5e954655bb",
      "Id": "ba856ffa05e74154a9c445f1f7cfaf3d"
    },
    {
      "Start": "022ad34561954d93bb6886bf43e00ab8",
      "End": "4b273ce8beb7434eb0f8f554d6e1db2f",
      "Id": "de8ffc5133484f28aa041812c61c058d"
    },
    {
      "Start": "358baf478cde4fd896f0660f809b27ae",
      "End": "d8fa96cdd86f492a81f8cd7ae95d8bd3",
      "Id": "4a0601dc18d340eabf445a2e75f1db0d"
    },
    {
      "Start": "bdcc4d6b90f44ea9903a9344e77b91e0",
      "End": "637c890ba6a34cbca79c170d11ad8dd8",
      "Id": "870b77b0d9f540569f1d11f077116700"
    },
    {
      "Start": "dcf33e8d36e54e878b8ae8c4eb956242",
      "End": "22efed95398e41eeb44be6754fa37603",
      "Id": "20de6060b3ed49b28e367d015101f094"
    },
    {
      "Start": "dcf33e8d36e54e878b8ae8c4eb956242",
      "End": "c61cfda81af44ad0aed7efbcdbaeb734",
      "Id": "02976ed8db874ff99b50094b2394013c"
    },
    {
      "Start": "657545bc72de4e9bb7e267f37c00f6d6",
      "End": "925dc42f4f6e402eb78f15309a1fd2d6",
      "Id": "a387cee5f5684b3881b788fd736b8b75"
    },
    {
      "Start": "5913b8258ceb453ab21b20c5fe8d2e77",
      "End": "e6ed9ed1f00a499da5558553d8e433ba",
      "Id": "c10b6e8116bb457387d7002c73545cb6"
    },
    {
      "Start": "7b16879892624aa68f2198104af3d984",
      "End": "7e1681f921c44b4fbfe5cf60b0bc290d",
      "Id": "55389fc179b5461da2e36800d45b5c7e"
    },
    {
      "Start": "37d0a0cc14ff430cb6b1e70a14458b25",
      "End": "84ab91e7fa3b41ea83e942f982306fa9",
      "Id": "f1faedfe75a740a7997777d56cdf73c3"
    },
    {
      "Start": "35d3c8e1e2a4486a85bfd8f7e0b14486",
      "End": "57935d312b5048d19913c2dacbec0d5d",
      "Id": "8036733f3148460dbeab622c81e704cc"
    },
    {
      "Start": "054293c925984abfb3ff818a7d58cfc1",
      "End": "9ff9316331ce43fdb7602d091d7fd1c9",
      "Id": "e1745680664347348734f41912ad93fd"
    },
    {
      "Start": "e83aa02eff8948879ebb254f912ecabe",
      "End": "eb1c93d9425a4570903bb9265bee0a00",
      "Id": "650cc71eddee4e198ee28e86ac97a224"
    },
    {
      "Start": "e83aa02eff8948879ebb254f912ecabe",
      "End": "565ba5f708d24381b826d8852da5a07f",
      "Id": "a615f7122f6643238203fee8186f81e3"
    },
    {
      "Start": "13817bdff67943b9886023d2ca71d73e",
      "End": "b71ce4f650e247399145619a09d0e48b",
      "Id": "bafa4cad9f0f43b69deec2e8a3f056b4"
    },
    {
      "Start": "609fffc8c8c745878921548a2b870503",
      "End": "72e99f7fd82a47d78322a3c27ee0217e",
      "Id": "2c085bd9f1024b519f2782eb4c4a08e4"
    },
    {
      "Start": "609fffc8c8c745878921548a2b870503",
      "End": "455cb259f6be462a9bd151f62c6c6868",
      "Id": "a77a94f61cb049fea5ee3b5d37086585"
    },
    {
      "Start": "710b9a4864b74f33b128e2be6c5be7b9",
      "End": "6e299047302040689c11fac96f9c17f0",
      "Id": "e220612c8d3948f2b6f67032bc9e2a82"
    },
    {
      "Start": "226464c1bcc14e3f8cfba6ec328b532f",
      "End": "07cb0ceb35f443beb23b9d4b8826ee0c",
      "Id": "58c5bf360bc7400186c25755d5f185d9"
    },
    {
      "Start": "226464c1bcc14e3f8cfba6ec328b532f",
      "End": "a72f96ebdd904f99b952c5886d6565f5",
      "Id": "7f92029d16ae45fcbe86323e52725b2b"
    },
    {
      "Start": "5a62dfceba0947ada66e28907d0e0e97",
      "End": "57526048f8fb4ab39b6f457079ecb834",
      "Id": "c77d8d20ca554ba69c48f844aa2b158c"
    },
    {
      "Start": "5a62dfceba0947ada66e28907d0e0e97",
      "End": "9ca6481218a24ceba725ccb22954c877",
      "Id": "18ac23b358564183b4b1e3adbc4374fe"
    },
    {
      "Start": "5a62dfceba0947ada66e28907d0e0e97",
      "End": "90e6c5f44a234a9e9c339df14537aab4",
      "Id": "176cb721dd2f40a3b44b57df0bbe70db"
    },
    {
      "Start": "43c5c2bdee1a47afbdc85d6be04bc544",
      "End": "de200480d88743c4a4ee115d33c218f7",
      "Id": "9633a42297d54debbd337b4115e66df6"
    },
    {
      "Start": "43c5c2bdee1a47afbdc85d6be04bc544",
      "End": "f19ee70aab5d4a499e3356c89fa4e090",
      "Id": "7f812aa6658b44739427988883157d6c"
    },
    {
      "Start": "43c5c2bdee1a47afbdc85d6be04bc544",
      "End": "6f35dd127a8d41339173f379497b0620",
      "Id": "7c6033cee441499a8fd56b1e3842c982"
    },
    {
      "Start": "be57ead994ab42ffb70e5837756cb272",
      "End": "6f633c1056e54681b826f1f541aff6da",
      "Id": "50a330f521f14e8b81543faa1667d2de"
    },
    {
      "Start": "be57ead994ab42ffb70e5837756cb272",
      "End": "6fda9889b01f4ec5bda9dee8e000d595",
      "Id": "a8b30d83c0d14a89b9abb36866b529e2"
    },
    {
      "Start": "013cdaf6b3b54094a890a858658106db",
      "End": "877bdbbddfc442e3bd3e6f3fee6dba8b",
      "Id": "698bf77300c44f58a7e03b6c6046ada9"
    },
    {
      "Start": "013cdaf6b3b54094a890a858658106db",
      "End": "3654eb16d1aa4843a52f70938e3119f9",
      "Id": "434abfef1ab94cfe84988767fdc723fb"
    },
    {
      "Start": "5ebe0394eb604a27b36212bc7f77cedb",
      "End": "6f36ead92a984798be6aded022a081f2",
      "Id": "9743fb7e88354c58bed98344ff7fa8fb"
    },
    {
      "Start": "8a903d6d86bb47759b43277eda44b29a",
      "End": "e658c35133794b2aad8e87e3a14fac0d",
      "Id": "b381650911944f8a8c1b4db2acbd5d8b"
    },
    {
      "Start": "8a903d6d86bb47759b43277eda44b29a",
      "End": "83d874fa2e034d6c93c062d1463a27a8",
      "Id": "bf27d3314b634139ae852ea86f7724b5"
    },
    {
      "Start": "2f9f639d7ea94791a428377527bd1365",
      "End": "d3b3dac7eb974cf2a5cf866ae937af77",
      "Id": "5535ee6ad7e94efbb2b8a90499b96c47"
    },
    {
      "Start": "f63933a42ccd4025b177c7b99087db14",
      "End": "faf0c8f4d4b344ebbb9db9ab334be014",
      "Id": "ca19f104eb8c49229151853f228853dd"
    },
    {
      "Start": "3fffb20a44d54e24b60d6434fa219498",
      "End": "5f2ecde008f94aa0ada296672d42af00",
      "Id": "33aeb25f26c74708be6f5b2ef3ee6261"
    },
    {
      "Start": "ac5eab98d76641cb8af98fe5d3cd0dd5",
      "End": "a844a18508434b18bded4dc48ed0e237",
      "Id": "c8aca8fc0cb24f5593d8e90311e047f3"
    },
    {
      "Start": "ac5eab98d76641cb8af98fe5d3cd0dd5",
      "End": "c2b07eb77ded4537b6db6c924e76c948",
      "Id": "9316592ef8264e718e31dcbd3dde48b6"
    },
    {
      "Start": "ac5eab98d76641cb8af98fe5d3cd0dd5",
      "End": "b518cb4d5cfb4bc0aefe9140c5179dc0",
      "Id": "5628fa658fb245ad997ce866ac393e97"
    },
    {
      "Start": "4d655e6442fa46718a06f8befece8991",
      "End": "4f83bee6fc0e48adb5135f8e5aa870fd",
      "Id": "65551872fd7545949661272fee60c8f5"
    },
    {
      "Start": "4d655e6442fa46718a06f8befece8991",
      "End": "9b008adeb4f84704a08ecaea1d4945ee",
      "Id": "5dec82f3c35b4146b1995b495dc62fea"
    },
    {
      "Start": "4d655e6442fa46718a06f8befece8991",
      "End": "b8314e74eb1f4cae9408bbc2ea32bcfe",
      "Id": "906dc6b7a06e4b319e0cb3aefed4170a"
    },
    {
      "Start": "57b7f1e6a7ee4894828fbaea2ffde045",
      "End": "a5dca9e6c5c9411e81cf2b7ad3f21644",
      "Id": "78c4d51e60384d60a8380930597a1e3f"
    },
    {
      "Start": "57b7f1e6a7ee4894828fbaea2ffde045",
      "End": "df1281fc30424cc89c3f1620a6ad2a3a",
      "Id": "9ccde76b58af432e986b127ca416562c"
    },
    {
      "Start": "a5aad5121576486f8a22a78f3206dfc0",
      "End": "34f8034ff8114809b3989a3e227885ee",
      "Id": "907dfd8937024444985269f4e34824d5"
    },
    {
      "Start": "7437218682964255b06abbd639554a8b",
      "End": "1c2dbad638f0497ab240201184adf775",
      "Id": "b4d53628a4f2435c8b27ed40ca56f4f0"
    },
    {
      "Start": "3a6d53e7935842f384cd8c932c930d88",
      "End": "5e1ba27475984eff9af5ab70f9ad1d32",
      "Id": "f9ce86ab705243ca86ea054c7e87575e"
    },
    {
      "Start": "3a6d53e7935842f384cd8c932c930d88",
      "End": "5e1ba27475984eff9af5ab70f9ad1d32",
      "Id": "26652de42f424177978fa0a340cb7bf5"
    },
    {
      "Start": "cd7fdd0a87f54f42a0d10fe796036de7",
      "End": "b7108da49b274feda565612a2909092a",
      "Id": "25ff8e0a58164dc4bb71961956724fdc"
    },
    {
      "Start": "cd7fdd0a87f54f42a0d10fe796036de7",
      "End": "372691207aea4ace8de1fcfdb4148af9",
      "Id": "8a0b636ef3994e18b93ee8e6e0705463"
    },
    {
      "Start": "bc1eb3316b4f4deca84ea24094947753",
      "End": "ad29fded40154ba480f837189e96c076",
      "Id": "d12aa205c0a44115921abec734c86bd2"
    },
    {
      "Start": "bc1eb3316b4f4deca84ea24094947753",
      "End": "1cc9b4c5d7ba4d1ebd9c94b5f91d6067",
      "Id": "1c6115f4974f4e4e82cb1b71828a12a9"
    },
    {
      "Start": "64a20c69198340d5ab793747a5bd3b86",
      "End": "0911700220b84b2b9e143832cb3d4ac8",
      "Id": "4181532ea0e942eaacd983379ec224eb"
    },
    {
      "Start": "c9cd482201384cb5a628ab233952d024",
      "End": "2d90a106a42f4a048416e11f936aef26",
      "Id": "f0e453e9929549d692a559fe56b2fff7"
    },
    {
      "Start": "c3087f9bb46b493193095f9e24f01faa",
      "End": "d32a7ba2941b4e88a774f77c398b62a7",
      "Id": "4380c42639aa4335968543cc6a6e5130"
    },
    {
      "Start": "12e09bfae059407fb4a6552d93ed14bf",
      "End": "87a8959477bd49e79c1b7e6e1b8de782",
      "Id": "148dd10ec7ca4ac692bd21bd5a4cb5b6"
    },
    {
      "Start": "0673c4741c3845998f09efcfb1b352c0",
      "End": "f96ff5bc046849d2bb6514d65a13a078",
      "Id": "e89fd1043f5a4c138bcf95f175c8fd17"
    },
    {
      "Start": "c363adf4559c47c7993a2b764cbccdb5",
      "End": "142dd3d28f7647b8ab2c0dbc0705c991",
      "Id": "40f50bec4b724d84af04a61fc648cf51"
    },
    {
      "Start": "c363adf4559c47c7993a2b764cbccdb5",
      "End": "f1f0f40962614a46a19e4260a6017e62",
      "Id": "d2a39f235b86487491ff5df76850f18e"
    },
    {
      "Start": "ff7856072b274b2689ad0f2af9f71b98",
      "End": "b83eadb49fac411eb9ad0f593142e263",
      "Id": "ae52853d94764199ba9618ef76939c39"
    },
    {
      "Start": "3d7f79038217487c8a6043d54f90275a",
      "End": "73e97c1f23244c9b9ab421807f7d5240",
      "Id": "5e84e24ca74541b8bc10d3dbe6dd5144"
    },
    {
      "Start": "3d7f79038217487c8a6043d54f90275a",
      "End": "6ddaf114edaa413f93c6b81a79cbca69",
      "Id": "7f77caa205b8412db3aac9acb76952db"
    },
    {
      "Start": "5448f28694e5456a8f14c4f3c4af927c",
      "End": "93f11ce2ad1f4afb95e68945e60fa85f",
      "Id": "d347d2410bd949c5afe09fdfcedfa578"
    },
    {
      "Start": "07623120fc3645ebb16fb232abf3e65a",
      "End": "db7cda9353444d87a145dde2ba51b9bc",
      "Id": "449a3e797fd6478194e094e79b44f358"
    },
    {
      "Start": "42a59e151a93423b9e692c9712e9b915",
      "End": "e7a1020009554771b2ab7af2a28e713b",
      "Id": "009e786274e84babbd71c7eab17a31ee"
    },
    {
      "Start": "c207f871dc6b491497dcaf96056541d3",
      "End": "dae0a56c1b54465fad542f96719dc605",
      "Id": "02e56dd208ba4024ab7708bdc8358b3e"
    },
    {
      "Start": "8a8a07a7cd804b94a8bb7106e4e8fff2",
      "End": "8031fc30da7449d4974ac18007281d1a",
      "Id": "4aa80391bd1940a09c8e293a45e4e9d7"
    },
    {
      "Start": "de08db2ff30d4f4fbfaf845a5dc97916",
      "End": "af2628de312546e98c451616ecbf7460",
      "Id": "e802840c3b184d9d9e09da6c195a2b76"
    },
    {
      "Start": "0d49d50db77c4174ba2a508f3634eaf4",
      "End": "8bc72a1befd446e4b2c44f04d3c3b7f6",
      "Id": "38b355c82fb540e18bf1120ea6d058d8"
    },
    {
      "Start": "deccf794f4354992ad5a78a25909ca30",
      "End": "f07b1b31d54849459e0922fdd94b5c16",
      "Id": "34acd33dedd84382a5a6b8eea4dc9e4a"
    },
    {
      "Start": "29047e37223a4537ae473e5073feb7a4",
      "End": "bebaba10b76945a197c5013c9aa7bc20",
      "Id": "849256d2f7214f88a673a0ba78ce717b"
    },
    {
      "Start": "d0a8346acd5147fb9cc11c0b773592f8",
      "End": "f8d864bce26b4c1b99d0334f6c53c88f",
      "Id": "1ccc2e9cc44144ac8eb330232d5d035d"
    },
    {
      "Start": "f36d210b890c42d6968a279899cc12f8",
      "End": "ab5593acd04449a682a2ba2f9414599d",
      "Id": "af38cc8dd1ce46c7afb06c26508c5618"
    },
    {
      "Start": "feb2008ee0b64f759e3c921985a823c8",
      "End": "68a16f08b67d477d966aaa694211b7a5",
      "Id": "a86002c016f34d8e8f3ccb8762c04bc8"
    },
    {
      "Start": "7271138634434171b7ca193011269bd2",
      "End": "9188a4d5ed6847bfaf2af6679b3cd888",
      "Id": "3589dbdaf1974e8b8c0694a9f685da37"
    },
    {
      "Start": "37f730f21c5745c5bba47aca271a234e",
      "End": "01dd619c0e98498994e56bcf3927d256",
      "Id": "d1dcc7775dd04c12b7caaaf2cf6d2e11"
    },
    {
      "Start": "e782c222e7a04e2c9f1f01b3bf90e7c2",
      "End": "f8388c2119b742d5a97f346574fc6110",
      "Id": "bff767a80a2c4fc8a75ff2738ef0c5f0"
    },
    {
      "Start": "8129d2064fa14e8086d4a289e809fa58",
      "End": "028362c6d26f49e3a32d5280b6c24c13",
      "Id": "1fb123356e784837b15c0d9ac30a6881"
    },
    {
      "Start": "6fd71f766ee045ff8ab68dcda3b0b5eb",
      "End": "a6badd571d44462caebd2adab648616f",
      "Id": "95ed85fe92a74505b0712339ce732e39"
    },
    {
      "Start": "dc35ef4996684da9abf319f6a66e400b",
      "End": "35eaa65516594d9da48e68840e4dffdd",
      "Id": "738d27201274485ab825f4b91d487245"
    },
    {
      "Start": "dc35ef4996684da9abf319f6a66e400b",
      "End": "e95a7092a5a24fd3bf1d82060bd0442d",
      "Id": "11178d218bfc48ffa69481197c6386a0"
    },
    {
      "Start": "8f8725272e2c40099d08474bf2660055",
      "End": "bcf19578e3f44c2b8570c140ef7c1b98",
      "Id": "832c8a76621e4f5e99e8ff59d8c331dc"
    },
    {
      "Start": "3ad8a54001db4e1d89363486137ace86",
      "End": "117ce0a1c16e4f54a4c922999700d3c7",
      "Id": "039b3030ce744b7fb7c3a6128010b325"
    },
    {
      "Start": "aad4390d84674cf5a295a7342de2f899",
      "End": "d1a8e373340f40e99cc039cf18a05400",
      "Id": "4372fc0c807c4044a428b1bc803d1fea"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "3566f67e4bc7478ebe306aafc8a7c7b5",
      "Id": "c254952e10fc4f57acab9703b7641ec0"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "2a722f6f1b4949b8b2857cbb57384325",
      "Id": "a036c770f1564d41a39c1c2bfeb8de69"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "d662f6eac0fb43b29e119bdd5179d198",
      "Id": "73c7073bb8054db6b59a7e6bcdc7c085"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "948cdb0feef646e6aded35d606e15d2b",
      "Id": "3ce47df166664231b68e91590eb0c414"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "4b3e016bc47a477fa8dab8b591a35ae6",
      "Id": "cce2358c6afd4dec85c4e862dcfc1916"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "ffc493b502a8463d820805548a3d0676",
      "Id": "8fe0ee68616f4f6b84ac9a68a55640ad"
    },
    {
      "Start": "85d2c57c5a3c4a36909326c9fa7ca4e2",
      "End": "092b8cb9a47345a4b4d6b69dcc1bd51d",
      "Id": "90a4ed0633c64189bd59a29dcc3cc257"
    },
    {
      "Start": "3b0072e9a011469287493465b54772ba",
      "End": "89b33a70fac44ef096c02559aaf02e60",
      "Id": "5bd3ed23e5604c03a815c64c316ce65a"
    },
    {
      "Start": "9a71ef2bdce444a8b5ee2b6c381bd64b",
      "End": "6742e86c542c4a5a980999157b7999c0",
      "Id": "a0e6251f0a0a4ecfad5dce9b4b8e6962"
    },
    {
      "Start": "9a71ef2bdce444a8b5ee2b6c381bd64b",
      "End": "b4cd5e37979b493cb6d4a4d59003c834",
      "Id": "2f689dd6c2bc4ca88491278c71921cbc"
    },
    {
      "Start": "9a71ef2bdce444a8b5ee2b6c381bd64b",
      "End": "6a50ded35c264e469ea38621c87aa227",
      "Id": "742ae662b0ca4d649b07f04bcad72bcb"
    },
    {
      "Start": "9a71ef2bdce444a8b5ee2b6c381bd64b",
      "End": "4e886e247d98407a92936bf18b9e5dd0",
      "Id": "d75969a99ffd4fc68bba1f6abe327f4c"
    },
    {
      "Start": "867f0ba3cd884439b6241294d72a1a6e",
      "End": "073f39978171401a84906ef83c1bca46",
      "Id": "c8df3731d97b4cc29bb0f98e5f6c51f3"
    },
    {
      "Start": "32d342dbe9a640199dede5b1fcce8e54",
      "End": "e278e594df3e475d89f9ca6798061b16",
      "Id": "9758112cd9f04146835f2beebc0c5cab"
    },
    {
      "Start": "b13e628504cc44f196945287537b8c6b",
      "End": "ea0f2d18e2d44190a6bd841bee8146e5",
      "Id": "3422f2f2ba6845118740c05e2ca667a6"
    },
    {
      "Start": "dabbb2acba124e76a47f41dc20258c72",
      "End": "27c40503cf8e4258abaf63b53e7aba73",
      "Id": "6fee94e59d94472ca74098fccd4f5039"
    },
    {
      "Start": "4d0060f07cd9468c834af98712d2be6b",
      "End": "0d6988b25aa64b36b7a272ba1f8c8e6a",
      "Id": "27cea6b0150d48f8b14ebebf62e32ba3"
    },
    {
      "Start": "4d0060f07cd9468c834af98712d2be6b",
      "End": "f8ecbf546f1249f2b0bd913d98318fe7",
      "Id": "8dbf843c25f84b05a90ed54769d9b498"
    },
    {
      "Start": "47e1e9b769cf447f8e98f38cd84efdc7",
      "End": "81375dee9031459f9e57bb280c5c49a8",
      "Id": "32bfa84714b84073b8677aa3117db9d3"
    },
    {
      "Start": "8b8b347a3eb84f6bbfc684d0f3792d91",
      "End": "52a055bb5848442684b54f80b54e6cc3",
      "Id": "464c96c1790143c7b787cd2887440e87"
    },
    {
      "Start": "8b8b347a3eb84f6bbfc684d0f3792d91",
      "End": "1e28caf9ee0a4a3289ced49db8b11ea7",
      "Id": "65b98f92b5f54fca83327dda5096992d"
    },
    {
      "Start": "8b8b347a3eb84f6bbfc684d0f3792d91",
      "End": "e3b38d14c1f547c1ae940a94275e467b",
      "Id": "9ccef7cd65b248a3a7e6a672f5d06190"
    },
    {
      "Start": "8b8b347a3eb84f6bbfc684d0f3792d91",
      "End": "bdc0cff639f044a099ce39b8c842bb22",
      "Id": "b9bd94ff799a4e55beb8e68f1cd50031"
    },
    {
      "Start": "8b8b347a3eb84f6bbfc684d0f3792d91",
      "End": "674d05fa427a456dbf0326a3c58dd5a7",
      "Id": "30b49ab4577845bb9fc485cecf708b89"
    },
    {
      "Start": "bc009466edaf4608b1c59c3824898fa3",
      "End": "f575fc37d7644cb1952ad8d30bb04ded",
      "Id": "d867d60bbc5048f5b4f1918e46c5fb98"
    },
    {
      "Start": "5a9b0150b3df472ba55870231f7a90b5",
      "End": "0ff446391b844fec8f141fb7b2acbc62",
      "Id": "8b72beea474c4099ad5a49b0aba46044"
    },
    {
      "Start": "3be59af2d8e040038b500858a38d4e93",
      "End": "3837a977810b4ea8b3d7b9185685c6e3",
      "Id": "84d641641aaa4691ab074051943dde65"
    },
    {
      "Start": "9d9b4e2b43c5459cab23238cfe9b2d29",
      "End": "e415aef5bfd841799651483705fb0ef6",
      "Id": "2c764b02f34e4261aeb00ba995731eda"
    },
    {
      "Start": "c35264e534144e3fb64f3038c2e630ad",
      "End": "50957df5508642c998d632db2a0697dc",
      "Id": "c86cdc2a8e1c4445bce7fad22e527b75"
    },
    {
      "Start": "25dc5ce37a2346029bce065c666ccff8",
      "End": "4ce6bf87f0314091b07afc27cbb2aec8",
      "Id": "b183c3c2ff444465942ef9df97f46fd7"
    },
    {
      "Start": "5ceb690a783342a2b88fa69f8e7cdfe9",
      "End": "3d928220209248cd98266f9b865a5995",
      "Id": "b9c63ac4035446979c59eb61405fbd8b"
    },
    {
      "Start": "5ceb690a783342a2b88fa69f8e7cdfe9",
      "End": "e4ab4e0ded584b06ae0ece9307407f29",
      "Id": "234aed9a52844bb09b6d831fc65e2c55"
    },
    {
      "Start": "72a8cf065d8c4d39adf082e172e8f2d5",
      "End": "2fd037ff7ff142a3934291964f073e6b",
      "Id": "0562c127a32f4937810da5095d3b0024"
    },
    {
      "Start": "584ec42fa109465d96558f29a6c0e07f",
      "End": "89bd83dd02ff412eab156f3c46c021ad",
      "Id": "8862cbe826dc4ee4a043a50b98e0c1cd"
    },
    {
      "Start": "b8c936279d0c4621be4c07a9100a5777",
      "End": "d729791628fd4f3195820171738a845c",
      "Id": "bd6956c13bcb49a9a72224e4c61fd244"
    },
    {
      "Start": "e70f4aa4fb24467b87743bc6dfc9f47d",
      "End": "a3790ac502bf4766a9777857493d0fa5",
      "Id": "6bd52a4a1d284d22a06e2199027b62b5"
    },
    {
      "Start": "e70f4aa4fb24467b87743bc6dfc9f47d",
      "End": "3db3398b011d462fb30f9403e46371c2",
      "Id": "016381b01a3d42a49b30ec1fbe382933"
    },
    {
      "Start": "2ec00916b328480f8dc1470432a1b8f9",
      "End": "af7223971fbd4d3f9e51a2bb7bda2f53",
      "Id": "ba3c4372f94e4bcaa0c4ba2b4a16f4b7"
    },
    {
      "Start": "2ec00916b328480f8dc1470432a1b8f9",
      "End": "b52cc0042cd6468d9315692077eb5b3a",
      "Id": "d8703a7bdec946ef81cdc6758a22fdf0"
    },
    {
      "Start": "1f09791691b64b54b725749baf5bb37b",
      "End": "b9d84df946744523b624547c058b28a1",
      "Id": "27812ff071b94f308c76b151a0756a33"
    },
    {
      "Start": "1f09791691b64b54b725749baf5bb37b",
      "End": "072a74ab05624f08bea5f22c7611fbc4",
      "Id": "eb644d05def242749b870d18558ebc20"
    },
    {
      "Start": "1f09791691b64b54b725749baf5bb37b",
      "End": "288c8850598d4065af1deb07fce46ecd",
      "Id": "fe32902be75e405f8b87312b29ee87c7"
    },
    {
      "Start": "1f09791691b64b54b725749baf5bb37b",
      "End": "fa4f93cbe77e41de907ded39c09c6304",
      "Id": "f1a120b8956b4ecda7dcb5b29fc65977"
    },
    {
      "Start": "5ac0d0379f8e45728a4df83573edd603",
      "End": "48811369e99e4a6887dffb2ea3351126",
      "Id": "d8aa89cb48674d3eb75fafb549bb7586"
    },
    {
      "Start": "5ac0d0379f8e45728a4df83573edd603",
      "End": "0ba199787f3b4bf5832954bd408a7b96",
      "Id": "74109022255f4437ac184f5495514cb8"
    },
    {
      "Start": "a03a4cfcc4b8470ba3a0f1c2c342d1cc",
      "End": "fa1d9c6e392c4667bacf7adc6c269094",
      "Id": "30217189586f49c6b5b2f103dcac8ed4"
    },
    {
      "Start": "e5ba3598954d4bc09a15387b3afcfe31",
      "End": "35b954b5b2bb450f892670fc0e63d3fa",
      "Id": "a8cdaef9387942f99e664c30b738876e"
    },
    {
      "Start": "689c072dbc5a4affbdbaf4f1641c11d0",
      "End": "d613aa72489449aa8e525b345650c418",
      "Id": "485bbe4ad65b414cb2bbf9237d669da3"
    },
    {
      "Start": "374310f97ec14f9fa64d79519890c1e5",
      "End": "34b99f17535546b8aac0973a0f4c144d",
      "Id": "9b264aefbdb14ee591d6a46ed52d773b"
    },
    {
      "Start": "6858b64688ed4cceaeb670c24ce199cf",
      "End": "cf615775d1124e22a5f3323dd0b706bb",
      "Id": "5f2e8d09a8394497bc2a7043648841fa"
    },
    {
      "Start": "7c77466eb81244bc98569150d0c32a26",
      "End": "db0bb9817cd149ae960d2fe513fecc79",
      "Id": "0f49801cd78b477abf8ea032eaca5f90"
    },
    {
      "Start": "9953f8db2eec47da80bcfa7a1ffd7ad7",
      "End": "582527b513624129a3b12c18ab75eb10",
      "Id": "85def4c56d8d4dd39b0fe191e21e6c97"
    },
    {
      "Start": "1db5532e791f4875afc1e4ffb2cf5d74",
      "End": "28363f6bf7f2472d9291b8d7718fe312",
      "Id": "d8c308525be041b1a4703aedb945b5f8"
    },
    {
      "Start": "1db5532e791f4875afc1e4ffb2cf5d74",
      "End": "f29c6fb54d9c493d8a7c7f18220ae563",
      "Id": "547efea06d2d4f708e03248dcc40b7af"
    },
    {
      "Start": "d1127da2a9864e9a9a51d1b7b581221d",
      "End": "584e33b3e0d1453c875a5e5ba8a2bd3a",
      "Id": "701a5b3f19b948b2a4ac0dac958e6061"
    },
    {
      "Start": "76e16b578eb34f8e8fe0b3d1c9b95d77",
      "End": "db444efa68204c35af2734d476e0d141",
      "Id": "89952040d632456ba6517f98ad60566b"
    },
    {
      "Start": "b9c2ccbf384f496da3eedbd17dcae4a6",
      "End": "ff45eb00c00d417497fe2b6ba77e33be",
      "Id": "fa50bb62d89149499cc9b9f956bfdcc2"
    },
    {
      "Start": "19a3a4c1a45644ce9a3c71c6a1215ed0",
      "End": "507906924f1f49feb5057b4d02ce9f78",
      "Id": "2493d230e4934f5f9480a1d3e0702aca"
    },
    {
      "Start": "d8d8c3db05464e7cbff03247af753e6c",
      "End": "fc9b314b4f0d46e885de06831757cec1",
      "Id": "93346b1f544c4bcf8ff68a69c12c7255"
    },
    {
      "Start": "2514b1be713c4874b7ce34686b87bfc5",
      "End": "6696ce8a240b4478877da5f81641a48f",
      "Id": "5284d8c0c1a04b33a107efb8ae73b9f6"
    },
    {
      "Start": "c623db0b9c024a26b8a2855d8fe24960",
      "End": "3c5c48d5eb2b4c00a0fb2125fb5cbcab",
      "Id": "116bf89e165541828827f338f22f0fd4"
    },
    {
      "Start": "2de306e3e98349cd96e713683e14e9e8",
      "End": "89f51187a09d4d35b0d5052b680374d1",
      "Id": "149373f6b5d64324ace496e4d30d7d38"
    },
    {
      "Start": "b60ce6ae027b4faa8cc9e3a3f8564e97",
      "End": "8e87beb13d244e859c26dec8bd4687a1",
      "Id": "a22eb97874564bfbae7cfb7a585ac2de"
    },
    {
      "Start": "627aa14c4d764126964b97677cb92705",
      "End": "ca5b7a94c87d4825a4d7b6d52569a286",
      "Id": "fca56eb2ad3e485e99c6b15239f50ecd"
    },
    {
      "Start": "b432753864964eee95974bd571daa1d0",
      "End": "8dcb8f6d8edf4dec888bba96bb711a4d",
      "Id": "bf807e0d0874453dba9680751f584261"
    },
    {
      "Start": "b432753864964eee95974bd571daa1d0",
      "End": "faea1e1557884f58ae82fb82f9681b02",
      "Id": "198594547a6545d8ba092fb9a5206f01"
    },
    {
      "Start": "b432753864964eee95974bd571daa1d0",
      "End": "c30605bd61e94ab49d78c18022b105b5",
      "Id": "ea8af020e3e64c6fbcf88c49f7476698"
    },
    {
      "Start": "b432753864964eee95974bd571daa1d0",
      "End": "0600fa38f0694a2c95a08edcefae68b2",
      "Id": "ba8ef3b9ad814b30b4477a0bb6832e52"
    },
    {
      "Start": "d133fdfc371c4c9394e3b10d50d6b8f3",
      "End": "06ed1a39f3e74fec821893d04006d1ce",
      "Id": "c388eafed90b427285b427d1a40ad0ce"
    },
    {
      "Start": "cc98e0bbb61040e29149e91f20c19502",
      "End": "c5d8550df60f4371bb565d40b0173c2d",
      "Id": "2502d7ac4e3244c98545c35fb6aab052"
    },
    {
      "Start": "cc98e0bbb61040e29149e91f20c19502",
      "End": "5cdca0f3a09b4c998a664d3af58c704a",
      "Id": "202bab36495843f382a55e6f589a67d5"
    },
    {
      "Start": "cc98e0bbb61040e29149e91f20c19502",
      "End": "96a4c4be548f43f39f06b603a17bce18",
      "Id": "3a5747f740fe440e86c33330d05d551e"
    },
    {
      "Start": "c6c011486c9a47de9176043a3ccf7078",
      "End": "66f584f20a9b4607b7d0279bf3a3fa6a",
      "Id": "136f12637a7e444ebd922bbb1e53400e"
    },
    {
      "Start": "c6c011486c9a47de9176043a3ccf7078",
      "End": "2e21c12acb3d4a7c80706025a518c854",
      "Id": "2618f4a44d7f4e59bc3f6993b0cf8580"
    },
    {
      "Start": "c6c011486c9a47de9176043a3ccf7078",
      "End": "4d764a541d764c3fbd470a9c806d41ee",
      "Id": "c4bb7529cce84f53b48fd2948a22e1c7"
    },
    {
      "Start": "d39b260f213b49bb90b5b857fb8e0d85",
      "End": "e8e77a8c04664cfa80d462b5d44d81d3",
      "Id": "7dd8c31e582a448ba405e070e15f4b59"
    },
    {
      "Start": "d39b260f213b49bb90b5b857fb8e0d85",
      "End": "b402ee96f2894651ab54d1d592d027a2",
      "Id": "f58614621ad1415c92be5a826c267658"
    },
    {
      "Start": "67b1080f32094b039050d7db291396e5",
      "End": "57224162b2394fcba183cef80aa95628",
      "Id": "915b7fd8b58c4405ad19a75a6483c8c6"
    },
    {
      "Start": "67b1080f32094b039050d7db291396e5",
      "End": "fd01fef27970441488bc4a88fc5a72c5",
      "Id": "4b835fc51d4a4c98ac76a0e163d76569"
    },
    {
      "Start": "4c5f544d05924a6cb392b3383f19992d",
      "End": "576cee7d519344fb9866929f6483bf85",
      "Id": "611750841d0443ed9017423e33e699db"
    },
    {
      "Start": "4c5f544d05924a6cb392b3383f19992d",
      "End": "20f19657f4a940b29d62d6afd4d9b310",
      "Id": "d6ee4a4fb7954c529c921ca023238d21"
    },
    {
      "Start": "7662a0f68bef4321970ac257fd545fa5",
      "End": "bc615b0dd4a7427faa10aedd7796726b",
      "Id": "f04aefa328dc49ec931d83003e7cce95"
    },
    {
      "Start": "76d7c2d4ff5f4ef0a37850431fd98c7e",
      "End": "de5dd971e2164b26b8d192bb6886c19f",
      "Id": "6c1f5fc3c7b44b1eaa180b3d4b87df63"
    },
    {
      "Start": "3e6fa7b0054849f9b4df6485a203632a",
      "End": "03940896be7b4b55836f234cebadb371",
      "Id": "464cc3e973604210a5859aa12b49169a"
    },
    {
      "Start": "ecaa5260328e47cc901e025a48276b61",
      "End": "4930026939464a0899eb5102d73b1b7f",
      "Id": "b4614a5d06314c1d94c6265b2f952360"
    },
    {
      "Start": "8d7d1fd0b5624d66b86151a6274897e9",
      "End": "bc5a3a73282240b39e201b8ce2569bb7",
      "Id": "fb4cc754bf974cd887de33cee45ad460"
    },
    {
      "Start": "c15c850afff349239f22a2e8c571535a",
      "End": "52be9a9936b74f46a64e6a23c041245d",
      "Id": "70d7089c6490450b8f2c63a53c24c580"
    },
    {
      "Start": "8c4b5523b8c244e0b67f7ed4abefc83d",
      "End": "70844180f69e474392e95f3ebb0242a1",
      "Id": "3046145315684d3cb6286dabd5a30dc7"
    },
    {
      "Start": "f283acbfeb0e480da373548d1c9e2d77",
      "End": "e5a97abf8b934c6baf2c67db168063ff",
      "Id": "65ccdbc205074317968285c7331d3ff4"
    },
    {
      "Start": "cc9c669c562a4d53a145b1299f8e0504",
      "End": "e981f6682a6841168ef03391d804da03",
      "Id": "96c7d5b6d9cb438ca2f074661f4b7e24"
    },
    {
      "Start": "133372ca068242fcb641c6701e53073e",
      "End": "62f3cdd26a7b400388044bd0ea19a7d6",
      "Id": "55496ca9f0664e6ca227702f770f6cfe"
    },
    {
      "Start": "19d7875ba3b3467c8426e9cf0f8e7e42",
      "End": "9dd98a9cb70641459e638f3850a8c683",
      "Id": "6cc3c4ad45f04fa98dcfd1a53e739b30"
    },
    {
      "Start": "b1f1c1ba8c5848f6b6b4b7b3f2e030d0",
      "End": "21fb43c787f54147b920e68648a7dc3a",
      "Id": "36b3b5a8054b4c999d766297ff6002bb"
    },
    {
      "Start": "b1f1c1ba8c5848f6b6b4b7b3f2e030d0",
      "End": "ac1b310dc7804e27862deee35a8c67ac",
      "Id": "d99128495f7745b8a8e1f16eaeb4857c"
    },
    {
      "Start": "b1f1c1ba8c5848f6b6b4b7b3f2e030d0",
      "End": "778c18e0a429415ebf3d6e65ccf13148",
      "Id": "334242a44e2743db8215f83219399a88"
    },
    {
      "Start": "b1f1c1ba8c5848f6b6b4b7b3f2e030d0",
      "End": "97f7067c626f44158ca35dd6a6cd51a4",
      "Id": "a6d8ed86162945b79c571628b5220d8d"
    },
    {
      "Start": "b85a3903acd74ced8b3d7d669ef511aa",
      "End": "fdd06ca07a004ca9b8a16bdb06ef7693",
      "Id": "74c1d5dde8124a64a707ca3181f83fcf"
    },
    {
      "Start": "ce977202d59c48cea1fbf207f052cabc",
      "End": "8770d116d19d47a6bc159275125c38a8",
      "Id": "97f34d85717e44da95319e7e2538774e"
    },
    {
      "Start": "428c4679a2a24ab9afff3aa2d9660700",
      "End": "fc0e946bef40483384db54e6fec62472",
      "Id": "0b7f1fdda6d7464194fdffda4ef53152"
    },
    {
      "Start": "428c4679a2a24ab9afff3aa2d9660700",
      "End": "2b9aecfa97a840d686000a247fe0a20f",
      "Id": "034c8d844623489183bea73bf618c36d"
    },
    {
      "Start": "3caedf20be3a4b6ab83402f60e0e280b",
      "End": "ae4ec558a8d44c76bc5a7e0b667cf067",
      "Id": "9a7af6c072364eb498612593bed8cc81"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "83d40def04d04f1b8dd02ab9b1d878a6",
      "Id": "0217b5b1c4d1446485dcfe3534951aba"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "dad5e5af023943a68b23ade80d50f9cf",
      "Id": "ff96464d8d0b46b197729739e5ad7e4d"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "58642c84aee54971b0f0c581358c5210",
      "Id": "7989dd6edcbe476e89a90dbb15705887"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "709957549068494984bfdd395ab004b8",
      "Id": "86c94862836f4ed28e1397effb098bc1"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "1f3a7155aa4e4af490b93b2b7549e2e9",
      "Id": "495fc5da7298441db60b3f11ddfa122b"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "ddfc2dd9851c48d796b77c9de9934b23",
      "Id": "61694f67053049bb9eeded30628b966a"
    },
    {
      "Start": "eea1e185e5da4f508a433526c0f788ed",
      "End": "9fa6133fb2fa46079f6a86ab97634b3e",
      "Id": "c90377b3e21a4a548c022575cc86ebb1"
    },
    {
      "Start": "446034b50bce425aad95b402c8233a96",
      "End": "ef534ee2c9394f8490df7df7d4a0cded",
      "Id": "658debe521814838a276c96e27a5c70a"
    },
    {
      "Start": "ed35b906ad574d6681990fff82827010",
      "End": "4a5f12061de9434982193af886f133bc",
      "Id": "10cab3676d164b888bea9e48863eb42a"
    },
    {
      "Start": "cf3c282ccd654a34808e1f3636e2db93",
      "End": "573d8f28532444e99eed1d3435786bf5",
      "Id": "28f9880d22794bb78f1ec75eaeb225d6"
    },
    {
      "Start": "f932e682a2584f9d9974653346230a77",
      "End": "19a1e0faeba54f3c94be1f2c41b2a804",
      "Id": "fa1a1f4dfe764fbd996678b51410edad"
    },
    {
      "Start": "dcc3ce8a0d6b47998c9776f2af4e1699",
      "End": "67ed09a7f0324df18fe688fcebd6802c",
      "Id": "fa0c3037601d493d9f914888e5781b0b"
    },
    {
      "Start": "f41cb9f4b70341268862c94cc081fe19",
      "End": "26a6dabba3f749728cc23d6cd16bb9d2",
      "Id": "79924eee6a1a44bcb075e29bee2eca53"
    },
    {
      "Start": "c9700dd7675e4bd28a6b22b85150d0dc",
      "End": "20a846b558ec40398598cf0fc55bf43e",
      "Id": "8adca64186534981ad0b5f007c9836f5"
    },
    {
      "Start": "ca5ede3005ae43aaa4ddc3fb997faf4f",
      "End": "86132157f2574e91b219d9ff3d11250d",
      "Id": "d5cbb23099b644978dace4c308711dcb"
    },
    {
      "Start": "6f56d43570094c628bce9365eb0f5830",
      "End": "9f04aa34a9154fc0b61d293ad92cbd72",
      "Id": "a065f820327f4ed1a38c2961210e575f"
    },
    {
      "Start": "99d59f4e6ac6458a8791bc035f747a30",
      "End": "46d0e07893d4403083fe56d623da6874",
      "Id": "e08054770a0045b4a72be78ead786830"
    },
    {
      "Start": "33a50e55134b4a4298d38ad15eb4dd7a",
      "End": "e02656ea537a41dc91d9e9c1c63eac46",
      "Id": "5f4816c24fac49ebb184e50ce68b700f"
    },
    {
      "Start": "232332e59d3c4db9921ecffd7b825e2c",
      "End": "2415c7caf285477a9e4317f2f2afe0b6",
      "Id": "598f7ddccde9459880d13d30d9b35bbb"
    },
    {
      "Start": "242de6e1bdae419c803332503be2884b",
      "End": "f38ff907794a41319b79f130aacd90da",
      "Id": "9ce5c2fbb7c24b0c84a41d829837b993"
    },
    {
      "Start": "ae1449141d2442e1a992ae95daf23af6",
      "End": "7a19878bc20e4107805dbda4f4274222",
      "Id": "82c359c48c9c468b8f1cde3363476f0e"
    },
    {
      "Start": "1fa948eab2b041f9906d755139afa0fc",
      "End": "d8474039eccb475bb6ec09a8412ee98f",
      "Id": "8602b134bcd1426e9c204ed622020dfe"
    },
    {
      "Start": "2cfa19a162574464b1aedf09beba9114",
      "End": "4de562e9725544d9a89d92d4a2a1152c",
      "Id": "d1443a403a874b6583f474cf65b3d134"
    },
    {
      "Start": "555d58cff1a342b6b71bd9168f03768d",
      "End": "cf010a443b984e92a61883a216fb8f6b",
      "Id": "26c00a840cea436f83590e6079125a6b"
    },
    {
      "Start": "0655da26209b4368964cd6007b8dde1f",
      "End": "237cf34af85c401d889afeec673d01f7",
      "Id": "c1f59c899ff44ba9859fd27537984f55"
    },
    {
      "Start": "66deb570c0924b48b5cb295d35e66199",
      "End": "dfff8a2bd61c49b3b9777b364ffdff30",
      "Id": "501df8490c8b40dcb3336c0f83fb6858"
    },
    {
      "Start": "0b713886de284b4b8a5bc3d08bc470f1",
      "End": "a44d664c22bf40aa8d487dfce9b68929",
      "Id": "6ef8d602f4544769aebc1d09b64a1467"
    },
    {
      "Start": "a08fcd3bdea84830a245393a000c1aaa",
      "End": "59c4682168d34e4ea675e58eaee9a7ff",
      "Id": "40008b2b564a4f61ae133d28dc1d5d37"
    },
    {
      "Start": "f7cd3055dda3488caa6a2900cafb0533",
      "End": "81f45657eb7a472c819dfe48a2b2920b",
      "Id": "146145b812fa49f2aea9e1943c3eefde"
    },
    {
      "Start": "702686503f7c4f728aacc4777a9d28ce",
      "End": "ded258b56b6a4ad8a438f170a6311671",
      "Id": "f9a3448b0779463d8bc48a3fe2ecb15b"
    },
    {
      "Start": "702686503f7c4f728aacc4777a9d28ce",
      "End": "b8bdc5dda6c849f8b51909707c393f13",
      "Id": "d987c43b18e34504b2b0f6b12c553a6b"
    },
    {
      "Start": "17d684a02d9d402c8f575c02868620a1",
      "End": "75c196994cb14ce9a67cb0ec44255670",
      "Id": "b7af6671d84e484aa38bdcbd40f48ac7"
    },
    {
      "Start": "33cfd82878d545ff91cd85f1facf60b9",
      "End": "4ba37fe78f0c4a48a56cd087027beb90",
      "Id": "f9db1e3476bd41e1818097eaed04834d"
    },
    {
      "Start": "467c1e9db94f446f9b1a2d25c50ac3e5",
      "End": "1e39061d39f2483ea7156a3827163320",
      "Id": "43fc1b47b117447586193f2abeaeeed2"
    },
    {
      "Start": "d2ec9e89bdc948f2b2c508e37c33033e",
      "End": "f1d3b56549f94b919a4ce0d9cc0bd944",
      "Id": "089941b1beee4130b53aabf3b2de2f6e"
    },
    {
      "Start": "602a13b86dd3472bb0154e04045a3326",
      "End": "33976f7bfd2e4f0cbdb16efc343a1d30",
      "Id": "0d75e3abaf454d51a80a37eb3b4c7afe"
    },
    {
      "Start": "db07bc5af3144608836fc8bf1bb3e1cc",
      "End": "db19cb289a0942c69989ea4e7d8ada95",
      "Id": "49336b2c13e04598bf21ede9d9e34848"
    },
    {
      "Start": "7312b956eeea4968893823364ff8cdad",
      "End": "ac7737caede4433db3ce34c3b7e60acf",
      "Id": "eb746b06cc7e4f0791d4a9dff4cebf06"
    },
    {
      "Start": "8959e5b866404da6b5c70f168a88fa51",
      "End": "cb73ada838a54536b2dd929cc5420889",
      "Id": "e90a12a35ea1411a9e718b174729c03a"
    },
    {
      "Start": "f68e0361b40b4ebe80b5dfb57eb88492",
      "End": "49a0028fe92240dca644e99b14a87a9d",
      "Id": "c79e2d82ddf74bfa91d4452100516e0a"
    },
    {
      "Start": "e700ef21a1de42119125d98b3543dba6",
      "End": "69fab7b74cfe4f9aa9f20231ae410e90",
      "Id": "cd6cc00f3a55492ca1f68683717240db"
    },
    {
      "Start": "4e60cb9050a74ed285a4d4549bbc2f32",
      "End": "6ee5b9ae860848bbb5ecfe7b0a17e4d9",
      "Id": "a312b5ec33c84578901ed848827dbfbd"
    },
    {
      "Start": "1bd42a37ba9d4fe49e6c727345c984cf",
      "End": "ffc4d0e828894ba0a393a97deb9a50fb",
      "Id": "5ed1ae7012db4987a8c62b266aa3bc96"
    },
    {
      "Start": "92b88fa1b8c74c44a3d779c5cf6f73f0",
      "End": "d6d0e9c434f5459ba79a59e7efd99efe",
      "Id": "cea730e1708a40879fcb44f658f258f9"
    },
    {
      "Start": "cb8c0e22872549568813427ab8ff4196",
      "End": "37da1292a39e4fcba46438005f7ea0b0",
      "Id": "9e3da208428a4de6ad7696394adbca67"
    },
    {
      "Start": "7831da4f94d0472a88e26ba163fc7d91",
      "End": "b410e1b95d0445b2aa335908c2fdb728",
      "Id": "21a8a95f9c1c495f8c7cc9f21f7e504e"
    },
    {
      "Start": "56b6c45f648c41e3a73c7d5f83dfaf57",
      "End": "b2e79ecbd53d40ba9c2be47713988230",
      "Id": "56401b55c2724976bdd1d99734341a53"
    },
    {
      "Start": "84cff7b04f3c4685b0ff3675af745bcf",
      "End": "5ab15836092b47909399f070c907438b",
      "Id": "8aefb810ae8d4b5dbf618de9d2e0671a"
    },
    {
      "Start": "c28296fb86764bc4aa438644d091e08f",
      "End": "5036813961e84c6fbb2c5e4bf18a8bc1",
      "Id": "ae7832ea12ac47228730400c821439b4"
    },
    {
      "Start": "8c726e36e4454bd4bac3a1ce0375cc26",
      "End": "3cd9042c7b5244168c6415bf3dbae838",
      "Id": "250f10d439f64840a7240e7ac3c4bef6"
    },
    {
      "Start": "e70f08367bdf4338a2d1beae49c99b7f",
      "End": "89e1adb9dd08412fbdbe68a904bb731b",
      "Id": "0181670a3c0743b8ae9d5b1a60b99c01"
    },
    {
      "Start": "80614c3fac2c4a19bad28df1035e3ab0",
      "End": "d9d9c2261ef54021908bcbd0e14cefd4",
      "Id": "7edf9960c4064330a39460bdbc49e47b"
    },
    {
      "Start": "03bdcee8f74c49659b2627c3708dc731",
      "End": "ebab988983704394bfcdfe3911705297",
      "Id": "c1c4350a585e4702821fd3abf35c5a4e"
    },
    {
      "Start": "a45bb2fb066348bd8bf587ca703126de",
      "End": "5ae7fa4ecb574560a2e655e84d4c7ffb",
      "Id": "e672eb2d510640b79039a86d20448693"
    },
    {
      "Start": "a45bb2fb066348bd8bf587ca703126de",
      "End": "6d9a88e6bce94c5c830638ccf328a2b0",
      "Id": "3213c7b5463b48599089d2916e595229"
    },
    {
      "Start": "a45bb2fb066348bd8bf587ca703126de",
      "End": "9897c1025ad747428d3449a8814d530f",
      "Id": "28138381ccf64c0191fe63a49915f8b9"
    },
    {
      "Start": "30d59ce819ec42beaf1bbdfd12a6fbe6",
      "End": "2fd6a88c4d634b749d786f3123d81dd0",
      "Id": "14833df3261346b4b9f4d7ec784ac226"
    },
    {
      "Start": "fe9176c465eb450ab19ab87bb680b509",
      "End": "8119d8f069494677aafdb0f43b6a8a31",
      "Id": "e5787827eca04355a1b2ce8f21877cee"
    },
    {
      "Start": "fe9176c465eb450ab19ab87bb680b509",
      "End": "3a1dc8305bac4eb79d99ee858e38cfce",
      "Id": "a63ef415167c4116a8b8d619ecdfea23"
    },
    {
      "Start": "83a660763a474345b1cb628dbe466f63",
      "End": "3112badf26034923b51b7bf2b8b2d100",
      "Id": "9b2fcfb632d84e529cdb76626eaaa546"
    },
    {
      "Start": "ea5bda0fb1ab44eea0f52697de93656a",
      "End": "14b8109073034b679261ce87fb668af9",
      "Id": "694a50632e314a498537d052d0a56789"
    },
    {
      "Start": "1a80575e3dcd426580cf3b6997896d6b",
      "End": "d2b6f81ea0ba424391c796cbd6435592",
      "Id": "dc403535fa394761b792d975491c079b"
    },
    {
      "Start": "b4b6a2bf565146b9988016c3f98f80b2",
      "End": "55dc1f9eb75d43f999eab609285e5830",
      "Id": "532b234f5f7042458d0c1975a6425228"
    },
    {
      "Start": "4773caeba6b045e4b4c2cbeca2c82067",
      "End": "1ce232dc99794b9e86a1f9ae3971c88d",
      "Id": "dc9d2073188b47698e0a48dac447249a"
    },
    {
      "Start": "8ea96a3086f741fc8d0da7936b7d73c7",
      "End": "da8ef2d125d84cf6bb2411a5ef944541",
      "Id": "0af1ceeb6bf64ec0bd4a8293cfe5c71c"
    },
    {
      "Start": "f235634fa57341408a255d78ee6f7733",
      "End": "e6e5411b2d5e4fc8826f009fc6cd839c",
      "Id": "b60cbef7de8e4189acc7e7e92e1ef289"
    },
    {
      "Start": "d2fbbc172020487d9d2580d94ed8610d",
      "End": "84ea571beab6422f870bd843ca87e448",
      "Id": "ffaa52222c5b4f6181460f8f3fd167df"
    },
    {
      "Start": "7c38f52e30a144bdb5a0b72c423cd245",
      "End": "01b52c7b5ee246d78e9406158d092dbd",
      "Id": "a062e71bb6604989b846a938b4b44584"
    },
    {
      "Start": "7c38f52e30a144bdb5a0b72c423cd245",
      "End": "719acef5a68a4fc585ae643f8735a249",
      "Id": "ad38ac80de0545aabdc0c2e7df1999d5"
    },
    {
      "Start": "079eaa6817ad4d25a3ea024ef19aeda3",
      "End": "126f5a45546647bb8c81a0fa7fdedf2a",
      "Id": "fddbe8fde8ec417aa43b82ea5ffc9b62"
    },
    {
      "Start": "825538612210483ebc773cc4ba77bebe",
      "End": "a54a33837b1e493f8c2a9d0c5ad871ee",
      "Id": "05439e8c31d0452ab01b70e9caaa5c20"
    },
    {
      "Start": "a8a15601ca844b91bd5a649615afee72",
      "End": "026c587d11974226b7985044fcc5ab61",
      "Id": "5bcdbde0de2649a4b5af0718571386e0"
    },
    {
      "Start": "4f4b0a38ee904cd097a6a62e74fbb68f",
      "End": "ed38655e693c4d37b4c379901ab2e6ac",
      "Id": "f426885b50ac493182ef059aa7a7ed70"
    },
    {
      "Start": "4f4b0a38ee904cd097a6a62e74fbb68f",
      "End": "37a1778a3d7347b09ff307a6596cc739",
      "Id": "f42a38f078a9485c9cc2422d7070e6e3"
    },
    {
      "Start": "4aeee16a41e44fb987e26e02ad02fb9f",
      "End": "4ea6d768caeb4ab8a6ca6e015649ca5b",
      "Id": "bb4343ebfac4420886d73d912ddd9f6d"
    },
    {
      "Start": "9509f3b5b29b4a6aaedca4c8b1cc4470",
      "End": "30f1d20f744d41f887f9f3d22f4c5f4e",
      "Id": "b9f650bc73af4732b2b02d9415600d02"
    },
    {
      "Start": "8da9ebc155c145a9b1460aa8adba41fd",
      "End": "f5b8b5825bb942cc91bf1e13b9b05ea2",
      "Id": "ee9ac4b96d134304afd748318e5d5332"
    },
    {
      "Start": "d4d522cbd93f4d96af5b5061e9da496a",
      "End": "39ad45ff86904341afc252fa50c09adc",
      "Id": "c8d6df4dd83b4feeabeab0200653cf7a"
    },
    {
      "Start": "2f766b57ec9d419387e9c66708d6fddb",
      "End": "8531475c8d5f493d911ea771304e461a",
      "Id": "3017950948834d6194993092e0b5f038"
    },
    {
      "Start": "488afb6080544e03abe5bcc538f21645",
      "End": "51db98429c8649fc92d75923994d88a9",
      "Id": "0035c1cf1283440b99ffe2a27c8309c2"
    },
    {
      "Start": "b0ae1ed3959747e588c90a64888ff7a4",
      "End": "389cc7a5af654590bac1e5d16eb8895a",
      "Id": "d86df97612644e55b66fb5389971042c"
    },
    {
      "Start": "b0ae1ed3959747e588c90a64888ff7a4",
      "End": "17d9b3d317e54eb2ba5d33345e1d070d",
      "Id": "6e83f2a81ae64b0a81cf6566ebb7dfff"
    },
    {
      "Start": "0028342d0cd948f4af79f3e61f71b6df",
      "End": "3f50bf65c8894980879bc3b194c7b81a",
      "Id": "7207e689e2cb43e28b2a87bba1422864"
    },
    {
      "Start": "e4877fc6d2ee42c1819fea351fe31b0f",
      "End": "1bfb2453ac8248d69fbc19d5cffd61e7",
      "Id": "e8a283ca09d643ecaa4813d5b749cf28"
    },
    {
      "Start": "1d259c42237148d5879bedf5a12697f4",
      "End": "a5335042bac04d28962fcbcc66d09700",
      "Id": "50020bb2750b44fa85197a754d77e37a"
    },
    {
      "Start": "1d259c42237148d5879bedf5a12697f4",
      "End": "e2befbe6c1794e7f9b38294365f3fedf",
      "Id": "b479a89d163e4d5ca614a1069460f94e"
    },
    {
      "Start": "8bacc1d7e0a640a59a26ba8bc78230ab",
      "End": "fb7146c03a644524b984ce40b5ce7e28",
      "Id": "9916f833abee4623bbff1f28c0690ce5"
    },
    {
      "Start": "7e17ed3241844b98b808d42d5e903dd7",
      "End": "9518330c4c84444caf95a829ef9a6f32",
      "Id": "ab5cb3e5e02f4587bb744f2d9843dd33"
    },
    {
      "Start": "4846084c5e064a85b2e918325baf4393",
      "End": "eedccdf9b5644aee8c7fd45d7bd3f574",
      "Id": "90708ee3d446416b9e9c9cd8fec7f2e8"
    },
    {
      "Start": "4846084c5e064a85b2e918325baf4393",
      "End": "2d6bdc6633724177a34f1b030eea0b80",
      "Id": "b4ffe98dfba147e0a96ac4472076202c"
    },
    {
      "Start": "9e6f92df41404318904655902a1a827e",
      "End": "817ce0684c4d467a879768cb800682b2",
      "Id": "35f47752667d47d0a7ffb78b9e7746ae"
    },
    {
      "Start": "f5b5e75081834cdb9ee51b153355265c",
      "End": "75e679acc73f4a0ebbb8f38f479d6215",
      "Id": "3be79e2c7cd64d0c96c74fd6fe11afba"
    },
    {
      "Start": "4dd6f1c7322c4f2f8f2a8f23ada750d3",
      "End": "51327b1dcfc5435a91e2aae4ad0eb3e6",
      "Id": "ae147952b70c4f77895d8460ebd15882"
    },
    {
      "Start": "f13fbb81ce2f4800818a290df9dc62e6",
      "End": "4d4f23156ce9473aa2df97773689b336",
      "Id": "a868bf453a744f7b9850ef289369fe2d"
    },
    {
      "Start": "f13fbb81ce2f4800818a290df9dc62e6",
      "End": "64bbba265c6f4bb1a6c847e3adacf139",
      "Id": "817d37e82b874b46ab2b52c54d193c36"
    },
    {
      "Start": "f99016fdc0354e72824459f001407675",
      "End": "093c893f06b74da68866ad1a5990c6f4",
      "Id": "e91a26904e354e5fb6c3f5bee42e3107"
    },
    {
      "Start": "f1e65ca67984491298115557a6357d54",
      "End": "99b74f4874994478af8d8066cad9796c",
      "Id": "dc5630acd636492b871bfb2d2419f1bd"
    },
    {
      "Start": "ae68f987e47d45f7b85a3a8a3fd2311b",
      "End": "a08d1ed43f6c47d38d4b65cc577cac50",
      "Id": "ae5dd1ea2a7643f29721cf90a01cfcdd"
    },
    {
      "Start": "ae68f987e47d45f7b85a3a8a3fd2311b",
      "End": "1cf79dce768f48df855161764bd1ca83",
      "Id": "74d8979635024e6db4840281358852df"
    },
    {
      "Start": "9beefc7479084486b007d8098556724a",
      "End": "b67e2b7cb6714b7690585294cb673888",
      "Id": "9636476a527f4aa996cb5db84a73b6be"
    },
    {
      "Start": "731f6674f0044b388546e8556b626285",
      "End": "09b9c4acf26b41b4ad66b94be56f5bde",
      "Id": "63fc13e3289c4e18b5dfaf46b1d5b1a8"
    },
    {
      "Start": "731f6674f0044b388546e8556b626285",
      "End": "974066043bf14b87abcf12199429061c",
      "Id": "baba09b6a7a64b6c92756cd4535586ff"
    },
    {
      "Start": "731f6674f0044b388546e8556b626285",
      "End": "6c051affa9b14d7f8ab01edba4ef2819",
      "Id": "630bac36feb6453e8bf38949b1953d63"
    },
    {
      "Start": "6519b31dfea145fbbfea39be35e2dae4",
      "End": "2ab58a852b4042138daec75883edf2f1",
      "Id": "966f22cf285a4dafa602abcc4d02f427"
    },
    {
      "Start": "3deb60ed0ee444889d94fb068e905adb",
      "End": "3c6786d37c1b46aaafdfd9428dda82a1",
      "Id": "cc80934f95a94b9fbbaa85b7f5b5d1cf"
    },
    {
      "Start": "8b3fd3f5cdb946e2b39013238d8fc54d",
      "End": "0cdbbb1127bd4b899b42e36c938ee87a",
      "Id": "29a9901d3017497aa44cdd4eb1b038e0"
    },
    {
      "Start": "32b1a370a7514498b5aa3152609c8cc4",
      "End": "9f46511e5625471b9a7d24fd12580790",
      "Id": "0e0e36aa76b94dfb8878d3d475218b5d"
    },
    {
      "Start": "e7678c4807454fcc9946351a000d2aa6",
      "End": "94a75d1102cc4a46ba2059ff56ad040d",
      "Id": "233786892f2d4a99a8a2221ecbe811ad"
    },
    {
      "Start": "d603db21663e4f9d9ddc226f2bb7fba1",
      "End": "29ce9d10db414415b843b9c58c5a2fff",
      "Id": "7786919dcc334307840085adbe1112a3"
    },
    {
      "Start": "0281e05b42d740f3bee0dec3fa339e6c",
      "End": "4e9f0618c32e42d1a7d3451c01ecfa50",
      "Id": "e6bc0d2a97234355a9e816dc6a4ec2c4"
    },
    {
      "Start": "80d4a5f2a3e1431e8aa15a1f916a70d3",
      "End": "f3e32ad53bf64d5597de0f067defdce9",
      "Id": "0890cfae62204026bc87b1f008b55647"
    },
    {
      "Start": "b878de81b816498c8765117a9b38f23a",
      "End": "1cfb4885a15948ef99aaa43119794ee3",
      "Id": "d54197e2c75048989e59a6c80f3210b3"
    },
    {
      "Start": "140deeb007c04a2ba0903cabc15b9d10",
      "End": "0cbd395499354c2cbe5da6f0408882f2",
      "Id": "1d8a591d99634467a9a3d5fc1d520736"
    },
    {
      "Start": "21888fab6dec4d1a8be7444e462190c5",
      "End": "ab05c050d759429b8cc3e1c2363a191f",
      "Id": "690b5ec6753c4275845ae1aad088a0b4"
    },
    {
      "Start": "c085dcffad97419882a4ae7e390e65eb",
      "End": "511e607e56ee4942afe212a5618c7178",
      "Id": "96fc9a96774444079b5532974e6a86e5"
    },
    {
      "Start": "9318042d537e468f83dee45415e13e33",
      "End": "197f945ec1b946c4b7bcd83e901fd8ef",
      "Id": "dacf70d789b34ada82cca45b0a684f6a"
    },
    {
      "Start": "891c675ce63c4eab91a31b270113a10d",
      "End": "014415e98f5b4e3095a9f32d79b5e3d1",
      "Id": "5a53ea3659834ff2ae45c5e93cca587c"
    },
    {
      "Start": "a281c7a4870b4081bf1699972043dd6e",
      "End": "f3b6f67733da44e1938bf9fc2d275c4c",
      "Id": "f5bf28c93177480ba4ae920f347bf2d0"
    },
    {
      "Start": "f784e6963c7c4387abb12da2e3ff4dca",
      "End": "70bfcff3156f4e65bcf3852e11b446d3",
      "Id": "6b45bcde82044ac0873a0dcc3b4cac71"
    },
    {
      "Start": "e89093a6b18e413f90bd31360bf9ffce",
      "End": "774bc1dc335b40fd96d08cc0d162899f",
      "Id": "04fa8f5c8d6b4c5d88ed2c1240680704"
    },
    {
      "Start": "6fd6013b708b4cf1a19d75e5287c67f3",
      "End": "283d0818554e43a3b88841ebe590abc4",
      "Id": "db14af2ffead4d60a46a86a7ca474f66"
    },
    {
      "Start": "6fd6013b708b4cf1a19d75e5287c67f3",
      "End": "c89414ab5c7d49308855987bedf6ed5c",
      "Id": "db654cd6372e47a6a2c50ea994d9535f"
    },
    {
      "Start": "c399a66d8ddd4126942734188d17d3fd",
      "End": "fccf980b9631441b8f92963491476adc",
      "Id": "93bf4a2493314c878e837d3691a32238"
    },
    {
      "Start": "a1acd6906254480fa7165695b3860e08",
      "End": "c23061c5680645b9bb0107aac8afc722",
      "Id": "ec90cb480d634b8093a6a03f9e8e0a9b"
    },
    {
      "Start": "8d85125907cb4ab191f71f874db54c1b",
      "End": "bfa0ac3457384fb8888a626842069768",
      "Id": "085cb25072fb4725abe9000a895fb0b0"
    },
    {
      "Start": "446c367803b84ad48d1bbaa3fe0dcd7c",
      "End": "48ad98f0c20e4cb7be555d2c48a7b57d",
      "Id": "37859b39524647b6986fadce727f19a9"
    },
    {
      "Start": "26df7857c29740a2a783daec38a6337a",
      "End": "16cd11b166e64bb2af7c0773dd9bd530",
      "Id": "ed62e7656fbc4d96979a29e3158d30b1"
    },
    {
      "Start": "a196c5e78cfb4b16805dc7a3f5cc1397",
      "End": "2c45c4b3b78f48c39bea188d8cbbf318",
      "Id": "13dc7adf1b014dd486cad94f8e6b56b0"
    },
    {
      "Start": "1a4d646412204bc393adea9886803855",
      "End": "e6588102f0a343e2b18147ba4d9fe1ab",
      "Id": "69b20ac30a044032aec80039ac726e48"
    },
    {
      "Start": "c8e4dccce9e54691842f49b3fa59c027",
      "End": "2407c9ff2f0444e6aa183af71c5d7be3",
      "Id": "da9d38759925473087122a6ba0d7e66c"
    },
    {
      "Start": "a1acceea62624cee8a4b8c79dfe8d0ad",
      "End": "531e0b7755ee4ad892ebfd37f6d5a92d",
      "Id": "356bcb076ff148a79c417fbc932f8f4a"
    },
    {
      "Start": "ca998ef19d0a4d4a86e21a5811c29e4e",
      "End": "290183c3f7fb405eac9cb49f28f09865",
      "Id": "4b9578dd6abf4e918f083583d4003328"
    },
    {
      "Start": "f21ec763056b45d099d24902f44712ff",
      "End": "2a1221172a1243e28182dac14da76852",
      "Id": "c36149f459174cd9a85717cf897e268a"
    },
    {
      "Start": "f21ec763056b45d099d24902f44712ff",
      "End": "311e03047729408b89d9be22f25a374e",
      "Id": "1e31b925838f4e03bf4f74e329c3c5f6"
    },
    {
      "Start": "f190370f841140648edf5d973fb65918",
      "End": "36a86416638c499a9302dc559cfa57fc",
      "Id": "7b0627cdf78d455eba330a4aaa04c196"
    },
    {
      "Start": "94ff58edd5c448fba941091e658095c7",
      "End": "b6f96cb9e8d04b0f8692b7d016edab79",
      "Id": "130e654450194255861a99f684531278"
    },
    {
      "Start": "5913cc3c440a4e539102961dca8b4b8c",
      "End": "cfb56a660b66444e8eed74035b68b59f",
      "Id": "1f6cb7f07c8141f1a4098dc07fa7ffc0"
    },
    {
      "Start": "a7cd69997f324d358a6420a106344c5e",
      "End": "e0eea482eabb421cb14053cc7141ff52",
      "Id": "69dab8dab16e4f2ab34b199cf007baf1"
    },
    {
      "Start": "d4d26afccaa24d35aed3deba412e04fe",
      "End": "52a91b3ff380470ab88f2be02d542527",
      "Id": "a59d805777ea423b9ebba16d503b1e8b"
    },
    {
      "Start": "1e43784c2f774c63ade9d52775d33755",
      "End": "87cf1a283b3447f69507343a46d60f27",
      "Id": "d52fac14b0164e1ba7ecf21092d0e711"
    },
    {
      "Start": "8aeb374425eb44c68c2398f484091672",
      "End": "bbc03208e896470d815c5814662f15f9",
      "Id": "c7d9077c17b148d1a5d3fc240db28dad"
    },
    {
      "Start": "6a13ef7c343143e5b844991e1e653a88",
      "End": "c1dd9b05411142f6af66a2eeca99a0a6",
      "Id": "307462ea89cf4b9db249b138c7150b53"
    },
    {
      "Start": "7df902777db94eb984c46a7a54b0e839",
      "End": "25522ea4247148d284b510bf4701afff",
      "Id": "f3678a8b7d844d1e8970840aa1a12562"
    },
    {
      "Start": "15322567778249de9b7bae9012e8a48a",
      "End": "b4c19b438cb74e3bab937c53c36bd6a1",
      "Id": "26fe93732811446dbfd2f0bf63cb7629"
    },
    {
      "Start": "b1bfe598d118441294247824671a590a",
      "End": "7850a3cf529040fcbe90f39383f9f83d",
      "Id": "4e4bea723661453b9934573c66d485ba"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "f0f3406163574e6e98f6ebc9915ba60c",
      "Id": "320fb311de0349dbaa5fdb8bbe9488b2"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "a331e383f9034c72b79e8986a8adbb9f",
      "Id": "71eaa43bd98b4156b9d38ec734b3038d"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "1dee915527b848fc8fef449a8ba1e912",
      "Id": "f55b5154ace14207bee0bc42e7f08048"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "dcce3013654d420b9761b98246433406",
      "Id": "1540d61292994ddfa3eb2273459534e5"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "250e3858b87c484ba93895b16d639b9c",
      "Id": "688eb134c83845eaa95840a3ed85662d"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "28176a950e704a3082e7673b9d4bb4a5",
      "Id": "24908e593d844035b8c0d482a95e4e0f"
    },
    {
      "Start": "e664001c40b24d48a43ec796dd8543c1",
      "End": "2c3de85206c04dc5ad0a24b21338eb82",
      "Id": "54ae2573f23d4bc58a34687a0e3b87a4"
    },
    {
      "Start": "394c8dd8acee4539b79b9b4aea7ea59a",
      "End": "b3b145047afa4d22b46a412328403d07",
      "Id": "d9ba59ac10e2463691fa9662fef434e9"
    },
    {
      "Start": "0707fb5cdafd405190092e3886781ca6",
      "End": "08d125053fc440b7aaab7e47538e2776",
      "Id": "d63a88d5f87f49398c98ccc1840c89b6"
    },
    {
      "Start": "87a431488323423b8a88ce30d27e2879",
      "End": "2d09fbe30e9143cea7c477640e830950",
      "Id": "89bed8521a5b4e909c855263320b9fed"
    },
    {
      "Start": "9354870a49db475fad6d4947e9883e9f",
      "End": "f0788936dc9a4e3cb9c7666e6b34dcd3",
      "Id": "477e4b18cdee493096891319238ff446"
    },
    {
      "Start": "159af20a09984ae8a679e0f34a7c6d91",
      "End": "744fa7fb82944ce897efa299a39b3c45",
      "Id": "6860fe431806427ea5ed84c5cb496a2a"
    },
    {
      "Start": "159af20a09984ae8a679e0f34a7c6d91",
      "End": "e6089536c49d454a95b99407e55530a2",
      "Id": "c394479cc85541fb9b532dec8570257a"
    },
    {
      "Start": "159af20a09984ae8a679e0f34a7c6d91",
      "End": "aeba33686a0d4d68bbd15a1af4b7c81a",
      "Id": "166dd359933b46cfa435b95f0404692f"
    },
    {
      "Start": "5d6e6a32d6ac477fb98cf492fe4f7c64",
      "End": "d75a6be23f804451a21f3d8451b55d9a",
      "Id": "a1494c27e05140a38b13b0623568ac2b"
    },
    {
      "Start": "5d6e6a32d6ac477fb98cf492fe4f7c64",
      "End": "fb2d990ad11f444b8e20e203957dbc24",
      "Id": "570ce21dfd63472da956d86e02deb67c"
    },
    {
      "Start": "5d6e6a32d6ac477fb98cf492fe4f7c64",
      "End": "5e839aad19194e4abff80f65d459d466",
      "Id": "9cff913e66754e6296380493974cdb8a"
    },
    {
      "Start": "de7a7a262c7948f9894ae1f24423fc05",
      "End": "7979977dd2a946028e7f12d7b7023248",
      "Id": "cb8a52792a0640cda7ddcd2d6dfa5c57"
    },
    {
      "Start": "0e441caf4f9242d4980175e502a411e9",
      "End": "33630ccae1a04f03908e420e6a1ab313",
      "Id": "adac207e50e643f8a03e20e7934f5d3e"
    },
    {
      "Start": "8a847e01b7fe40a6bb8a6c8e9a7a1280",
      "End": "85b4cc4e402044dd9c4ed0c8ce69f40d",
      "Id": "da299810b1d24e288e4e5e27c6001b8d"
    },
    {
      "Start": "7864165efbab4c1da460be95b027c353",
      "End": "c016c3319b0146a09042d6577a6181a7",
      "Id": "2712e78e4050421fa3a3cf68debb5b51"
    },
    {
      "Start": "b2d597a2f0e340d3a4a3c8c6683846c1",
      "End": "cb3b8ed6186d4c45b7fa10e491b42d49",
      "Id": "aff67de8c91a45cfaf8c5c56b1aa23d8"
    },
    {
      "Start": "eb47ba1c2e7e48b1a92ddbcee5557f1c",
      "End": "299378fd704e4ddaa374139aec5f64f7",
      "Id": "0c3cbf60c4cd45ff985bcc2f5e39cb15"
    },
    {
      "Start": "eb47ba1c2e7e48b1a92ddbcee5557f1c",
      "End": "9bafd953437345da83e2e6f948d10525",
      "Id": "af32cb806f594033bc3c030c41eb1e97"
    },
    {
      "Start": "15019f85be804bb2ab72d377511de29e",
      "End": "fef5bd06b5d44ddcb0037b3dbd955a6c",
      "Id": "07e05673ae7544dd95564c1cbe9603bc"
    },
    {
      "Start": "da0bfb5732fe43c6a275e555d665b08a",
      "End": "b6c520342a6d46e28cba303e0c428414",
      "Id": "9b3fa26bb38c4abd86add678f1c94c81"
    },
    {
      "Start": "da0bfb5732fe43c6a275e555d665b08a",
      "End": "45dc5a0e7e1b4f90a262fe99e728e9d2",
      "Id": "531de9d5952a4578863dbcf7180bb69d"
    },
    {
      "Start": "da0bfb5732fe43c6a275e555d665b08a",
      "End": "c8341458bd9142faa883cf2474bb4573",
      "Id": "e2068f25534a4ba982b3d81fb3a2dc14"
    },
    {
      "Start": "da0bfb5732fe43c6a275e555d665b08a",
      "End": "c9446dc4056544d89842a78d9225e5ca",
      "Id": "2b383e08ea8d4c3984ad29648f631b64"
    },
    {
      "Start": "a5c08991a7af4869a90e1c01e4edab52",
      "End": "416ec229ec6f47c38d0b15e020ada9ff",
      "Id": "606acd929c4f45cfaadbbbb2339570a9"
    },
    {
      "Start": "067bb865306542cf82c9b3bc9b6f6eee",
      "End": "66376f52c4c14788b503b6cf13109d0b",
      "Id": "1c52425d36294faa91e8dc121186ab31"
    },
    {
      "Start": "067bb865306542cf82c9b3bc9b6f6eee",
      "End": "8ffeefc246ca44c9bbfa802d740367df",
      "Id": "1b89b5976ae6447db37a78ddcc8cfcf2"
    },
    {
      "Start": "716fa760ac6f4ee7b2a6bfd82917d10a",
      "End": "b9b6d464055c483799f044898a1b1284",
      "Id": "aeefc3649b5c4309b7679fb287ef2466"
    },
    {
      "Start": "a2bdc0c9be984c1d9d59d467fe9806ef",
      "End": "86bd3708b7124ae080c925cd2e2faa38",
      "Id": "5afabc5b8401485ab8bfa23b2380e876"
    },
    {
      "Start": "c80f5ea90d1b440e8108ec503c6cd6f9",
      "End": "94c025f0e1c542b0a936ef8c6021db53",
      "Id": "c0dc1b4cdb14489297d87082ca4773ea"
    },
    {
      "Start": "c80f5ea90d1b440e8108ec503c6cd6f9",
      "End": "31355733942c45ce910d215bd2fd04bb",
      "Id": "a48acff23d0846048a88d9161426dcf5"
    },
    {
      "Start": "80bb9e58b1ee4359b44b25a55c3c383b",
      "End": "03a5f6d277ce46c281660c2ea3f9de2d",
      "Id": "da0bece3e95e4795a9da276a9c71fa0a"
    },
    {
      "Start": "04f8cf2fc7f9407ba50d1b4d34cccbb2",
      "End": "6df4bbda52a24e98a49313e154d88255",
      "Id": "86423fd986894bb48c9a59c54d5fb903"
    },
    {
      "Start": "04f8cf2fc7f9407ba50d1b4d34cccbb2",
      "End": "b4919fdada5b4474a5ae3ea48d597702",
      "Id": "718b66841e8d4ca0b6b5b7f1d8eba9c2"
    },
    {
      "Start": "6e067972c1f8450a9223abceb013e29a",
      "End": "dcd5c4194115402c8a34b2dc50a9b8df",
      "Id": "546707708be54a70baff075e04472dcc"
    },
    {
      "Start": "9ea66907b1554ad6bc0b1c4e78f6b72a",
      "End": "e15e552d0d964670b4bb4650a4c8e830",
      "Id": "da1ab9334e3649b8a090e533d764d11f"
    },
    {
      "Start": "cb6c9565eafc40d0a57b233a54df58ea",
      "End": "ff6049cd93dd49bab475b9757400f251",
      "Id": "71e94635ad1e4bed9a6dd815d411e6de"
    },
    {
      "Start": "9c28271296a24690bf888bde53a5968b",
      "End": "463f7bd83d2a4e649735c3dafab632c8",
      "Id": "50da990defa84b2aad9059cc8e3fc057"
    },
    {
      "Start": "2e7031b051534d3584ad53344c1f3c47",
      "End": "1fcaac180d454339a683e86a8f9daa97",
      "Id": "09bf07ba6c014b85b126b3b0f88f5fc8"
    },
    {
      "Start": "2e7031b051534d3584ad53344c1f3c47",
      "End": "1a16d6b08d044151abb66f22f6fe3768",
      "Id": "f54aa4ef100e42568f2e929c726f9f25"
    },
    {
      "Start": "2e7031b051534d3584ad53344c1f3c47",
      "End": "dc716ea3e66143f2aed2de9514051f4b",
      "Id": "b967f982b5e44aaead3d6942a34f75bf"
    },
    {
      "Start": "2e7031b051534d3584ad53344c1f3c47",
      "End": "d21bded0ac794a1ca8a5caa816ecb15c",
      "Id": "e43b42b90057442fbeccc3d4af538b80"
    },
    {
      "Start": "b4aff11d512042dd995438fb3ef47d8b",
      "End": "dc5fcd03d65142fe960a962edd58df1d",
      "Id": "4684db55f0054f09a9cb4a19ee8697ac"
    },
    {
      "Start": "1ee738196fa64631918f1fcefb5f1360",
      "End": "aee67746950c4ec5be65d23c5dd691e5",
      "Id": "1c6793446248412ca1fbe65c607eb6b8"
    },
    {
      "Start": "edebbc9146b24e59b16e78d900fede0c",
      "End": "3a92d62d1ac140168f71ab2ab719e95a",
      "Id": "5c249386d77340f6a72683235aaf1cc5"
    },
    {
      "Start": "ced738df9f8644ae997dfd4edc3a08b1",
      "End": "6d124d925f884d59b9db920c85635760",
      "Id": "1b1940f8f8de4d2bbac4ac6bf2484bb2"
    },
    {
      "Start": "96d24314e2d14a3a9f2b85bde4991412",
      "End": "f310cfdd618e4745887e22a28d1f86a7",
      "Id": "cf5ea42d22ed4dc59c4455978da1b44d"
    },
    {
      "Start": "96d24314e2d14a3a9f2b85bde4991412",
      "End": "5a2c90c40c7d444887a5c184e1a84f6b",
      "Id": "82e4eda600e34714957a56d6adec5986"
    },
    {
      "Start": "96d24314e2d14a3a9f2b85bde4991412",
      "End": "bc93bd427fa64d92bf19d49c063d0fb3",
      "Id": "9d671ad423344b9d8de7c75740700b72"
    },
    {
      "Start": "f98d8153f4ad48da9306742adff79264",
      "End": "254d768742224084a474b2f9ca525a0f",
      "Id": "f8fb73d9a0744ef58a565b293558c512"
    },
    {
      "Start": "f98d8153f4ad48da9306742adff79264",
      "End": "819b809d012242009185a8bf28335b14",
      "Id": "9e897259af934d1e90a8c898f6f63fe7"
    },
    {
      "Start": "9f681a3c5fb04c53bfad157485f71a8e",
      "End": "b3b88811b54e4beba6e0688d7c53bfb4",
      "Id": "32fb6e53587142a5bc16ca993feedef0"
    },
    {
      "Start": "68df563d8ec14be8a45fefe52e6fa648",
      "End": "7166c19068634bafbe6151266444ebe8",
      "Id": "8c0824ccc4534dba9f9e2ffdfdd62f66"
    },
    {
      "Start": "68df563d8ec14be8a45fefe52e6fa648",
      "End": "b675e457cf7946c88d80ab1d4cd575be",
      "Id": "687579dfbc734291990453411f418c20"
    },
    {
      "Start": "81a3d42b6142466ea7f3f3f0d2ae3735",
      "End": "717c5d28d543478abc93a4c1a92b0dee",
      "Id": "874963e83b424ebbba766d767b80b62f"
    },
    {
      "Start": "57b32e4b741b41edadbc1c1fd5d54ec0",
      "End": "e3863a27194f4f13898a2af7c3c41159",
      "Id": "79fae8cbe6b147879d0c0e47a41087ad"
    },
    {
      "Start": "57b32e4b741b41edadbc1c1fd5d54ec0",
      "End": "ddfcb4e0ce4e498bb2b1a790db0caee5",
      "Id": "0201d1371c73402789b2096b3103b5ea"
    },
    {
      "Start": "2609206ec0894bd58cc902308e8b6b89",
      "End": "6e3cea67400d490283b2be5ac858c8c8",
      "Id": "a4c0fa2e0f5a49ec80a98ba6f07326cd"
    },
    {
      "Start": "8869892c7dba4fb6a8c9fde47eaedc00",
      "End": "2f5a1e74919741e2a2e95393caa1a9cd",
      "Id": "fb497d8707e94fe4942b6101797f68c1"
    },
    {
      "Start": "b4e4ca982da74093ae991030b7f6e483",
      "End": "33d90b44ab9d45d781a4739b09fc3e7d",
      "Id": "c0524f2667ee4284a47e4b39b11f6ecf"
    },
    {
      "Start": "c7919985a9f94fe5b82d962c31f83644",
      "End": "085f401c1a00480baeb25897ff93f922",
      "Id": "d7e172394e5345a498325da3d232bdbe"
    },
    {
      "Start": "edf53c46709c4c7182e60eab94531070",
      "End": "ba826e42e3e14d3d9dad8d2e1f866cd2",
      "Id": "871fe1e738a74b1498dd583c7ac5ea07"
    },
    {
      "Start": "e01c23560aac4fcbacf0c1ee5d725e10",
      "End": "819305d989494315beab8e9ebc5a5f2c",
      "Id": "c0cc40e3b37f4f56ae4e7efc10fae86f"
    },
    {
      "Start": "e01c23560aac4fcbacf0c1ee5d725e10",
      "End": "ffa3e6b0d10544659e9940aecf5ac05b",
      "Id": "d65c9ba5fd0643e598057bc76fbbabf2"
    },
    {
      "Start": "d9203a2464764207b79016151b7b7d51",
      "End": "21df890c248243d2aeaa6e0251b4cce9",
      "Id": "af8ad94a425048f3844a427859c7df21"
    },
    {
      "Start": "8fe67b01a0e340d8ac229341b2d0e029",
      "End": "f4b0cf776d7c4901bd784474f97172dd",
      "Id": "d4cc09bf5cf64d5590af16bfc12e4cdc"
    },
    {
      "Start": "86da6c1050f7460bb105570bb4bf5714",
      "End": "db7af28e3356429a92c93c6110e67586",
      "Id": "02b9f8c7cc0c4641aa0b2e7cb4cd4aeb"
    },
    {
      "Start": "0f4b577b3f814229bc0f63c3648710f9",
      "End": "633ed5d84d6c40a8ac103b5d429571e4",
      "Id": "aa92de865685429cb84a1e05e5f1f858"
    },
    {
      "Start": "f494e529282043ab8137106539e6bb11",
      "End": "06fcd18903c748a79b193d139ec36e84",
      "Id": "ba375f779ac940ecba45afe245b3f1d9"
    },
    {
      "Start": "fc38ad349ad94a6f98576f0022a61b8e",
      "End": "db276a205b8f4990ad66694978b00c50",
      "Id": "3bacb0e5a4a54872b160b6847e3ac3f3"
    },
    {
      "Start": "21512c8f61064aa3bf6ef64801593282",
      "End": "c33817208c87448aabc49d6864855926",
      "Id": "71a4af21b7454988983ca4dacff1b742"
    },
    {
      "Start": "838b1fda205141c3ac749785cb985df0",
      "End": "e23c1a7484454d328bf7f8235562373b",
      "Id": "ef51905eb00444a48b992b5e5fd8e942"
    },
    {
      "Start": "fb6f651abeff43278e3ebbf9b1c48cfc",
      "End": "c47c58ad355344ee99043074102c59f8",
      "Id": "1e01524cf1364d1193b8684155b5bc40"
    },
    {
      "Start": "241bd3874ca1413aa2b7633602e6e9fa",
      "End": "2251479dd1c84c0d8d0e8d5780100923",
      "Id": "cd5c8253f0104196a6c1f49199da1f54"
    },
    {
      "Start": "299f1b57be314cb0af3fa71c61bc5267",
      "End": "09d8c28c673b4ff8a8f51f90b1956f12",
      "Id": "08334b41b1f54e6c84d63d2661d39b35"
    },
    {
      "Start": "299f1b57be314cb0af3fa71c61bc5267",
      "End": "25c5d69708bf4fed962d79006e44701d",
      "Id": "3ddf751e3fa24f0d9350137fff55699a"
    },
    {
      "Start": "8a6cea5ae01e4f82a268a8a56d0c9d5c",
      "End": "596c2dc97c8e4f41afac3e02cb534f58",
      "Id": "9272554e1c5e44d5a74be3738957a412"
    },
    {
      "Start": "f0c90209d9444219bf6179891f7f7d5a",
      "End": "08566c83d8894bb185de5341080197da",
      "Id": "e0ddded3458f48d2b115d6e670c991e0"
    },
    {
      "Start": "f4c5e483f84f4a6dbdc749d544e6d10f",
      "End": "9945b008d85449feb9021e6f57ef2836",
      "Id": "d15dc6cace71429bb452627650e3d0a6"
    },
    {
      "Start": "cfae6dc7aaa248e9a00ae6264ae8fcf3",
      "End": "88789646a74643d0af7d6a561918c784",
      "Id": "f60deeb7057b4751b946619087c83d59"
    },
    {
      "Start": "ae052461c2914187b7f4e0fcf05643ab",
      "End": "c980c243f2bb4f5ba7a5bc9428adb691",
      "Id": "8f99aba0639b42f4a0502bec2bba5fdb"
    },
    {
      "Start": "c998ab4b365d48c49ee05f8c064068d9",
      "End": "86275cef8a354688a9a09aea755cc2c0",
      "Id": "183db4b8fcd041c2aeb8cdcad746b9b5"
    },
    {
      "Start": "28fb103913fe41e298b110ceb22de7b1",
      "End": "059b01df050d47d087245fc6fbf4f314",
      "Id": "b64b6d9ba23c4e7d9b3a7bede849e671"
    },
    {
      "Start": "29486609473e4b3f8fb9ba2ea7a3587c",
      "End": "18755aa772d74e75a1ed36b460561d7e",
      "Id": "2a7e9340d5b8428695e2803a3131a023"
    },
    {
      "Start": "3c6c1d6974c24650a62f1d05dd8ba9bb",
      "End": "89ab044485884334a66981970ea2e288",
      "Id": "d76f57459efd495aa31aa9a882665f9e"
    },
    {
      "Start": "c61cbf44dfb14a8283f13cbccb5e1894",
      "End": "a53de3be3abe42529dfd06a71c4500f0",
      "Id": "ffc8f428c5074f8e915e2bcfd3e2d041"
    },
    {
      "Start": "9f8d1bf690b5499ab6a3e0901d48a25e",
      "End": "332a8b5f5589494caa6b8199eef466f3",
      "Id": "e82aac611b8c49c98a1be6cc6cddfa8d"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "c942bbb20fc54ae580eff203ca18556b",
      "Id": "15958f4a698a4321a652ec76a05523b9"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "ec17be1c021b43ae8d15e2e575411652",
      "Id": "89c78b1a992a40ad954d9dad86556ab7"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "d11053d8cba84307854f0f19610801b3",
      "Id": "1fef6b1de5e64ebcb236f52d61f20c74"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "190adb808d5c40bebb580d4739f37f5c",
      "Id": "24b8723d22fb42939393ef6646474135"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "ff0b9f60e7c846ffad2bd7411b0b66bb",
      "Id": "c381334547cc458994b2d42298e5f77e"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "f9f73be7f835480ab9dc62b544dae369",
      "Id": "6d6e4ea7fd914150a483d09e2e5e548b"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "3032c7fcc2974ee6b4e748916bf6caf5",
      "Id": "9f124c86f4874ceb9444beb29fb37cb1"
    },
    {
      "Start": "fee323885ebe4717abcff0d0230b56bb",
      "End": "91cac56194704beea55232db43f7e996",
      "Id": "249e116f32b54646bfa23e26e49e4355"
    },
    {
      "Start": "9fda55c8a9bd4bf2a554e5dbab7bc194",
      "End": "dd0441d9358c469ab20242b5bb7f3379",
      "Id": "9308c99990a045dea05731c4c01dd4e8"
    },
    {
      "Start": "6cd2f7feab964a29b39fd7cbde30df12",
      "End": "c3e21353204a4783b8bfdc7bc12f6245",
      "Id": "15443fb9d9b24f019bed605767a67579"
    },
    {
      "Start": "6c48c0c5cdbd49fc86d19ec687b6d769",
      "End": "068c00a9c77149778396065290fd917b",
      "Id": "fc8235301fdd4969b37374a94c95dc4d"
    },
    {
      "Start": "6c48c0c5cdbd49fc86d19ec687b6d769",
      "End": "72bf3c369ca54456aa7e42a7e22e7e90",
      "Id": "24e0bf01789f40c4967635f3066fcff5"
    },
    {
      "Start": "bac014d3a24b4dd181ec05e7e59bc134",
      "End": "a49032ad43bc4f2794e417eefa895d9d",
      "Id": "d8923152d01549b0aa6e813049091139"
    },
    {
      "Start": "bac014d3a24b4dd181ec05e7e59bc134",
      "End": "8e2503bbfa2e48969740a0b665b41788",
      "Id": "5ed6cea74648484296b2d3df7fee8fc6"
    },
    {
      "Start": "1e78a46f890d4f7f9e52a6962d85e7e9",
      "End": "8b4dbd9f4cb7460fba418d80f4703aa7",
      "Id": "aeafb0514ade4bd98293e53ad0462c51"
    },
    {
      "Start": "1e78a46f890d4f7f9e52a6962d85e7e9",
      "End": "97d45486d9814b268535c5f2c2521f6d",
      "Id": "340c302dc320477bbe3465b58e08501c"
    },
    {
      "Start": "093bda40828741c694f01783671f5aa4",
      "End": "733508877ba040809eee3df1edaf393a",
      "Id": "43e3a38ee49244a2a83ce28090708d5b"
    },
    {
      "Start": "ec1e2b01a6934bdb847805440009dfa4",
      "End": "929ae53761584fb0942d98200fb36fab",
      "Id": "688a785a205b4914bb76f43de410004d"
    },
    {
      "Start": "c2d1337dafe749d2b7db4af21aa56bce",
      "End": "19c576e620c54a71a0812471f1b5c38e",
      "Id": "b7c21b7381d24bc7b82bff792f58ff65"
    },
    {
      "Start": "9c8899c64489419fb5434ed63b3b021d",
      "End": "6d6fff3fa9584a66b3f16865397e1b9c",
      "Id": "95081db41cf745d48b24c0d5ba0d4ee5"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "4a096e339b454e26ac9a7dbaf5eba9fa",
      "Id": "9ada996b2e16462193a3f8d5def4e9b9"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "12fa8665c6bd435db36e6cc45aa00e31",
      "Id": "af331cd926094887a6c78b9b8ffe9b9b"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "5af24c44a23b4639a0b8560a836db1ac",
      "Id": "0683c0b7590c41fda111d3e8d5610db5"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "b4594bf8b92d4c52974a0fa6b48702f0",
      "Id": "335715314db740d29100dcf120b752c7"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "14868438365f44ecadb7cf86f20c1b51",
      "Id": "4f883b0aff6e4d0887583e8273ec3b0d"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "bcfd5553718c49c9a4ff397e807f138d",
      "Id": "5f9db4889c6b4528a26331d862105a1b"
    },
    {
      "Start": "8b77004f6fb5440781199cd342faabce",
      "End": "742b99f13c734b848c7c748d4a4062f4",
      "Id": "30ed989e36304b9497ec9a9110dd4bf3"
    },
    {
      "Start": "10429c31165146578a4c09963403a580",
      "End": "6dda8021e1764f30b7c21bbec61cb75a",
      "Id": "7061f72c419245b1ba42a8c546d92d14"
    },
    {
      "Start": "10429c31165146578a4c09963403a580",
      "End": "7d92bad429e14608aa00eb832db1ebb8",
      "Id": "e4f0edcc57014e609a99419f0bf514e1"
    },
    {
      "Start": "10429c31165146578a4c09963403a580",
      "End": "838a79c4644a4433b869a834dd95cec7",
      "Id": "68c8d995c2ff4abfa402ff8b521adb3e"
    },
    {
      "Start": "ff44cd89f2d24a05b58bf24943afdddd",
      "End": "26d658b5b3524096b9c89212bab5b977",
      "Id": "a40ebefa84cd4e43830f1eecb9343ba0"
    },
    {
      "Start": "065310d2ac5b4264b4aaa7e86a4e3231",
      "End": "51c3ccbfa7064f79a8b5325d296962b1",
      "Id": "5ba5d4ca4a1841138d974b305bb1a8e2"
    },
    {
      "Start": "c9d62f66b2f54ac69d881e9f80ce0830",
      "End": "f100f020cd224d219233054f3a77b9fc",
      "Id": "b9a07566b62e4e99a20ba69e7340506a"
    },
    {
      "Start": "675942256c174592ad7e6f706bc62a5d",
      "End": "7b070930b78844e680d2bf868fcd042a",
      "Id": "d0712aea5a5a415b9825a106def8742c"
    },
    {
      "Start": "581c786a62074ee99b3a6473d7ca60b5",
      "End": "4e26b61bd23040b489001e1c7e27e90a",
      "Id": "df1edd7faddc4ae882a4868cc191222f"
    },
    {
      "Start": "3b0853d2e0384439975ad1a74a2507ab",
      "End": "a1a631bdf68b4a1d842b78390d48e19b",
      "Id": "e876690c1d3d40088a331365309fa60c"
    },
    {
      "Start": "3b0853d2e0384439975ad1a74a2507ab",
      "End": "4afb6040afab41d3b386dfd007ba1f09",
      "Id": "14f19c082a88403d8e2c2b630a6687ac"
    },
    {
      "Start": "3b0853d2e0384439975ad1a74a2507ab",
      "End": "7774002e976e43878406614ecbc8cfd7",
      "Id": "52462af54d784bbaa3ab8afae6f697cd"
    },
    {
      "Start": "544524f61d414dd4becf1a1ef9624d10",
      "End": "0790d9aca8204390980763ea1ae190d5",
      "Id": "c72d7c90dc6f47deb3fbf1f782ddcac8"
    },
    {
      "Start": "09809a1ede6d4816bcd73ca04a47c233",
      "End": "6da6bfe2baf14da98113f1448b8020ec",
      "Id": "3bf9661aa54647db93632358315e7e2e"
    },
    {
      "Start": "63f0c795c39f4de88561af320b41d543",
      "End": "ef908c5ec29546d8b85a68e464a8718b",
      "Id": "bce44fb2ac6b43dba03b24a17a47d142"
    },
    {
      "Start": "63f0c795c39f4de88561af320b41d543",
      "End": "694895f84d884755b01ca5ffbef71c55",
      "Id": "01e6160a680545969603770b55a5d39d"
    },
    {
      "Start": "3397b4c6bf72496eac45688070c0b02d",
      "End": "b8695960587d4335aeb2f81e8626c011",
      "Id": "ec509fffce7c4eff83eb48922cdb3052"
    },
    {
      "Start": "fd628939f93c4f71b9380658337686aa",
      "End": "de19705dff9e48688aa9854feed9a94c",
      "Id": "497edfc3b2fe43bba5ae10214113d01a"
    },
    {
      "Start": "07ffaaab26704bfb9ed6b61ee6b1674b",
      "End": "cd7494aec59244bbb50accc1ba9498bf",
      "Id": "d09c3c484b444d068b21a55bab803456"
    },
    {
      "Start": "46dc921ece414b2ca0dc75499ebc3b14",
      "End": "09f380a1adb240a0987bf0eb51bca09f",
      "Id": "d69233e7c151433ba3f0625a91fa6227"
    },
    {
      "Start": "46dc921ece414b2ca0dc75499ebc3b14",
      "End": "c160bbeb3f4b496a94fae38de313bb1a",
      "Id": "98a0d479e7c04ffbb17dad1ac1785a89"
    },
    {
      "Start": "dcfe0958e8ed4d64b7ad2390b2b3dd4f",
      "End": "56532aee7280427aa157d65e606462b7",
      "Id": "7082e8a8dc4e4c47855ce95caa0f8e1b"
    },
    {
      "Start": "dcfe0958e8ed4d64b7ad2390b2b3dd4f",
      "End": "f2c9242f4624401d96e5deda670c125c",
      "Id": "ac0ec016b0724d3b8b66323c1aad8706"
    },
    {
      "Start": "b61914b632594ac1bb65d5432a444120",
      "End": "7efa6abadd1d4a5cb7b142e9ff440f6e",
      "Id": "4e5b4fff09ee44c7834f425311609d49"
    },
    {
      "Start": "3564f62f1da94e408ac88810f9098103",
      "End": "23c56342d9204c208aaed225ebb705a2",
      "Id": "a892cd6aa4e34ffe865675253904e96a"
    },
    {
      "Start": "3564f62f1da94e408ac88810f9098103",
      "End": "419f3301acfe4a30aaea154dd3e8f66e",
      "Id": "a9ca8b2a256f4378856332a37aadb91e"
    },
    {
      "Start": "6a115bdbbf2d4c0e85a8b2655da1c74e",
      "End": "03c7ad2ed8eb4ccea9af3ad18baac456",
      "Id": "5da37bb5378a4c9188fb47c8f28d7865"
    },
    {
      "Start": "6a115bdbbf2d4c0e85a8b2655da1c74e",
      "End": "0de4cabd00f747eeac8fdf525c72de67",
      "Id": "b78152b2b8b44aae93ed712de7c96449"
    },
    {
      "Start": "947f58a036b44df4a2f7bda45b82ffa3",
      "End": "22c56a496581417db274eb029a56a1eb",
      "Id": "31291092ec8d477a80d71a22a4761949"
    },
    {
      "Start": "947f58a036b44df4a2f7bda45b82ffa3",
      "End": "668bd3aa72c04996bca9db03cb2eb924",
      "Id": "a05c5e8d9cc242ba9d724948b15daf00"
    },
    {
      "Start": "31cb5ee06e5f4341aa0224f2f7860404",
      "End": "c04af1209b534b0f972ebb642eb18a47",
      "Id": "8fa52f324d56427aa6345fff838b384a"
    },
    {
      "Start": "31cb5ee06e5f4341aa0224f2f7860404",
      "End": "e0d77c799f6e4aefb9d367de5d114253",
      "Id": "1761323ad3014b19861f09c6a5a9d8a7"
    },
    {
      "Start": "04984c12b2d24f6da62d76be6e96c9f1",
      "End": "509618acf21f4e3cbf100aecdb7cc55a",
      "Id": "b4fb3627c40b4ff9a4875ea893998647"
    },
    {
      "Start": "04984c12b2d24f6da62d76be6e96c9f1",
      "End": "e2fd8c7979764c779b42182aa6003e07",
      "Id": "8b7c51c2ef614e518674a03fc2a9d658"
    },
    {
      "Start": "3bce2cd0703b4e48967c05e86f97cec3",
      "End": "df415c9d161f4f4490ab9c324c7416a5",
      "Id": "fb8684e950b24905a7556c6953f4f6c0"
    },
    {
      "Start": "3bce2cd0703b4e48967c05e86f97cec3",
      "End": "a3de3bedcdbe4caeb5fb0f4f290f2d2a",
      "Id": "9333f08c78d2437c9a34c5d516884ab6"
    },
    {
      "Start": "0c2f329d2b4f43ffb3ea9bf7a7074c6f",
      "End": "7f0fc56fa70948baa4e45f735ee89bdd",
      "Id": "70d10205d6f54d7c80b257ce371ac35a"
    },
    {
      "Start": "49788b6876024ae38609067e8f0d42f7",
      "End": "36bd67111fa24b7b8a75df952f204fe3",
      "Id": "f863ed9b8bfb4876921621cf9593b905"
    },
    {
      "Start": "f0598f9d0deb49a79d77d81b3187986b",
      "End": "f2f96bf0de0248e69516c745148e84bb",
      "Id": "b65dffc2353f4a648f9986b72c6e649a"
    },
    {
      "Start": "f6f8a59624584c03946c1f94c3fd0881",
      "End": "ef6207aea4734742a24d9239a462957f",
      "Id": "2f27bf423bc647e7a73e5879dd6122d8"
    },
    {
      "Start": "f6f8a59624584c03946c1f94c3fd0881",
      "End": "01516d727549453882eb93cc81c6b6e6",
      "Id": "aa8009c193434272a667ec7df0dd8e57"
    },
    {
      "Start": "f6f8a59624584c03946c1f94c3fd0881",
      "End": "8a492f3337b64879810347f120d80f7f",
      "Id": "b31c9d24b4c445bfa3d45a3c72108cab"
    },
    {
      "Start": "f6f8a59624584c03946c1f94c3fd0881",
      "End": "143526ad715547858c73bfccc9c451de",
      "Id": "f5269eb0eed0465e9752fa6dab8a2a7c"
    },
    {
      "Start": "3b4e2a63ec3442339f34c096fc9d220f",
      "End": "4f67722f63994a1ebe57f4a826b52f17",
      "Id": "45abb5691712498b8ddfad3f901ca3c1"
    },
    {
      "Start": "7ee95f6f3ae44014bda466d63260fd4e",
      "End": "745eb5e5d80c42608491c58dc4576514",
      "Id": "151fc89b58284c44a05ccdcc86f5c00e"
    },
    {
      "Start": "ca54dd2143a54a6e95e8f919a1f9270b",
      "End": "054c95f3a35640cdb0d74611802f31bd",
      "Id": "5950633ca2c844e7bb436846ff93ee93"
    },
    {
      "Start": "794c4a1da5244d029dab0ea6069aa904",
      "End": "cf95fb18ed584c1492829c6efdfe9661",
      "Id": "51cf8df68c9a4145b206e96996d91a3a"
    },
    {
      "Start": "794c4a1da5244d029dab0ea6069aa904",
      "End": "d6d8c78d4ff440c58c1314e5f3633d6b",
      "Id": "a86fb26aa804448480e6e7c9f7f33fdd"
    },
    {
      "Start": "c48f0980edc246259cb2b92827c654c0",
      "End": "fa871d9cda734900bb5ec232910400c2",
      "Id": "385265604426436da57b65599c5cb043"
    },
    {
      "Start": "c48f0980edc246259cb2b92827c654c0",
      "End": "8f9c515a5792475eb5e7e131ef3ac722",
      "Id": "9499d150b0ab451cb9e721b1dd4a4e89"
    },
    {
      "Start": "c48f0980edc246259cb2b92827c654c0",
      "End": "156805c000d74bcf96d6d403ff649fd0",
      "Id": "7d6070fd79434c5a956a060c4b05f7e3"
    },
    {
      "Start": "5c9f9e590fab445d843cb3ca50ca9779",
      "End": "7f25346de2b3458e8f94ac8346f8f0ef",
      "Id": "8eba8466efa0428d9f2086e6be0c3958"
    },
    {
      "Start": "4693a03919ab45c09229c0abbed2d544",
      "End": "3e4eabf177fc42819ffc8c857526e6ab",
      "Id": "803856b5377c4f5785dfd5ce27b84aa7"
    },
    {
      "Start": "d2eb5e4815614a15af6279fc8d067473",
      "End": "cff8e93dd35340c48d248a4bb6289cb0",
      "Id": "2a775b9ec9884206b54a2e519ad90f39"
    },
    {
      "Start": "dc65153048654259bddb84a2f87493fe",
      "End": "c2e17b05bea84293a76db4cf11fd2e14",
      "Id": "e3340b40c4d24139b0b663fb52451936"
    },
    {
      "Start": "ca6c0ec680b949fc9a3a487a31c49601",
      "End": "0294c58abfac45d98bc1032a4fd4bc42",
      "Id": "81452cd1ef3340fcb8541880ab4cf2c1"
    },
    {
      "Start": "deecc3bb08db469fbede38e53e040048",
      "End": "32749489ab484720a509185c339b5bcc",
      "Id": "7392a3e89fe84f478ad46ae250524a1a"
    },
    {
      "Start": "7cd1e7725d83435e956351ee2e94a2f6",
      "End": "1052d7c1362544d6afa8ef8ab3a6dfe2",
      "Id": "8de7253b43644c08929d9e44b66eda7a"
    },
    {
      "Start": "ad8d12903d934b9cbf62313ff962e9ef",
      "End": "b9315d6795674ada8b425c7b27ef0b8f",
      "Id": "041b5881d89f4ae5b8433944b36a53f3"
    },
    {
      "Start": "92c35bde34134131b04498ac0df7c269",
      "End": "9121621b8bcd499788444d81f04f390b",
      "Id": "d1b395dcb1be4ff1b9ba0b7b157c7cbc"
    },
    {
      "Start": "02c28574a2134791843e4239825aff95",
      "End": "4a5f000773a2482eb45f205584c330f7",
      "Id": "7940de1e724e465785a1ed072bc15ac5"
    },
    {
      "Start": "b2db3622df564ec2851b14b4dcf10e0a",
      "End": "97323b3c12524f2390e2d0fdd5564feb",
      "Id": "f12f1d3a5e2143ec92c45ed689a2befa"
    },
    {
      "Start": "b2db3622df564ec2851b14b4dcf10e0a",
      "End": "e1480afaea514246aa111bfa275ce309",
      "Id": "82c2abe3a9864f49865a664916a2564f"
    },
    {
      "Start": "d8aae014f81b4d3b92d4c0f56af13939",
      "End": "41a2061fa4ca4808982fe24fb92561af",
      "Id": "6302c5297d3741058d2b7a74c9146b66"
    },
    {
      "Start": "6a935be1eec24a5ab2799cd8380ccf07",
      "End": "9e907d5e212c409ab5356576e0d4c2f8",
      "Id": "b89dfa5a72f444b1993ccfa326a6bc99"
    },
    {
      "Start": "9791e63c9d0a4deb9d06c516b60c4f90",
      "End": "cfc69a6a289b4a49934f85f8577779ad",
      "Id": "83630cc55b104759aea3c59c1d33312d"
    },
    {
      "Start": "9791e63c9d0a4deb9d06c516b60c4f90",
      "End": "caed0d3c41944f009e0551377071e268",
      "Id": "9c2045049e4d454fa0186c1f0fe4e990"
    },
    {
      "Start": "9791e63c9d0a4deb9d06c516b60c4f90",
      "End": "18be99f5f3764d58b877ad498eb340f3",
      "Id": "9d55d38a9e59476aaadcf05dbb64818e"
    },
    {
      "Start": "498e352109a64d778ea78ea7ac0d4084",
      "End": "ab1a1617a2234fefb93896b21f4c2daf",
      "Id": "b66e704476744a58b723cf835b85e785"
    },
    {
      "Start": "498e352109a64d778ea78ea7ac0d4084",
      "End": "bd724606bc364b75af229c99afd85b68",
      "Id": "5d83f33a1f2947889ad70250284138ed"
    },
    {
      "Start": "498e352109a64d778ea78ea7ac0d4084",
      "End": "2fae7c885fd7420fab78b3f553423861",
      "Id": "0662c14fe3934155ae4043c9524db2cb"
    },
    {
      "Start": "4d2b4689089744d1a75853b8160121f1",
      "End": "68ab53aad5614d759a21737f2a8161fa",
      "Id": "10786b5b766b4a1a9e6d60bd129a491e"
    },
    {
      "Start": "4d2b4689089744d1a75853b8160121f1",
      "End": "ebe1b0dd86824295ae640253ebd09e87",
      "Id": "fcd70e02c8c844518782b30957bd0831"
    },
    {
      "Start": "fae722e2cac349b999bd51916f91c14d",
      "End": "eab461e4575e477ab8f6cea05e588f2f",
      "Id": "625c25b546154304a171ba5b8d5e3932"
    },
    {
      "Start": "c430e205ec1447e39f05bf5068ff9dec",
      "End": "7402c4d4ece04c24a654e2a5419b3dfe",
      "Id": "e8b34f7c074349b2ba0403f9d4f7eefd"
    },
    {
      "Start": "44c6439a97d64a3993ccc4109fbcef0d",
      "End": "e1ca40a90b6b44f49dd8de33eb5d7426",
      "Id": "0e35df5927a44362a03df0621df71899"
    },
    {
      "Start": "0ab7618f31d0452aa1eda62dcc609151",
      "End": "48cf9a11c88549b7bd341d5a1eb20979",
      "Id": "e84a8761701d484d84425e5969590c14"
    },
    {
      "Start": "0ab7618f31d0452aa1eda62dcc609151",
      "End": "e919278cfadc477291dce91fb7ecc52b",
      "Id": "d3422597867c4e1196e4fccf26c1c0ec"
    },
    {
      "Start": "0ab7618f31d0452aa1eda62dcc609151",
      "End": "d71a204e19274e24a16b40c1a5505c61",
      "Id": "87e5940e5e3e450c9cca1255517410c1"
    },
    {
      "Start": "0ab7618f31d0452aa1eda62dcc609151",
      "End": "41eb9aeda80c443f83b601f18e0d9ec4",
      "Id": "27d078151d3c429e9528de0b10f36fa0"
    },
    {
      "Start": "0ab7618f31d0452aa1eda62dcc609151",
      "End": "afecc4e856c44f5eb985dabdc70019b8",
      "Id": "5d6dd9e7bf69498994c64d82c3cd2556"
    },
    {
      "Start": "e621aa6f849f42e2a69ddec3f6d4a5d3",
      "End": "257e50e368d74926a3ac4181dcca3a1a",
      "Id": "6e415cf409f349d6992b73a2ba669fd6"
    },
    {
      "Start": "e621aa6f849f42e2a69ddec3f6d4a5d3",
      "End": "0e19d2c3a16c428cba16e5e6339309f4",
      "Id": "1bc45ff6041f4afdb9ebcac3a42e6480"
    },
    {
      "Start": "b207e827ce224d27ae8c50bffe9d0642",
      "End": "3e4ae901b265404194a247569d6f2f08",
      "Id": "c39082b2ad0948b88c7061d18591c1a7"
    },
    {
      "Start": "b207e827ce224d27ae8c50bffe9d0642",
      "End": "b4ffc553a12d404ab9bb5852e8690f69",
      "Id": "61e3586ac0c441d08303174ae57d6469"
    },
    {
      "Start": "64fd38064d9f4da8b12bd07e5eb28b3a",
      "End": "8c743a7530f246eabf4dc753652239f7",
      "Id": "18287b864ac8455980d64a6fc4c7bb49"
    },
    {
      "Start": "e6f36b4e80e1487cbc18e7b34ee0152f",
      "End": "65504102d2604c6b945398f87c8798bd",
      "Id": "905047b678064da98f414199eb6e843e"
    },
    {
      "Start": "e6f36b4e80e1487cbc18e7b34ee0152f",
      "End": "91a7195cece74c7db96f0193fe0b8f30",
      "Id": "6c7aaea7ccb84970ba34eac4b5771a16"
    },
    {
      "Start": "9870907c180242e89f55c6759ac99dfd",
      "End": "ea9864e950b04b2eaa71dbb9fde6bbbb",
      "Id": "8c2cba2590d8482fbdbce680cdf84ea1"
    },
    {
      "Start": "251dd8234f0943afaf292059fd17c5b1",
      "End": "de5c1f857cfe46ca86ee53d4cb0b52eb",
      "Id": "177218d9af0545b5956435028f182713"
    },
    {
      "Start": "251dd8234f0943afaf292059fd17c5b1",
      "End": "cae09ddb5ef04e51a25d3e64906eab9b",
      "Id": "7d07ea0e4e7d40e9b6c09ccf24e9e2d0"
    },
    {
      "Start": "251dd8234f0943afaf292059fd17c5b1",
      "End": "6668aceb913441eca10bb20b2a2c54ff",
      "Id": "3f727f9454604f22a2701a762e61d985"
    },
    {
      "Start": "481447e8f8484ce99255cd0eb17c932e",
      "End": "f4593f1559de40fe85180162e7d14099",
      "Id": "76410afde8504ed18624a854ea9ae473"
    },
    {
      "Start": "f3d52063668d4852a1a07bd5a0bd848d",
      "End": "82007af1962a47029acf3cd549f6d9e0",
      "Id": "e1928c108747494d9af01ad9f0f1d3d6"
    },
    {
      "Start": "f3d52063668d4852a1a07bd5a0bd848d",
      "End": "0b4fe0323dc248fb81598948eca3688f",
      "Id": "e2961f148c2341dc9c10274cd1776235"
    },
    {
      "Start": "5eed425f8df74d49bb9717ebc134c007",
      "End": "bfcb8ab7ff6743279c03605d0eec8372",
      "Id": "c5345832ac8446428d2475826a287502"
    },
    {
      "Start": "3add2de75ab7404e99f7cda31a52b457",
      "End": "f937dda6f90b4225873f2468c8af73e7",
      "Id": "8cdf6dc75eda43c7b4dcaa72a9e6ec96"
    },
    {
      "Start": "43beb8dd62b74a8c876aff30f7ca6f3f",
      "End": "f18d1f85044f4d3199605a9e42efead9",
      "Id": "ae58de0a4076471d98deaf6a89d0ff14"
    },
    {
      "Start": "8787f40f94c54d3eb4c1b224927cfab4",
      "End": "f7f66ed272234fc0bde8ef11f13b180e",
      "Id": "740a402dacde49bda1e29d3e4ab3de05"
    },
    {
      "Start": "015735dc5c3f4fcfba599b35e7a438a0",
      "End": "6460604385cb45f6a2ca61737d5b3f88",
      "Id": "acccbc4ccbad4a1e91d78db9f123159a"
    },
    {
      "Start": "6f0e663a72c84dbf8f511adee75075c0",
      "End": "bf50614c37e541a298729d3d05b4c372",
      "Id": "c9845dfb21574faa85950b9c1295d653"
    },
    {
      "Start": "1dbf615393ab403086b3bbc0c3a1e2a3",
      "End": "7aa0c8d5c4a742e1a8833745deff4775",
      "Id": "3d8c436365e64388ba895eb5e8c35f87"
    },
    {
      "Start": "d630e166201044bbae518b15a72b4d74",
      "End": "0a8cd379fef6471fafae24af9502e86c",
      "Id": "0553a1aea10747bfbc7b2a48fe90c4bd"
    },
    {
      "Start": "c3fc151f4c764f9e8e7fc83ef04fc953",
      "End": "9b3ee5b956734799bcf6429541ea1e22",
      "Id": "e0bbbb3f5d524f379bd04208b67c9e76"
    },
    {
      "Start": "cb904dec748341ed9d2f9f79599a16e7",
      "End": "3fa198f250f44c1f8be5e06d916186fb",
      "Id": "dd9054c05f1c4caf836cfb93703ebba3"
    },
    {
      "Start": "ed8dc42f1f0f41de9d5302a0a6891df2",
      "End": "4bd83c4ae24b4f5aaaddd479d7ba4215",
      "Id": "6a6964fa33724ef290822625806081a6"
    },
    {
      "Start": "48668fd47037423bae1eda06bd13358e",
      "End": "f0541f8861eb48b98b2aad82e9edd5f7",
      "Id": "384c795b3de64621b86d6cdc3eef5877"
    },
    {
      "Start": "28743cd111434a6aa80833dba4d80fd9",
      "End": "a87b64a176564cd0b6185614f4ac9bb0",
      "Id": "5f42903cb5eb49c8b7232ea7bcdc2ff2"
    },
    {
      "Start": "98961b3e912e4e109a9b3c27a14606c2",
      "End": "42e9a2f50f7b460bad04b4682776d06b",
      "Id": "cc86a145be474ccaaabd56d22ba2f30c"
    },
    {
      "Start": "ca0d84cc40864359b98e401983bd921b",
      "End": "893e2037d07944a9969ca2d69221acea",
      "Id": "d67e5a54c27f4f438aba380e8c4028bd"
    },
    {
      "Start": "c60da6028fe94d8c9fb112dd1026e6c3",
      "End": "f49fb29850614d0cbbd0dd82d9fe14e6",
      "Id": "78a6cd111ea74c06b32fb160a384ba96"
    },
    {
      "Start": "fa1a793d97dd4e72916ba45be6375b4d",
      "End": "610538f3529e4f29a98da15d258a5851",
      "Id": "364451407e2e443a9611ae19177824f7"
    },
    {
      "Start": "16002d2c23c34a689e3b88009e58f790",
      "End": "74e38534fc744a8782aba8ff2fb34d2d",
      "Id": "e7252cb419dd49ee8ee9c35f2fdad3a3"
    },
    {
      "Start": "44e7dc41afab4c509287b36c50a52b10",
      "End": "27a87de139ee4779b53587eff3d17f9a",
      "Id": "9590b050a72248c4ac07d231ab8183c1"
    },
    {
      "Start": "3cb1872c96f64ed0bf950041958121b6",
      "End": "680c0d6fcae8482fa2f01cd1904ccd21",
      "Id": "ecbc538d5e4a40f0b01b918dcf80f3f7"
    },
    {
      "Start": "d041356ec6cc45fa9e55693ad80a52e5",
      "End": "185657a659ff49f09c15b3b0f53c5f9c",
      "Id": "eccb307dd8f144469e9c2b7e8b75246f"
    },
    {
      "Start": "86257bac140f49f791c3c121b69fbecf",
      "End": "6df66ba7ff7a48da8d865ff7c41171e9",
      "Id": "ea95c017e89648119eb27c1a0916797c"
    },
    {
      "Start": "d9dfa2f332d14bcc8a14f86a8af134f9",
      "End": "9b4c7d0f980f4feeb20c9df76d9b402a",
      "Id": "26b71fadc14d468f81c2df3c4e971efb"
    },
    {
      "Start": "4bd028a3a5d44d4da05a41d9c14ae48a",
      "End": "8dea4cf3af9a4696971ed1dc297fc221",
      "Id": "9fcb03805e6e4184ac1ed81a9c2d5dd2"
    },
    {
      "Start": "084c13a271bc4002bdaa8d82948be77e",
      "End": "3aa0d694b5ab4851b68e0d7427ddf7f9",
      "Id": "0cb79986e7414a41a9fccd4b1f8cf27e"
    },
    {
      "Start": "084c13a271bc4002bdaa8d82948be77e",
      "End": "adab65e722d64b258db8470a57142df2",
      "Id": "8e71957247994391adc5adfa1a57e3bc"
    },
    {
      "Start": "968448f5727a4d86a998ef941ff510c1",
      "End": "7a397344609648acacf829891f373e58",
      "Id": "bf055e5096944fd08b1ce0284471ff4b"
    },
    {
      "Start": "968448f5727a4d86a998ef941ff510c1",
      "End": "5c0a87c144fb4be8970a44ee3db658a7",
      "Id": "6c7fa92518f24733955a0fac19006efd"
    },
    {
      "Start": "e337ff3e55be4362b2837cffdfedec7c",
      "End": "c78cc20c964b496fbe898af13e8ba1e5",
      "Id": "b8a911227e474f3791345046aa8ec781"
    },
    {
      "Start": "e337ff3e55be4362b2837cffdfedec7c",
      "End": "c5b59fed568541c093c804cc74eecb7e",
      "Id": "5ca712269b7449aa9f7223898b0076b2"
    },
    {
      "Start": "ea0f30632346440c9b25aa2e5c74f088",
      "End": "2c192d6e4658410db70908cfaf7f3531",
      "Id": "bf7572f601bd4536a7d46b2864dd8175"
    },
    {
      "Start": "fa6c2238b28842c2a0cc1d09e537c9db",
      "End": "b38f47023f064302adaa31b666d44984",
      "Id": "02d42ee6519343339fde8f2005bc13ff"
    },
    {
      "Start": "827445566f7742a0a3c92f3790917915",
      "End": "85a7b43c0ffb4d0d94af35fb7a11bf28",
      "Id": "7c737f4957924d809d67120b15a1665d"
    },
    {
      "Start": "c295f2c2989c41b2b0b243ca8c44c66d",
      "End": "673858382fb14185a967c0d81ee81868",
      "Id": "f1d95efb08b441e489913c21e2d517e1"
    },
    {
      "Start": "cac844e8e8e549b5ac578ea5564808f3",
      "End": "e3fcedec798a48e3b1b12afdc63660f0",
      "Id": "9e817faae34047dbb06a90429c8aabca"
    },
    {
      "Start": "cac844e8e8e549b5ac578ea5564808f3",
      "End": "02250e28f4b849c1a66ddf1e09a8a846",
      "Id": "f370631df0194eb48a1f9a1b83f7bc7f"
    },
    {
      "Start": "c8ed55e2958348b98b0c22854485661e",
      "End": "e9ff723096824d8ab1bac0c316848c38",
      "Id": "8cf809c743814a6eae8c7a1a3292bc5a"
    },
    {
      "Start": "51c305fbbcef478fbec0d487abdf305f",
      "End": "ecd91ed9d0f7462597e61f71b1446309",
      "Id": "c600eab404234fea885b4adcc8a2305e"
    },
    {
      "Start": "d5d8c2a6fb9448eb92f6396bb230333c",
      "End": "bfb3489c445a41c29e3f70391556208a",
      "Id": "b9bc20e81b02426ebc8e2a00f7c00352"
    },
    {
      "Start": "d5d8c2a6fb9448eb92f6396bb230333c",
      "End": "8a6899d2035f400ab385f4b5ff3a0de5",
      "Id": "1f14152595144e3bbbff7b453568c979"
    },
    {
      "Start": "465e284e2a334792a15cb7d10bfbff48",
      "End": "17b04b9bde854c8796cda19fb7acfd93",
      "Id": "77c8f834d96f4d5d940e7109ae44dee4"
    },
    {
      "Start": "c39745d714e248beae28c5592a81061c",
      "End": "6d2f3b916c0d4d7d82a5f35e0fdee323",
      "Id": "724883ad441f481d8ae1a1265ff3c205"
    },
    {
      "Start": "843608fc975c4bcdbe639a89d3300f50",
      "End": "5d2ce92cbb0a4d26bb968e3052ff7d25",
      "Id": "a7018728a0534aef842a0c6a93cb14be"
    },
    {
      "Start": "d8e8206c98f34c7ba5f0dd250914abb1",
      "End": "00d78d93a06748938a278c4c686eeb5d",
      "Id": "70280d1ef2b441e8acb30227bb1c6821"
    },
    {
      "Start": "0ee692999ed04408b729c2a5e39d8260",
      "End": "f82547bce57e446eb60914fbb96d96f5",
      "Id": "9548c93c31d9448880f2150abdaca49e"
    },
    {
      "Start": "0c47b0bcfb304a4e964ebe1b38901a18",
      "End": "f38f195eb216402daa3360292983f115",
      "Id": "bbba9b06e14746359045e4cfd8edcba3"
    },
    {
      "Start": "a721d4c82e894c7bbab62caa83604b69",
      "End": "5a8071b6d5df4181a9cddd968e393595",
      "Id": "488a04ac52a140e4bf98ce926bb059d7"
    },
    {
      "Start": "770b41f2b2e24590905267841e697db5",
      "End": "4c7aec2920074a0c93a5a5d87e90dad0",
      "Id": "12c9ec8602f24c268c15c22599281403"
    },
    {
      "Start": "770b41f2b2e24590905267841e697db5",
      "End": "22b888737dd341e3bfaf71996d9d22a2",
      "Id": "96ca42d1d01b43fe8b9b830f5088b260"
    },
    {
      "Start": "c21743c8142242ec9243f861fa9f8565",
      "End": "7618897dc52d4aedac44a5cc8987003b",
      "Id": "8f5f9246058d44689da179a83a4a7128"
    },
    {
      "Start": "a1a7a68d34e64d50956a77d823b91dc3",
      "End": "205c67968d734f539d5be5b069162d9d",
      "Id": "1e5a57e9ccc545d395c460e049e62397"
    },
    {
      "Start": "a1a7a68d34e64d50956a77d823b91dc3",
      "End": "f37690276d274240a5e307f203eea2d6",
      "Id": "f12558a7723647cfb4f7d99949350a84"
    },
    {
      "Start": "7f9b5ff39fda461c88431a436d082d1e",
      "End": "39af508f8722459db188be0f3900fb96",
      "Id": "9ed7af3c7a5b41bd8a750873bb32878a"
    },
    {
      "Start": "7f9b5ff39fda461c88431a436d082d1e",
      "End": "cd6c84b0333f4b15aab50131b21ccdc0",
      "Id": "baa7b37f41944e94b2ce8b05ed4d9ae0"
    },
    {
      "Start": "66aa214a49d342518e21b1bd6e47733d",
      "End": "56a7d27a274546888978504e39d68bd8",
      "Id": "62f94e7ef17a44fe8ecdfcd750f4f106"
    },
    {
      "Start": "f7b8c7366fce4c3d9d2a07288ba3b2c2",
      "End": "4d7dbb67e9494a07b0bcbdd73aa55b01",
      "Id": "d482b09acf7c45ce8df414904626360e"
    },
    {
      "Start": "d8dd45452a794e29b1a7f5c6a073bb63",
      "End": "b5bb6a26e8c84a2db3e98870b46ded01",
      "Id": "1352f53d04be4479bd11958fa0d6d2ee"
    },
    {
      "Start": "3f1e533a5eaa427fbcc092c876f9424f",
      "End": "3b6039fb71394c0f800e17888c8b7461",
      "Id": "18565aa504324929abe5e46048243569"
    },
    {
      "Start": "3f1e533a5eaa427fbcc092c876f9424f",
      "End": "7a6ab39799934ed297b1add64d115615",
      "Id": "6ce575a459f54621b0f90b9bc67b5ded"
    },
    {
      "Start": "93587a5ae8684838bc49cbdbba08a6fb",
      "End": "92edf3e97fdc4b2db9058ee9ba548596",
      "Id": "da804f196c7445f6898ffe9ad01a8e98"
    },
    {
      "Start": "93587a5ae8684838bc49cbdbba08a6fb",
      "End": "32c241a33c0244ca9a9effdb7798e318",
      "Id": "a32df137e2664cf5b7dc6b545f4efe36"
    },
    {
      "Start": "93587a5ae8684838bc49cbdbba08a6fb",
      "End": "5da36d6d1fea49a48b2bd09605a6ff7a",
      "Id": "0b2dfd46087649e08d2ca1840c838a53"
    },
    {
      "Start": "7cf70586dcf0485d8b91110236329948",
      "End": "cfcbe06b61504c95a98b911122008c59",
      "Id": "aaadbfab52dc4b81b904f4e3e3e8db5f"
    },
    {
      "Start": "12dde0aa812c4ad0882ff92fbb392b43",
      "End": "cec75094c18d4e19858e15907da9e4f6",
      "Id": "299ba7e87a9748a29731c1506cb993a1"
    },
    {
      "Start": "54ab7df642db4cbaada7f83c093b16b9",
      "End": "ccef859c90fd4c929e306b6681a3554c",
      "Id": "67e5463d665f49f3b1ce0e2db51613db"
    },
    {
      "Start": "8cbf40e7b9d04985952bc891873279cc",
      "End": "4e496f78472a433da23af92bb11c4ca1",
      "Id": "92ae477120f44892a95c4ac58799a742"
    },
    {
      "Start": "d78897d6e9684389a1eb7f83d2e90bce",
      "End": "3faadb15584b41d5a2d61e2589a48a7e",
      "Id": "ba7870034bce4b0bb0ff6721cd278681"
    },
    {
      "Start": "c3fec2ac245840b7b68bdb58515313bc",
      "End": "ecfa1c50e7664f65a8f80e8798053abc",
      "Id": "14aecaf17e6f49aca7765668903f0919"
    },
    {
      "Start": "da5eb2812c264af2bab5b272ccd4995d",
      "End": "29de3c044d4c4097b871fb916c075052",
      "Id": "6107075c8743465a9b6aa7dbb01a71d9"
    },
    {
      "Start": "21bdebd71b66443888a7f3451df43c27",
      "End": "650d05f2b1834294bc0d33abb2b7f6ba",
      "Id": "2a6d77f5d61446119192d46571513b60"
    },
    {
      "Start": "21bdebd71b66443888a7f3451df43c27",
      "End": "4618ea94d61a4e7dbee74ef1bed36e9a",
      "Id": "deed19e15512401fae6d90d85bdcf812"
    },
    {
      "Start": "21bdebd71b66443888a7f3451df43c27",
      "End": "70738b11af974b3786692b0571493b70",
      "Id": "6364b381cb64421da879509c5f14d1d3"
    },
    {
      "Start": "21bdebd71b66443888a7f3451df43c27",
      "End": "f0ca998675de4a8cbff7315fcfc7b822",
      "Id": "61c9f57d804442bab9e84677ee5b8099"
    },
    {
      "Start": "7c76662c48904ea4ba19d946cc2141b5",
      "End": "8a1ed1dbea244d6f8b2739fce0c01148",
      "Id": "5ed6d573a70c478187c56f22a442156c"
    },
    {
      "Start": "7c76662c48904ea4ba19d946cc2141b5",
      "End": "1fd7f1ce8a304793944f238d44263ce4",
      "Id": "d42f9e7d300e43c9b4cc6cbc22a740d0"
    },
    {
      "Start": "fe88b2c153774fa0b49906517eba0074",
      "End": "ae2205dc6b4b420bb3ca5cc5dae6a4f5",
      "Id": "3e549a57c8314124a8ce51069827133f"
    },
    {
      "Start": "194b415f6bfc48c1816141401b55aa27",
      "End": "3f5072cba91a4f58af3a97bfc96f874d",
      "Id": "31f90a48c4e34874bad15d3400c50e6c"
    },
    {
      "Start": "2ff033ffb5c6499698e5c38763af462c",
      "End": "d65214a1291a4fea95134669a0999bfe",
      "Id": "8facdd7f42094043ae7690e0d7ddbd61"
    },
    {
      "Start": "7c362f5e70be40f7844c8a62ff14505a",
      "End": "bfc0aead391344af95c6865cd7b52204",
      "Id": "c226f83b160847f083e5fc089d0566d8"
    },
    {
      "Start": "7f1fca1d488749a393fe24ea304374f3",
      "End": "d3bb107d798f4419b1ea5a84d9fb3019",
      "Id": "cfb60e6327314936a2460b6dd177c00e"
    },
    {
      "Start": "05d93fda179e416d8ff1bc88de5812e9",
      "End": "7d94a86cb6ff4f2e91619da356cacbde",
      "Id": "ffe486405ebe47edaf4ce21b00e64d22"
    },
    {
      "Start": "6d3fbac7092346bd9dbdb7f0dc736ae2",
      "End": "c408c2ac53b0408a80ca04b6e23e8f91",
      "Id": "ed718b2e69b645eb924be223e1392ad2"
    },
    {
      "Start": "4ac777438309434ca2cdfed465e7793f",
      "End": "c2d88c1e19f64da3970064d191a567c4",
      "Id": "91f5de8c0b6d45fe9205106548837655"
    },
    {
      "Start": "25eeb5fc46a54d2196f9045523369fca",
      "End": "1b9a8c6634204f2f9932bbc166f99b5f",
      "Id": "ccad6e0c922742f480bbb07799ad7af6"
    },
    {
      "Start": "c3db85280b344dc29dd2f5342468939a",
      "End": "a622374e4f4b41edbe09d9375b2560f5",
      "Id": "57ee3fab7bb04551967b844469381792"
    },
    {
      "Start": "c4b8f0a8b4074d4498389f2e7b29797c",
      "End": "d00223b6ab18442c90f3d112c2a26d99",
      "Id": "39b324ad6e4e4663bdb81f0d42926fa3"
    },
    {
      "Start": "c4b8f0a8b4074d4498389f2e7b29797c",
      "End": "7243bc97b39c4c7193879e7574ca6551",
      "Id": "117caa27bc4541fbb97015fc4ee4fa54"
    },
    {
      "Start": "41e2def69c454cbd965c016178fbf716",
      "End": "f3bba395bb4147b1be955828335d1d64",
      "Id": "b66213819d914547bb256296c0820623"
    },
    {
      "Start": "92c949d829024c43b405c402fa81bd7d",
      "End": "9ce6a56b87c74d7fa4deefcb6d577562",
      "Id": "c93448761a884692b063e28f39af8f0f"
    },
    {
      "Start": "7e3cc2926dc74eabbf6429f7a0436287",
      "End": "34da976bd80a44e89cb8622d483c9bd2",
      "Id": "a8cc851802474fac98e1d5ac7ec45839"
    },
    {
      "Start": "8f88a19cea4e4e50b2320e0f61defdf4",
      "End": "0aa0b9ea33e043319ea9052061868f9d",
      "Id": "fb69847d64044837a127643055af4dbf"
    },
    {
      "Start": "57503794c91b4962925cd8970e40ff1e",
      "End": "ff2b455aa9d24ef985d341876f6f1b3d",
      "Id": "6cb6b0e029b24fb1abc25c52df84f167"
    },
    {
      "Start": "778beee137684bfca0c599bb9952da4c",
      "End": "335c5ceb29a549119a5d4f26f28b11ac",
      "Id": "0a934d04f3d5457689ff82c3ce017da9"
    },
    {
      "Start": "60d33c0c03544b82aabd62ae8b1f1bf3",
      "End": "5b43e069dc444071b7ead6018efcb4f0",
      "Id": "0bc6f62b916c4637a784714cb00222d2"
    },
    {
      "Start": "eca6bb11f45c4a72970998c0c0a4bdc4",
      "End": "ea82f5a505dd45c0b9d28b56b8948dde",
      "Id": "1f8390640d5849548a3c90e03b3e070f"
    },
    {
      "Start": "6dd0277afe4344bebed9f4b7b5c9ce2e",
      "End": "e52e6c2b66b948468b15681240d0ad77",
      "Id": "13d8936220514b839d3a9566ffd09d87"
    },
    {
      "Start": "6dd0277afe4344bebed9f4b7b5c9ce2e",
      "End": "b9f1d207ea694f55af77af522160b827",
      "Id": "a8557f5c73684601a38da1552e99b1be"
    },
    {
      "Start": "6dd0277afe4344bebed9f4b7b5c9ce2e",
      "End": "f83f513eedd04f8489e6653a39d243bf",
      "Id": "f65c3e51a6014bbd88db1df302babc17"
    },
    {
      "Start": "6dd0277afe4344bebed9f4b7b5c9ce2e",
      "End": "00c1d86036bb402da843b98faac6be5a",
      "Id": "b9ed0ecf34b6416694bd5a7dba651e28"
    },
    {
      "Start": "1cc78b77ad9b42bab71061abd5e2ad2a",
      "End": "8dbe13497c26445da4002e00ad483e20",
      "Id": "fe0caa09c3f944afb6594441f9972397"
    },
    {
      "Start": "1cc78b77ad9b42bab71061abd5e2ad2a",
      "End": "8b807c2653c14d51a6848a6b48326d5c",
      "Id": "4b590d2ccf1d47c38adb30e35c8ef045"
    },
    {
      "Start": "d50a9c6196754a29a788402baf97bd3c",
      "End": "3e3a1806861d4237ab1ad4d9a1b7a588",
      "Id": "7bcf9750ebd04d07a5ea9f7d99ad0df9"
    },
    {
      "Start": "5ccf6b92f5e4442896fd47db173a435e",
      "End": "d7fbe2e7213347248408297b56595034",
      "Id": "d64b45f23f744dca950d4e83b1c89195"
    },
    {
      "Start": "f8c175aa577d4d00a56408e710526864",
      "End": "a9e439049bb04d7a9725def772f9e110",
      "Id": "e15ab7fb125942dc8186dbf9a2f52a24"
    },
    {
      "Start": "f8c175aa577d4d00a56408e710526864",
      "End": "7459e6e160464098bc11110c9fa43179",
      "Id": "87719eb4e51341c588c51b2731f5a335"
    },
    {
      "Start": "454295e966eb4d8da2f57fdcfdd0f57e",
      "End": "f047b7868b5a482595d1cca277fa12be",
      "Id": "a0d252aafb4148b5acd07453e0c247ef"
    },
    {
      "Start": "17ddce5c3fe842998d05c601e6ca3027",
      "End": "880ef3d3863c4981946a36aa6743261b",
      "Id": "0036f4b881d24d5ca842c33512305da7"
    },
    {
      "Start": "7b3a42b7f9584378909deeaaf6161a47",
      "End": "2e22ec9b833e48498ae2c853b949328d",
      "Id": "4cf1ad4dd4e14606a548eb0b94732e2e"
    },
    {
      "Start": "774ae1cb56084bb6af10f04261168760",
      "End": "46ae1adb8ce740c09dc5f853b2b5231c",
      "Id": "8b18929d163340428b6adffe2d34fa84"
    },
    {
      "Start": "057ad64437b5496cbb3e5fd49935d8de",
      "End": "45ac9e5977974db3a3e1106f204a3ec0",
      "Id": "f6fcb245fa034abb94770329bd1d7592"
    },
    {
      "Start": "61747fab78e8478093c1b7e9b972f49d",
      "End": "2a4cc8721f5a4b959d44291f5f85d290",
      "Id": "a20f1aad7e7a4fa989298d38ab197f97"
    },
    {
      "Start": "447885faf75a4f98ae0c076509955ef1",
      "End": "542d2240f1cb492ca40850893a057504",
      "Id": "933936ff3b244373809af68227ae888f"
    },
    {
      "Start": "ee8e48b8950c452c88ca503fb6ae4647",
      "End": "5a570a6d3c6542c6851b3191e0297289",
      "Id": "f60859430cd6472ab2a86d785341aa9e"
    },
    {
      "Start": "592f99aebb4e437ead76e03b126c3097",
      "End": "3ee3aae2b43e4b89b6ca8eceb28ea4ce",
      "Id": "4a5b45cc532b4617a9c4f7daf463c1d9"
    },
    {
      "Start": "592f99aebb4e437ead76e03b126c3097",
      "End": "323a51b46ec94e849384cf38b740a9d8",
      "Id": "4d6a82b6b1fc4514976c6a234c80f513"
    },
    {
      "Start": "d9648934537f4aceb6a1649a88d15de6",
      "End": "9c873d7618b24a93bce994a32cbb8698",
      "Id": "1698d32ba5c3448587e5b922b2b99e99"
    },
    {
      "Start": "56d6157bbbf64ea193a42db5adf56ce5",
      "End": "e2228fb520ec4ae09d63fda72cf139db",
      "Id": "fb7138d370084f85a99bffa825196884"
    },
    {
      "Start": "5320fa85a0c742998d91c1787b471643",
      "End": "3e959c062cc44d6aa9a39b70f9308310",
      "Id": "01ec7ad71384467dbf24fe88b75dc6c4"
    },
    {
      "Start": "5320fa85a0c742998d91c1787b471643",
      "End": "a76b3905377c462f8d50653a80ab9c1b",
      "Id": "674e6eab592545c59e1035edb1abc11c"
    },
    {
      "Start": "5320fa85a0c742998d91c1787b471643",
      "End": "04bccf47df824b709adca1d2d644da96",
      "Id": "f8cfc3768b7d49e09b17c77da1e2636c"
    },
    {
      "Start": "e91643f6b5334163b0a328d2b7cec600",
      "End": "a603c4865e5b467e82e6378597c8a76f",
      "Id": "b1dc1693e2d4442c9b4469b3cc17b902"
    },
    {
      "Start": "5e67419c30fc43f1a01737dbe2dca22b",
      "End": "83a032dc82724296bbbbf1c851a7dc87",
      "Id": "4a3bbb6e2db84ad7aed2b08c9f5b7fae"
    },
    {
      "Start": "91a013a4487648b38691ecc126ec42fe",
      "End": "bdc23bf6734347179a83aa97c6a7ba9f",
      "Id": "b4ea7dbb1b09426988c5776d2ac13d99"
    },
    {
      "Start": "4d064757231a44078ca211b42ca2cbae",
      "End": "7ff64ff957e34debaa3fc1793cc1b0aa",
      "Id": "3ae10635a645492686a0d1b838c356e7"
    },
    {
      "Start": "4d064757231a44078ca211b42ca2cbae",
      "End": "015dde98b3f94a6584b4f04fc62da0ea",
      "Id": "13421c6d05a14654a0678303367b7745"
    },
    {
      "Start": "4d064757231a44078ca211b42ca2cbae",
      "End": "464b2a04685a4d94bafc375d44d39b51",
      "Id": "6fa7c5ae7aab4633b2e6f3441455206b"
    },
    {
      "Start": "c035e989f5c7492789039b3af429392f",
      "End": "f69703e404a14b5999ec3be000675ed4",
      "Id": "fdfe9e090b2a435786176bd5416c7724"
    },
    {
      "Start": "c035e989f5c7492789039b3af429392f",
      "End": "d3cc8aed8ae84f00b26f0247512c00c2",
      "Id": "a24a44501993404483341ee71ea26be8"
    },
    {
      "Start": "e064556a01904768b7028cfc9759f9f7",
      "End": "6e6ea1e374e441989851c848b5b36f26",
      "Id": "d58642455c8c40df91a056b0a5ed0b8e"
    },
    {
      "Start": "2f19b2ac507f44eaa6c9eb896130006b",
      "End": "3a246f4e87f84f5083b0446a31fcc172",
      "Id": "df4c302fda4045cf984dadf6bd080d35"
    },
    {
      "Start": "ca5caf107bf84382997598e5f79091b3",
      "End": "7c379aa91dd041e88401e0a6a19c068f",
      "Id": "9c5fd91245864bd998260e2a6d85d045"
    },
    {
      "Start": "ca5caf107bf84382997598e5f79091b3",
      "End": "0519180e396f46fb9651410d6b35bb60",
      "Id": "29f63d14ae8942d48b5e3fb20c3f98da"
    },
    {
      "Start": "7081fdbdd3464141a097012bf6ff7186",
      "End": "c7520ed1bf4e4bba8e66a059a692a186",
      "Id": "4593fe79337747a7b3b7e49d40ce6283"
    },
    {
      "Start": "dbaec42b72ca4773bb1a55cc11dfc049",
      "End": "527f940646164be8858715c76da0ce82",
      "Id": "42c5da56d11d46caa0f9b36977917915"
    },
    {
      "Start": "3dc00fca214d496787d6427dccd0f37c",
      "End": "27862df65d34483ebf04603b56dc4d44",
      "Id": "6a67c0294c54423db42ec5e3281407ef"
    },
    {
      "Start": "283caf656e9a45cd8c12f1fa4c9e0c21",
      "End": "479f0d8e83034e3286f2c4e1cff16482",
      "Id": "e0106fff553a42f7ad05863c2b0b8728"
    },
    {
      "Start": "64ccf2d0ccfa48f1a9c64887bbbde839",
      "End": "892c25e2fa8449e29c23b7d4af4ce5a2",
      "Id": "f35c3b6fa7404ecb85c27e02840aebdb"
    },
    {
      "Start": "89686e022d884120a4e95ed25659ea26",
      "End": "a9162adb0f0e4b3da5e36b18f7473ee9",
      "Id": "02edca2f0e8943838ecb800eef654e37"
    },
    {
      "Start": "89686e022d884120a4e95ed25659ea26",
      "End": "9f6a678e7b7a4cc09f30d28f5857cdd1",
      "Id": "0016d059f58b4771bf89a549ae5b203d"
    },
    {
      "Start": "89686e022d884120a4e95ed25659ea26",
      "End": "27191c6451c046e3b57968787631f593",
      "Id": "054f72df5ca847f3a4f3cfc0bac08c4d"
    },
    {
      "Start": "59690b0b67f84e9487e81ecadc941577",
      "End": "bc2830b39af94cfa8a0e8009806f4325",
      "Id": "c4d22f6e34c047fb81b330cc2fa87e1a"
    },
    {
      "Start": "59690b0b67f84e9487e81ecadc941577",
      "End": "84e281cf80a0459993e6077955eee817",
      "Id": "8bd304d6353a415e94b2c8d1ae3aa764"
    },
    {
      "Start": "205ab99f63c445cc873a10d4dac434d5",
      "End": "8bcda68ce10c4e35ad30e28ee323d69f",
      "Id": "acb17687d21b41de9c85d185ac73b7db"
    },
    {
      "Start": "4a6f8e025fec4769a846cfa25b840a5e",
      "End": "ccd7b20523ed456ea63ebb1d14d121da",
      "Id": "7da24b45fbe545dd951bcc272d7972fa"
    },
    {
      "Start": "4a6f8e025fec4769a846cfa25b840a5e",
      "End": "a17c6f5046ea4d32b97ae25ff1e4c756",
      "Id": "533e8aefd7f24a41b74ffc0c4d11f7dc"
    },
    {
      "Start": "4a6f8e025fec4769a846cfa25b840a5e",
      "End": "93c85c66af2346da9a44e5fced2b6e19",
      "Id": "78af89d5330949f2a378d5975d499531"
    },
    {
      "Start": "4a6f8e025fec4769a846cfa25b840a5e",
      "End": "a1c3a260562d497283d388da814c0eb3",
      "Id": "ab7f3d016d3c4799b0cdb8e911eef6cf"
    },
    {
      "Start": "4a6f8e025fec4769a846cfa25b840a5e",
      "End": "f81e0dfccb64453b8d0ffaafcc6c9ffc",
      "Id": "f0dc2d916f2f459eb11f89917bdb31dc"
    },
    {
      "Start": "d1ebc83f15e046bb93b0e18d7939ec52",
      "End": "6a630009126145c28f4f3fee596349c3",
      "Id": "c7837269095e46248e485e4438ae436e"
    },
    {
      "Start": "d1ebc83f15e046bb93b0e18d7939ec52",
      "End": "26c0dd45d3e047e7b7ff247779c598b4",
      "Id": "eca862b443af409584aa70fceb963407"
    },
    {
      "Start": "97bb25eaf69e4719916524ef6e1412e6",
      "End": "acea751cffc246ee9f6b27497a668a4b",
      "Id": "9b58553fc7fc4cc5bf285c2b96b27c04"
    },
    {
      "Start": "97bb25eaf69e4719916524ef6e1412e6",
      "End": "13ea3a12325e4e70aa092b4d7767bc66",
      "Id": "32bfebb524d34262990b7c9e132d3a05"
    },
    {
      "Start": "c9048010a4004372a09a6273ca3d9e9b",
      "End": "64e5513e931b4ffe8d2dff01eab9b0ae",
      "Id": "9ee932933e134e86bd4e3733ec42b8d3"
    },
    {
      "Start": "c9048010a4004372a09a6273ca3d9e9b",
      "End": "f523b825923941c085afa5ea42f35847",
      "Id": "e5f4e0ada94a4ac5abdc394f8e707735"
    },
    {
      "Start": "e4ecb4e516db4b5489f6f1afe1883d76",
      "End": "961be2cde1a64337a5e59a4cdf25fd65",
      "Id": "889a7210b13e4d888efe7051d799cdb4"
    },
    {
      "Start": "ab70ba61a2e649cd827599737231929c",
      "End": "7ffcd86702724eb19952ee83ccbbee65",
      "Id": "8dbe349e7c3c491b8940daa808866a2c"
    },
    {
      "Start": "98ef0f28aca24340946ea34fee39b61b",
      "End": "40f6aa73eaa549a38a67182e5a86bcbb",
      "Id": "9eaa12429b874260b935eaed8756c95b"
    },
    {
      "Start": "9fddefe7fd9e4c22a856d06d410af7b3",
      "End": "954b07c8d78c49569cdc148e8252f3fe",
      "Id": "21f0d89c254549459e2300e5b9e657ca"
    },
    {
      "Start": "9fddefe7fd9e4c22a856d06d410af7b3",
      "End": "5568ee12e17a4c04940b21f46f811b35",
      "Id": "5f225f117f6f4d879ba945ce9d18cf0e"
    },
    {
      "Start": "222bf50285ba4471b8fe212bb11e0a7f",
      "End": "0c513c70dee8476480236bd0af862a3d",
      "Id": "db9221f7a8ee4741bdd39053156d8d46"
    },
    {
      "Start": "ee488a38f83948be96dcd966e42bd5eb",
      "End": "485795d981e14c019f417b32c2397029",
      "Id": "a16c8d5c890d43cc978c979693633075"
    },
    {
      "Start": "c104867822174f73a8aff174a45e16b9",
      "End": "21d32c7e96f643c48594f719f43a9abf",
      "Id": "6db6f8c24d274723891f95b334550e19"
    },
    {
      "Start": "e3ee93c4ad9a42beb3014d26af375661",
      "End": "4b79eeb0e09643c09aeea3e7ae105ac1",
      "Id": "ac7917b77d0e4f9582edd0f79bfcbbb2"
    },
    {
      "Start": "e3ee93c4ad9a42beb3014d26af375661",
      "End": "0c6ca1693daf4e938fa6150a6c5dbddf",
      "Id": "3d27200ad1a445fb9d939c1b3259f3dc"
    },
    {
      "Start": "e3ee93c4ad9a42beb3014d26af375661",
      "End": "ef3bcddb8639452c90d51b496b9e7799",
      "Id": "bce96b31c5124b98b41cdbf4b06cfb93"
    },
    {
      "Start": "704a7fee9a6044c4ba5d4e3a1bfdca83",
      "End": "dfc9476ba10044679016bd6ae2ff4942",
      "Id": "56e8d15afc1a487086dc382c25ffb6c2"
    },
    {
      "Start": "704a7fee9a6044c4ba5d4e3a1bfdca83",
      "End": "3abdba888d2c4b9ea5694a98d79fa62e",
      "Id": "19655f58e70c4143a2eed1bb9465bdf6"
    },
    {
      "Start": "a6d5aa31be89419c9958c3b2b6dfafa6",
      "End": "770e98469f50465b86bdab7f5fc1023e",
      "Id": "7c8b5431af444b1ba05d0483aa9bedab"
    },
    {
      "Start": "af1135f0dfae46cdb471826e772e1b55",
      "End": "f3b2216ef1a644b78d27b156683c0be5",
      "Id": "cf9da26ec4394cea82074ea926628817"
    },
    {
      "Start": "af1135f0dfae46cdb471826e772e1b55",
      "End": "7d7c81cc31c44991bedfc46c3df38f31",
      "Id": "2eb4e5cda1874441908a1008b9a15cc5"
    },
    {
      "Start": "67fc815a6aec4793b0d003fab1aaf5a8",
      "End": "278b1826955041e297b7e109bd627043",
      "Id": "76055ab567394ed0b99aad805c5638c8"
    },
    {
      "Start": "7bdf8ed8176641dbbf17a96f9444a8aa",
      "End": "155f589e81d242108edce7e383c42efc",
      "Id": "440cf486c5f643cbb662c4ad02fc6c31"
    },
    {
      "Start": "547ca899b4b64054a2a82763ee147419",
      "End": "affbeb91f2104859b467bf5351e38d8b",
      "Id": "30245dc7126840dfa8ee352840ef0ad1"
    },
    {
      "Start": "547ca899b4b64054a2a82763ee147419",
      "End": "2e1f594797de444b8af66acbbb72e516",
      "Id": "439094fede994eb5bfac3c69392fa20a"
    },
    {
      "Start": "547ca899b4b64054a2a82763ee147419",
      "End": "b2e1cf9527db4a55becb9fa193a851ac",
      "Id": "030d79509e8041719cc811959a55431a"
    },
    {
      "Start": "547ca899b4b64054a2a82763ee147419",
      "End": "a12efaf5415847ca93376bb5550fb3b2",
      "Id": "711941be37aa4cf8b418ba947f802402"
    },
    {
      "Start": "ed4cca5e9cc843fb8dd8b5ab69baa42d",
      "End": "e0ebdeea2fc04d8eb1c76f28b89e96d2",
      "Id": "665be1e9c8e14df1b083b6d78a1cbb9b"
    },
    {
      "Start": "ed4cca5e9cc843fb8dd8b5ab69baa42d",
      "End": "fd1465edf060439aae5849509fb3f9cf",
      "Id": "233184e3c0ff43089b142ee49291c0dd"
    },
    {
      "Start": "ed4cca5e9cc843fb8dd8b5ab69baa42d",
      "End": "f220ddf104f84a8caae2b3458450b196",
      "Id": "a98895d5ecb248f385e31ef6a86734b8"
    },
    {
      "Start": "0cedd177dcff4951b9f915aea7871b80",
      "End": "262e6f0be8dd4a2aa38ecd0546d598ed",
      "Id": "7fc1a100b8be47939169703a6a04d110"
    },
    {
      "Start": "e1b613a610964567899157f4c6427910",
      "End": "223ff3e4fbf24895a7aa686393307b6f",
      "Id": "a5d7ff8b07104f0da8ddeedf6702dab7"
    },
    {
      "Start": "67ab17951b29448392c2d3558d30b9b6",
      "End": "828ecad83d194e30be3d401ba27eb892",
      "Id": "9a5939ac4c0e450eac4498912bf8a4f1"
    },
    {
      "Start": "50954b9cf4a140c19a6e29ba3fb9827e",
      "End": "9d9f4e1bd8a84c928b8f907ecf49dafc",
      "Id": "a811eae8cb734b3e90f38f0894379bec"
    },
    {
      "Start": "62076cb421b047d0857a881f376897eb",
      "End": "33684ab2444b4d0c9fdd5d3a413e1bd3",
      "Id": "48aababf7093435d8f57646006d297da"
    },
    {
      "Start": "c05c946d3753406aa69a0c978ee26be4",
      "End": "213c1605902e4fa599436cbbb8477aff",
      "Id": "797505e67661460aa950abc7d520b8c8"
    },
    {
      "Start": "6359a125910c4a5eb661467b5be15c63",
      "End": "a7ab074e728f4239aad349aa441c4e93",
      "Id": "a0a0149dec5c413e94f709e6e78f53ff"
    },
    {
      "Start": "4e49ee38d8d7419186694069340d6345",
      "End": "c2fb433d3e0e458295658f731509862e",
      "Id": "10e1045532b74e99ba69a44ece57303d"
    },
    {
      "Start": "0be63def07014239a7d87b3183c8311c",
      "End": "faa296346f604bb3b6980805d192b7c9",
      "Id": "e14fefe0170b40f5adb861462f026339"
    },
    {
      "Start": "9adf595a9f474450954ee6054501cdf2",
      "End": "174afeb1db16419299a2373fe658da88",
      "Id": "48e73f77f55f4207b095c1b07b12b2c1"
    },
    {
      "Start": "9eb186e710fe4dcc98b9edbc0df71c2a",
      "End": "a738e87041064496b8a0d0e88639de8c",
      "Id": "fceeca3b88b7478896e569aa271b803f"
    },
    {
      "Start": "9eb186e710fe4dcc98b9edbc0df71c2a",
      "End": "7ce8514fd6224583b9294adf2fcdbe49",
      "Id": "cc05cf4dec68442e9bc3275213f8a820"
    },
    {
      "Start": "5b3d14701cba42249323adb8a69ec1ce",
      "End": "3fa432eb6a0341b7b79db56efa219da7",
      "Id": "6216d42c3f1948f3843db3bc2d26cc4b"
    },
    {
      "Start": "f8a51f1230ac4e468be03cd567715b06",
      "End": "f78b1bced54a40089dc0b079887e4968",
      "Id": "9543b47fd1804b49a2bcf1e240ea7ff7"
    },
    {
      "Start": "f8a51f1230ac4e468be03cd567715b06",
      "End": "df28412643214eb5a87124a4cf4a5d5e",
      "Id": "14f31ad43e4546818191574752726b79"
    },
    {
      "Start": "f8a51f1230ac4e468be03cd567715b06",
      "End": "b12d5a17f620421ebe5be0eb5043b794",
      "Id": "ecf4ac042f984314a715b0922249a5cb"
    },
    {
      "Start": "1637cb67ec654e669a3943e020b1386e",
      "End": "62163a57907e4c1891db7031f7a90f88",
      "Id": "114b5748e32a48cba0234485a07bbf25"
    },
    {
      "Start": "52400b32d7bd4103b3ac1f376e627464",
      "End": "39da8a1e14ad4a518015d7ccac562184",
      "Id": "a636e709bcb2475da155fd430d126558"
    },
    {
      "Start": "bdc4741d9c5f4678ba2dfc127b3c61b2",
      "End": "0996eb4f31ac4ed8a07c7ccd5efdd0e9",
      "Id": "9028543e2a3c41f1a2c1fa4c05bfd630"
    },
    {
      "Start": "7a53f663e36742acb96958edc0607867",
      "End": "8ccf3da593244ebc8c80466b9ea44236",
      "Id": "4bdc72e0b16f45a88db5a180f52f5c8e"
    },
    {
      "Start": "7a53f663e36742acb96958edc0607867",
      "End": "ee8e0ee991a44616ae515ea0c7ac780c",
      "Id": "7ed915a63c1a4eef92e428cb6292d966"
    },
    {
      "Start": "7a53f663e36742acb96958edc0607867",
      "End": "93dbc378fd6046818ed0335421a9b228",
      "Id": "d7aaf8f4534740ffac1ce5cb4957b0c3"
    },
    {
      "Start": "7385c99592314eb2b3654a32f87aba69",
      "End": "0bff7e2e3fdb49b395128ffadfd9fb10",
      "Id": "e541dea4c0df42c89a1fcee37ea11b30"
    },
    {
      "Start": "20509b3337584771811623ab99d2e8c0",
      "End": "320c3161a866405b834f18e850a5a761",
      "Id": "87c0e654ef614d9ea9b1cf80f328d066"
    },
    {
      "Start": "5a8f9a7e8eaf47dbb863984376024372",
      "End": "e0771f277fad41fa9300d149336c484d",
      "Id": "03c35e564149433f823e32e02d737a3a"
    },
    {
      "Start": "80cd5ef72f1c443ebeaa2a00c4bf3284",
      "End": "94eaa0b7ddf0469ca31415f58373581b",
      "Id": "7f7f663db1334f1f831528367c0b0696"
    },
    {
      "Start": "16361bc481924556966b9abbf44eca78",
      "End": "c07fa7faddef494cbcbc10f12b69c037",
      "Id": "9230aee79a214cf1bac3abbaf0c7ed0d"
    },
    {
      "Start": "150ae69aba5f457ca7197b2140d53eb8",
      "End": "57f47f716eb44391bb0ac4b16d768902",
      "Id": "fbeb9026c1f24db283dda14c8863a5cb"
    },
    {
      "Start": "8fb37ad3a85246359404dac2cd038429",
      "End": "010f90d0456a49899d12a02ac300d3e1",
      "Id": "c8170ad54d4945b287c94b278b6d8c6c"
    },
    {
      "Start": "5b30d51416684ca99fba9c820d91cf41",
      "End": "5b16c86153634fd68cdcb97c9d793487",
      "Id": "3f6f38db739a416ca0656ac969b6f0c1"
    },
    {
      "Start": "b356275ecf7b4bcfa517fb994988feab",
      "End": "6e790001dd3c4c23be6eb9b7a7851ebb",
      "Id": "54d07b6c4bf64bdb8b7602cfff9279d5"
    },
    {
      "Start": "b1b809168af34316b3ec62e3e5be79fc",
      "End": "507a589249a94539b6df08cb8d7523b4",
      "Id": "f284f5e7bdc84eaba4910cc9735d64c3"
    },
    {
      "Start": "41a5100a2fc544919f8e89310d43b1b3",
      "End": "c5425f5645854085a970c60ac6376f68",
      "Id": "2a6ec8c2336641ddaf5c33c93995ba58"
    },
    {
      "Start": "41a5100a2fc544919f8e89310d43b1b3",
      "End": "a0d4a3f432ba4bd39e6cb05c8daf92f8",
      "Id": "8ffb7daf58914434b2859ec00dca84d8"
    },
    {
      "Start": "41a5100a2fc544919f8e89310d43b1b3",
      "End": "4fc4dfedca4c4c6e9b13c4e0fe9ea6d7",
      "Id": "3b4bfbba7fa94054b2ea64f19233e222"
    },
    {
      "Start": "3d63f4faa53049149647556ca62871e1",
      "End": "ed33a92ae87744cc904f2871ef9d118d",
      "Id": "8f8d4ff5a0444abf81051a8b31d92ea4"
    },
    {
      "Start": "05caef533ec8472581a14e028fcadd82",
      "End": "dbf83b9a84b04f2e84c0a1071d4d984e",
      "Id": "90cf15e6ff9d4bb9acf8919140baae08"
    },
    {
      "Start": "05caef533ec8472581a14e028fcadd82",
      "End": "99b3ae32a830434e9342f464e168ff91",
      "Id": "97fee30f17fa48419a6c8a4243363871"
    },
    {
      "Start": "ace0992a2cc54bfdb29f280b312ddc0e",
      "End": "e8b3d0ed19104c968bf80e9a1e9efbe8",
      "Id": "0cbf038601714d1a82af0d7dc21d5d13"
    },
    {
      "Start": "b7054859f3514a41be99c432fb00dc97",
      "End": "a6a1780430f14f25b79eef029afc4456",
      "Id": "e19b3b07569a4fe7ad9973f69a38848f"
    },
    {
      "Start": "8bc37c9d45f74d3a8a5f9f3ee422fd9d",
      "End": "9647a61ebf0e4d66a0b31f7967c6b16a",
      "Id": "eb4a057eba72439bb9ebd69e83c85bff"
    },
    {
      "Start": "e8994789242d4f3fa6dca334d2a76f5f",
      "End": "bde3f605d57145aea2351ac1714b19a6",
      "Id": "450dd6c2a1474941bb837a46d1ea0c4d"
    },
    {
      "Start": "c4e2637fbd834c45afbaa3cc3b5fd35c",
      "End": "65893ab3397d48e786f62594ae53685a",
      "Id": "fe7187fdb8d846ff92cd25f44d9405dd"
    },
    {
      "Start": "c450e62a285446459c0f19ff77e90dd6",
      "End": "c8543b3f009b47159b646093b5709ebe",
      "Id": "d85eb380257640e6806c3341db4787f5"
    },
    {
      "Start": "2295e136e1f74f9f8740a01690e6ea50",
      "End": "95db2645e72f4edcade348ad5443eb8a",
      "Id": "7ce70a4a4bea4ad0911770653a5150a7"
    },
    {
      "Start": "5a1c090325934639b95a93792f259470",
      "End": "0beb2bc349964764ab86310c280a4b3f",
      "Id": "b0c42949735345019ed3532d431a137c"
    },
    {
      "Start": "7d72b6bd6fb145388ca6eb09a766935d",
      "End": "7dea71c4f6e742708c20e6e9850b0bd7",
      "Id": "a504d9698eba4d1baa4be5f87e79ce42"
    },
    {
      "Start": "b7e1d727ac35493ebd641ec2f32adbd8",
      "End": "06f3dad9e1b74acd8e22b6cda312c58e",
      "Id": "cc4973d9ddd448a191e1a9a073986aaf"
    },
    {
      "Start": "0e796c276c41473d91d025f0743f2d0c",
      "End": "9e94717b42e041ca92b2fdd8b23bc190",
      "Id": "3edbe43ed5654d838b5d9f2dbe3aac1d"
    },
    {
      "Start": "0e796c276c41473d91d025f0743f2d0c",
      "End": "139d95b33c574bdda9bc7daefbb8b01d",
      "Id": "ea6fb13405ad4899b84860874888d6ed"
    },
    {
      "Start": "0e796c276c41473d91d025f0743f2d0c",
      "End": "dd02029cddff4dd18aa90b2f93143e62",
      "Id": "14cf6bd157e449d3ae9ab027f4a19c1d"
    },
    {
      "Start": "0e796c276c41473d91d025f0743f2d0c",
      "End": "19658889b4e34586b2f460853805041f",
      "Id": "1c96102de8fc442782f3d01ecf336d0a"
    },
    {
      "Start": "0e796c276c41473d91d025f0743f2d0c",
      "End": "b1c076c62bb14ade802f6273eb8db430",
      "Id": "af47f38dcdc74304b1a5c73799427f0c"
    },
    {
      "Start": "672e15dc45124be18e9d5403ea4d16c5",
      "End": "31ec0de69f0a45ecbddb9db8592df1cd",
      "Id": "d6c73863f1cb4a78ba8d3ae02e5177a7"
    },
    {
      "Start": "a8ac1cbcadab496e984409d80a70dfb4",
      "End": "d517609eff764448b611f07deadb457d",
      "Id": "ff698e0aa5104c7087162ea0c62393ee"
    },
    {
      "Start": "a8ac1cbcadab496e984409d80a70dfb4",
      "End": "5c01cb9182fd40cea7f6e97cd9d4d7d6",
      "Id": "db01aeb2e2574887a499acc4c23586ae"
    },
    {
      "Start": "a0cbbfdef1104ba99003938b7aff8cee",
      "End": "d4bdbc98d7854c98973252b6822c0932",
      "Id": "d1a479127e0f441fb4812f54c928676f"
    },
    {
      "Start": "89c460601ffb4f8fa18e5c204f969b7f",
      "End": "a3166bbbd53949d386551c1cd3c42bb9",
      "Id": "0b680081e29e4e4ca2a5f45d5ef8c381"
    },
    {
      "Start": "7b3cc36e5ce44f408336517ccad41b6e",
      "End": "912d78e1aace4e39a83294d0711b5c44",
      "Id": "376e2bffdb8b4f1db705fcd6e4c0985e"
    },
    {
      "Start": "b9254b66eda34dde9dbb967eebcf6920",
      "End": "4c41500d69984bb1b689025d9f258492",
      "Id": "3e7f08c79fe1451a8cbda42d269b3d7c"
    },
    {
      "Start": "1b3630186a364e7e9d235ee6c53ef4de",
      "End": "9440e930b64f40ef98d41010ebde0517",
      "Id": "78bae6bd33084559879598b0d3bd3a07"
    },
    {
      "Start": "789f4fc6909a4a868e29cf75a25bab87",
      "End": "5174edf4bfaf440c9b326ab6af218d99",
      "Id": "8ef978c94c8d4e69a99ecf4276fed970"
    },
    {
      "Start": "21746a4edd024f46b8f16c04172b0573",
      "End": "0880d1ef31e34419b800b908c79cad60",
      "Id": "2c2707db82464feda048f43d22f592d6"
    },
    {
      "Start": "21746a4edd024f46b8f16c04172b0573",
      "End": "4b92c092309a4544927a3198429fca02",
      "Id": "11749c08b85a4a6a8b6bba3017318529"
    },
    {
      "Start": "21746a4edd024f46b8f16c04172b0573",
      "End": "0c99cf53499a4c7584686675998607a4",
      "Id": "0a019c7ffe3e4837992e5a3d9c0bcf98"
    },
    {
      "Start": "73846d67cbea43c3bdccf6da1cc41a1f",
      "End": "60d1e74519384d1ab2997b63a03491e4",
      "Id": "1b35b21bf9f0484f83c663ef9a1ba22a"
    },
    {
      "Start": "9de21603e21346fe8269076a6a4c2868",
      "End": "9b1fd4b0cbac42d7a27e2306f07c63bd",
      "Id": "73b4c3bfe7214a0a95c671bc2c812446"
    },
    {
      "Start": "7045a2647df7484fa5ea48a1adac2cd4",
      "End": "4513e13ed7f449ab8eba9f7cf0578804",
      "Id": "7e31aa4924ab44c89e7fee991f324ac9"
    },
    {
      "Start": "30786f49db4142b5892742cf442400ef",
      "End": "1e51a24f104c4977aa20a21b5a6a4f6d",
      "Id": "cced1d2a6acd49678f17b1dae483d221"
    },
    {
      "Start": "3dd51ba1f94b4bf395f57cf300168362",
      "End": "455aebe1d8ba4cedb32220e9f46a43f0",
      "Id": "a19e0131531f488bbae37dc26f7f4399"
    },
    {
      "Start": "297e5121d7de4021b9bc4ff07fe635b8",
      "End": "5d0edd8402054042b2bb6c07d2a7ca55",
      "Id": "9aba6ed8d75842a8bd7a595bf00ca725"
    },
    {
      "Start": "6bcc55a2541f48c1b4ca0099f1f5b5cf",
      "End": "2c5912a2177547e19028756de2c421d5",
      "Id": "ecc0be1742024736b4e3a990435ca872"
    },
    {
      "Start": "b1afb7471e61470496ebce2f1d751e2c",
      "End": "2c57efb50b91486c93dcb4db42408bfb",
      "Id": "d4531596865d4eb1a810098afc3c8bc2"
    },
    {
      "Start": "b1afb7471e61470496ebce2f1d751e2c",
      "End": "0858729130374e14af55698d611378f7",
      "Id": "8577149e80a146ecb64decdd429f5a2e"
    },
    {
      "Start": "b1afb7471e61470496ebce2f1d751e2c",
      "End": "793573986b874d60aa9c9ed05c0e81c2",
      "Id": "5143e9ac7e09445e9f0ea7a2a472ec57"
    },
    {
      "Start": "5e800748eb874b60b92f66b90ee72653",
      "End": "6366ba85f54448b2ba63fac4f3c98309",
      "Id": "3d1b351286a34242b39547b8755922a0"
    },
    {
      "Start": "c1cfd8b3d9bc40598e46eb8be4f871af",
      "End": "d9b7a707e0d9475493f994f1d2c78bc5",
      "Id": "244a3a73d1054f1aa0ec1d4f671316f1"
    },
    {
      "Start": "c1cfd8b3d9bc40598e46eb8be4f871af",
      "End": "90f86ccdfe4449d5bfc9154f9340adff",
      "Id": "a3aab626b5a1489f8ec169bd8c07885c"
    },
    {
      "Start": "c1cfd8b3d9bc40598e46eb8be4f871af",
      "End": "f0a54620055a4d5da22afc008d16c62d",
      "Id": "d03d5cd600ec49d1978de723911ac897"
    },
    {
      "Start": "ce21b93cabdf4c668a6805276af50893",
      "End": "147cd31af18449b8a00e81b7ae9ebc65",
      "Id": "6584f8366dfa451c9790782d94f20afa"
    },
    {
      "Start": "493eafc96e504a479b50824ed0d0dd52",
      "End": "3a136e2f209742ffae72bc10e1746f1b",
      "Id": "cc6927b2907f47caabc87b8fc1cb470f"
    },
    {
      "Start": "3eafed99dd5145c3bf8bd4eef26bdb26",
      "End": "078977f3038944768d315b22c3ab8d6f",
      "Id": "74d0d8f72ed648d1bfebc2b5b84eec6a"
    },
    {
      "Start": "22dd59eacce1459b88a91e297b898d07",
      "End": "3c60c5d945a5400996f4623ca26cf2e4",
      "Id": "441f01f07bf445fb8d30739a666c35c8"
    },
    {
      "Start": "22dd59eacce1459b88a91e297b898d07",
      "End": "50ea7244b02c47e8b6b1aada04dc6954",
      "Id": "a9e7c254d2c04606a82af2eda1db94cc"
    },
    {
      "Start": "22dd59eacce1459b88a91e297b898d07",
      "End": "40b1ecb26d434ef1bd3a27d429a85b0b",
      "Id": "2df8762fceac431387a65c199fa97d8e"
    },
    {
      "Start": "22dd59eacce1459b88a91e297b898d07",
      "End": "d4c82544283742f3a538d3a87b4a7abd",
      "Id": "b22a085a00074657a9c59a97dd4c2935"
    },
    {
      "Start": "22dd59eacce1459b88a91e297b898d07",
      "End": "c186480bb7c14fe2a7aa2b5b66442628",
      "Id": "51e61996ab584a5f8d1b4ec6f1a1ea61"
    },
    {
      "Start": "b1bda1973daf4099afe8b845b85563cb",
      "End": "fd778f8be7e84b6a89f614cb4f5d6840",
      "Id": "3f1b6700ca31403dbbe394331091ba68"
    },
    {
      "Start": "9ad83e0074fd4d0c8d98d16126b4908c",
      "End": "202eb7dd3dcc424e8018c2fa16b48364",
      "Id": "e1f61209c94d463887e34355a7754e3c"
    },
    {
      "Start": "eecb015bd42d403d8e38c74182ed8cd1",
      "End": "71d8eee545a141ca81c3ca4e4dbbf5b5",
      "Id": "cc7d7a62268340e491d1dd24067fedbc"
    },
    {
      "Start": "c03673440ec8492a8b086577405ef9a7",
      "End": "6ff8ba73715b4335b1905c577f950b84",
      "Id": "ecf83cf87c94415bb9b8b45e7fbca182"
    },
    {
      "Start": "3ca48b90cbd644e2b991cf935e8eb4fa",
      "End": "8f787ec766314822a301d2aa13fedd63",
      "Id": "eabe08c6a675427a8949abd11749aaf0"
    },
    {
      "Start": "3ca48b90cbd644e2b991cf935e8eb4fa",
      "End": "a8c8944e23d64925bfbd1c613a5dbe7c",
      "Id": "12bb6f91d3754e49baeaeb01cbaa91c0"
    },
    {
      "Start": "e068b0fbb7c9462b86c6b4dd8c7ed509",
      "End": "34b4a1d913264955b94364451b969764",
      "Id": "21ef5c889f3f4e139c62c4338aeb8a8b"
    },
    {
      "Start": "0d68594843424aac860ca83724b71dec",
      "End": "6faa83b2eb44418fae1dd6b17f3e1ab7",
      "Id": "9734a5abfc844698817b188470886aca"
    },
    {
      "Start": "1bf5c5aa823948bd831e09f66f02e744",
      "End": "b9aa9b8df03b45bf983c28feed8fd17d",
      "Id": "ad3a5f204e44483694f6b5eac98aebbe"
    },
    {
      "Start": "fd024e11ee854ec898c9266874da47df",
      "End": "8604698db2f149848470a6dcd055c715",
      "Id": "8b36f521311f4b37a1ad578e5b795dc9"
    },
    {
      "Start": "ade8aed2d09845888f6ac75d04ca1cf5",
      "End": "16350347d2e649c891b0dcc329bf4dab",
      "Id": "e2d6d6a8cedc4707840de404428e3bd9"
    },
    {
      "Start": "1914f7cc07134524b8966fb3cc831f85",
      "End": "c90b461fedcc4a25be174f8ed0778b7f",
      "Id": "66b3257f964847cf95a1a3fde8148e15"
    },
    {
      "Start": "2f488f7e135141229f490cdc6a3a63e9",
      "End": "8bd894d120954066baf54a3145876914",
      "Id": "f46fb68085fd4cc898bd23f7427d091c"
    },
    {
      "Start": "0848ef17287d449fbb7f0eba8165c6cd",
      "End": "2dc097b92e4a4458ad5ad57c494f7985",
      "Id": "170c65e5d0c443f0bdf78b00dfa0cef8"
    },
    {
      "Start": "31da02ceb55042fda50364d3775af77e",
      "End": "7f86a6e9c76e4531bc5cb173dfc0cb05",
      "Id": "d7e352f8f51b491cb7cfe489015d1e09"
    },
    {
      "Start": "83d756314318493088f2f3e0ee8f3c20",
      "End": "9f929dc1a50b4e1babf45ef91bc06ede",
      "Id": "17a302007fe645718b2e3817af03e325"
    },
    {
      "Start": "61e75b81c1594b6aa6bf883cbb6bbebd",
      "End": "839375302ad543ca97f2696329080c80",
      "Id": "113966e9733843729397c97470a34af5"
    },
    {
      "Start": "487824852095416aa7e1675e22c6121a",
      "End": "8aa100c954f648e789d77c431a055a17",
      "Id": "e1aea1578a6d41c48579fa745fe05116"
    },
    {
      "Start": "7c8d553018b54185872ed17c67051943",
      "End": "c6ed913b8ee14e74bf0e34d88461df53",
      "Id": "d09b76655e2c4e1d906091e8b1933d98"
    },
    {
      "Start": "8de22870e55b4a1f8a722fc2302083e2",
      "End": "986cfdcd93f647d7af02095ac2cba7b2",
      "Id": "6e042a6205974864bfe298a076df7ffa"
    },
    {
      "Start": "bffd14b82ee746d58493f640b77a2b4a",
      "End": "d90668b0b23946149c0af9abef81eccf",
      "Id": "0dc817adf4ee463c8ef4ad7bc1114b53"
    },
    {
      "Start": "a8a62da90c3d449e9b554433d23dbac4",
      "End": "f5ab72bcd4ef4ea7b2f532eaa8e71627",
      "Id": "c03aab2cf01b4531a0401fc831df9786"
    },
    {
      "Start": "e8c421f173394ce783b5cea078ae3407",
      "End": "30d112742a9c4264a772dc2d34265a6f",
      "Id": "1c8212701e844c41bf9ec21b808ae391"
    },
    {
      "Start": "9757d927bfb24631871978689d8af2a1",
      "End": "55e7e80b2d314d4092ea131097553689",
      "Id": "27354da2baaa46adaefa138590e84a9a"
    },
    {
      "Start": "3ecea279ee394d24ab7c7f6e391e709f",
      "End": "e116d3e390944e8e9fbe7571cffeb036",
      "Id": "4446e8f1d9754cbab66238e539c1418e"
    },
    {
      "Start": "3ecea279ee394d24ab7c7f6e391e709f",
      "End": "a5d00b245b3b437c95c3926e8f80515f",
      "Id": "250e2fa9db1945778cadeaae4792ab27"
    },
    {
      "Start": "3ecea279ee394d24ab7c7f6e391e709f",
      "End": "af9879df51784588aa675de169eadfc9",
      "Id": "40f190bedb9f4aa697f9e831637bd615"
    },
    {
      "Start": "3ecea279ee394d24ab7c7f6e391e709f",
      "End": "8c386d78ee64421584817fe9c31ce215",
      "Id": "4f5ae3a63adb4cf794dc9bda6eb60bfd"
    },
    {
      "Start": "3ecea279ee394d24ab7c7f6e391e709f",
      "End": "d5d009d1943840b78cc07e006f520d52",
      "Id": "0a3f9db65b29433cb5a3ccb8acba721a"
    },
    {
      "Start": "7e4195023fc242febc1081e3835a0b5a",
      "End": "6db5798cd0244ef8948ce97336367b05",
      "Id": "db7aba0ee877448ab2d04bbbd936c81c"
    },
    {
      "Start": "399c36d4eef544afaf3ca93e7a0f1063",
      "End": "6efc72301475467da6d4e9d07279f6ac",
      "Id": "5fa031db1da5443a85ee5b40a54cbab7"
    },
    {
      "Start": "895edf844c1c41af8187fa6fbf899fce",
      "End": "8432721c44f74d03af03fee65fe12f72",
      "Id": "ac4c025442d34399bb0e61f147711eb7"
    },
    {
      "Start": "030f1029fe014f27845806bb0d94313e",
      "End": "67009f2d6eed40bab598ca33540fd26d",
      "Id": "73e4409565934d8787b30e6fa0f8f09d"
    },
    {
      "Start": "9bba6176ef2a45f99cc36caaf3ef6a3c",
      "End": "5d2b2b3d51f14f599af7bb36fab89086",
      "Id": "36d09f26cb9e4ae5a88ffb09b391e28b"
    },
    {
      "Start": "4d9b561826ca446c9ba5686b1f96d6ce",
      "End": "fa768aeec91a4dcfb958c1c110aa78d5",
      "Id": "594a323e04454951b06ef80d3ca95e28"
    },
    {
      "Start": "d00d685864424552a0cfccd46d216b49",
      "End": "c8739f88dccc4484a540f718ac85d25d",
      "Id": "660f861d124e47abbe260cb795d260d4"
    },
    {
      "Start": "ea00391fe9d74e6b8b04bec3f07bc59c",
      "End": "29ac7d6dd8f145d0a5709575242a3d1b",
      "Id": "4afdc75a738e459197951212b72bc936"
    },
    {
      "Start": "e73ebdebb62647429392a07a327f7a4e",
      "End": "fbe247143d9f43e3a50d915af9cc0793",
      "Id": "619956df4fec48fba4f1ac64f6ccb5d8"
    },
    {
      "Start": "ada44c85a95548bbbae375793a8dab18",
      "End": "4cb05c2b11c145a682c0a2345963836e",
      "Id": "2581fe054b6b4941acc7232564098d22"
    },
    {
      "Start": "fb763d1e6d4f443685f4e6034886598f",
      "End": "04a1d46ec9314d1b84ac70288fa69ac0",
      "Id": "8f6da3af0f644edabb0a674ecdfc650b"
    },
    {
      "Start": "52f414a4441640ab9ee717137cafc798",
      "End": "16568c630c8b473b9021970a5024d157",
      "Id": "ea4e160a561e46da8bb43b15fc263a6f"
    },
    {
      "Start": "52f414a4441640ab9ee717137cafc798",
      "End": "63aa6e89690645d7b3cc6f44a1e947a0",
      "Id": "547265efb38348cf81e16d660a3b7947"
    },
    {
      "Start": "52f414a4441640ab9ee717137cafc798",
      "End": "cd8f92b75e254e8da989141ec896792b",
      "Id": "792ca463fa6e48c8bb1a853628761111"
    },
    {
      "Start": "78340cfaaab44ea28b3c4f0f842d76c1",
      "End": "fb875d0fcd794e32a7a58c3105bf6309",
      "Id": "2e59af098e0841c09aca05c33adec818"
    },
    {
      "Start": "d0604de7003b47f299385279473405c6",
      "End": "17c2906a91b747be83bbdca25237473e",
      "Id": "583e4535ec674d01b241e99fb4c6a1a7"
    },
    {
      "Start": "dda9cdb218a34264945bf39335abbb5e",
      "End": "4f18162d18d447f5aa9d91b8cc2e8421",
      "Id": "d00a63cfb4934847ad11f9e5ede3092f"
    },
    {
      "Start": "f7ea0aef5ccd49ba93e395d001382427",
      "End": "a1288dfa960242f3b10d7b8c46fc1252",
      "Id": "805cd5677f0c4cffbd4b8cc20c2a51b0"
    },
    {
      "Start": "f001065b515c4433a3e387103aa46e19",
      "End": "b3190194bb1646ff9ab20527ba181378",
      "Id": "1cd61bea685648a69511d4a45b40f6e5"
    },
    {
      "Start": "bbb2e25b9854436d91dced8cee732793",
      "End": "4cdf61dc6f544dffa5b05c0d6925ad90",
      "Id": "fd9b829aeb544e928bc2c0995920ca8c"
    },
    {
      "Start": "2c315443471841a7ad83ec24a664b29a",
      "End": "64bbdfbf057f4bd783b17659d9b8a114",
      "Id": "f2be6cc1838c4800a0ced2e22a3849e6"
    },
    {
      "Start": "95cf229797af44d8954f96479a7b010c",
      "End": "21963498027a4db491a383b15d027932",
      "Id": "04db859b03e046f89a87ae1c20c77d88"
    },
    {
      "Start": "269c382de08540ce8639611e27b137d4",
      "End": "ceb995bfe5c14ec7ad9c59a89b5a071d",
      "Id": "cda8331f0300482ba0ae40290ceb92f5"
    },
    {
      "Start": "e3054131ff474cbfa3c6619569962674",
      "End": "17ef5ddc411e4fed99ccf35a5b19286f",
      "Id": "1acd72fb5ac54c83bd01a3a8438f796c"
    },
    {
      "Start": "7829fab6752640eca121e052b774bced",
      "End": "1a1426be3eed466f876bef86706d29c3",
      "Id": "dfe416c1b5914d9d9f1b7997e2186be6"
    },
    {
      "Start": "7829fab6752640eca121e052b774bced",
      "End": "2eb19c720bb7442a9342b95c4fe8c0d9",
      "Id": "ce39b0fb25ff416e8fa6ca5a714a5d7a"
    },
    {
      "Start": "2dff917db792426a9babae01e7adffd4",
      "End": "3a6b20be4bd54932bc1f5f31e08bb509",
      "Id": "274882a7be93419ab91565d774d02bdf"
    },
    {
      "Start": "2dff917db792426a9babae01e7adffd4",
      "End": "f73a9848ee784ad582fe36123d480d3f",
      "Id": "ce93273132414e9f9bd579b6fbca2a40"
    },
    {
      "Start": "7e29a9f6af2d4154b57ec0f3820eda3d",
      "End": "1290b3daa49648a8afd0c97868c8f928",
      "Id": "a63d0ddf422d473ca4bc09b7f606684d"
    },
    {
      "Start": "7e29a9f6af2d4154b57ec0f3820eda3d",
      "End": "e5c65969e6a346b2af5e88925f6c45c9",
      "Id": "5ab38bd0f18f42479f510de748100e28"
    },
    {
      "Start": "7e29a9f6af2d4154b57ec0f3820eda3d",
      "End": "0f24dc421b8c4435b8b40c645ebd5c7c",
      "Id": "d5fdeeaf4bb043529b2c9616b57eff27"
    },
    {
      "Start": "7e29a9f6af2d4154b57ec0f3820eda3d",
      "End": "0c5f4e4033494757af863227c9a08048",
      "Id": "ae8baeec9fa04f9eb9b021f4f54269e4"
    },
    {
      "Start": "7e29a9f6af2d4154b57ec0f3820eda3d",
      "End": "badcd08060124bf2a2479d2b687e61e9",
      "Id": "7aae358a4d224305a43916a37f222828"
    },
    {
      "Start": "99b421dea0df468398cb466b273f9128",
      "End": "6671780bff824dab9446a8098e2f943a",
      "Id": "c166d846fb3a4116b077381ef7b0cfc1"
    },
    {
      "Start": "99b421dea0df468398cb466b273f9128",
      "End": "5dee8f584a094d50bd9a280f8d9efb97",
      "Id": "3546a4ddd0044ee28fc0e9c11c181542"
    },
    {
      "Start": "007831f51c7146bb845b972e2c42ce9d",
      "End": "7f86a9a7780a4b9c9e7cb5211c56293e",
      "Id": "afd8d5acd8054bccbf9ceebd72cbec94"
    },
    {
      "Start": "d85f9cba879040aa95a18721c67c09f1",
      "End": "3d29698d04de42ca8faf5b1b9d4274ee",
      "Id": "3215790caa0245b8a7031ad638236229"
    },
    {
      "Start": "2e06188ebdb7456b820d3252075a3c80",
      "End": "35d5f78cfd274e79bed14d0f006825cf",
      "Id": "597685192d0c443ca492ab75579c975d"
    },
    {
      "Start": "2e06188ebdb7456b820d3252075a3c80",
      "End": "bf52131ee89249d5b4cccf375c554437",
      "Id": "77b5804722554c1b8cc1ba7aac7da3f4"
    },
    {
      "Start": "a26403b7b84041a984966398a5bb3ca9",
      "End": "6f3e4bc38ac945999ab6092a5c9d3b97",
      "Id": "9e1223951da54a34994ad4fbc51bc30c"
    },
    {
      "Start": "fd3a9b5dbbf24c3a8f3f23b9659d48cf",
      "End": "ea895fc875b740ff825e47845700a5e9",
      "Id": "3088734962f545ff863e491bc4a2fffa"
    },
    {
      "Start": "005fb88a304e46e4a4e07afedf05e1fc",
      "End": "7f1ddb8b5a904780ba0b18567682f8cd",
      "Id": "203ff342035f4ab8abfaa0ca8d2d8015"
    },
    {
      "Start": "327e71eb1ccd41518c120ce8ea1a8522",
      "End": "aba053f10c654a8eb8cf41cea3759897",
      "Id": "eea4c43b011c43908b7adb7a3fe9913e"
    },
    {
      "Start": "327e71eb1ccd41518c120ce8ea1a8522",
      "End": "22b100cc13f84357911da84bbc8963c0",
      "Id": "85ea9650840f4da0991554c07aeab8f1"
    },
    {
      "Start": "327e71eb1ccd41518c120ce8ea1a8522",
      "End": "2ce666ae0fab445c8582b1db6968b9e4",
      "Id": "8f2eb4c315e446e094a6d113ffda9ce9"
    },
    {
      "Start": "327e71eb1ccd41518c120ce8ea1a8522",
      "End": "8c0b749ef909407f8b230c3753b3340c",
      "Id": "953a41d9b9174551b975216a7c11a88a"
    },
    {
      "Start": "6268ce771ab44f348bab5900b71fd2e3",
      "End": "b8609d2d9f164caa983ff275c72abd59",
      "Id": "cabf1e16cbbf474f8bc0462ceacc71db"
    },
    {
      "Start": "fe7df583eb0b4d44a26ea714eafb9094",
      "End": "ec7d58a8b90c43abae5eab880d24bc08",
      "Id": "d92ed3a6548d4d37b20734cc577df71e"
    },
    {
      "Start": "5fbba087aef7447387668b9ab9c36b20",
      "End": "ef3d107748d6404eadb25ba6fce78ef2",
      "Id": "42459edb7653474fa28abb7b834f5968"
    },
    {
      "Start": "f3bf56eb9cbf4cd2a3ad51791e570f70",
      "End": "5667aa1f3d8445d1a88d10594b447c81",
      "Id": "2e22e37a0c79472d94664daa9b6c4bbb"
    },
    {
      "Start": "012f9efe2b054cad939762a2b61f7b0b",
      "End": "f5e8935fa508476a855b0b57e906ced6",
      "Id": "133d57b12c4b4061b18d793ac10f8e66"
    },
    {
      "Start": "aa1c886b3ad049d7b8ef5731031d9ba2",
      "End": "7e8879942d2c48f89f317f2ae1d5c4da",
      "Id": "8fbc64ff2569494dba512e9e56b84ff7"
    },
    {
      "Start": "55818c31d7154fc9926376076be48e9b",
      "End": "152eb612ac3b4f9d96b9c859de65c10e",
      "Id": "940e871c19754023b3fadcad836cf36f"
    },
    {
      "Start": "55818c31d7154fc9926376076be48e9b",
      "End": "f6240bfa829e464bafc28eac25afb897",
      "Id": "83c02e64a63b4d06886ccdfed3969bfa"
    },
    {
      "Start": "55818c31d7154fc9926376076be48e9b",
      "End": "608dc272f3ce4500938d3440d60828fc",
      "Id": "43c0a5046e51400db65b462a7598a239"
    },
    {
      "Start": "55818c31d7154fc9926376076be48e9b",
      "End": "8b05f959c88c49d4b6a0b96f466bb211",
      "Id": "e5cf736a802c4fb8993827394bc85fa0"
    },
    {
      "Start": "b1f33166a7704588bb4447b7c4461e4e",
      "End": "c63fe759378844f4967b579d0bf01270",
      "Id": "c372ba8dccbf4e43b2cdec1adcdf1ba7"
    },
    {
      "Start": "61ab24d859a04c11b96446e6f66da666",
      "End": "e0e62bf585c54c0ebb56ecb0b6d34efe",
      "Id": "8c773922b0fc4ee9b38f4d91d9dd1a0a"
    },
    {
      "Start": "f065ad5886444bf0b200da19bf330909",
      "End": "cbf199d48060473a9f10c26baee85087",
      "Id": "b59859efcc01476ca709e9615678293f"
    },
    {
      "Start": "f065ad5886444bf0b200da19bf330909",
      "End": "bd86516aabaf4155b3d4a18e5a462270",
      "Id": "642372546ee34dd18ba448b612b130f6"
    },
    {
      "Start": "f065ad5886444bf0b200da19bf330909",
      "End": "7314d3748b864c9eaefaa68c612685e5",
      "Id": "62158690168d4bcfbad129da3bdd5852"
    },
    {
      "Start": "46a81c1be82243449b2052c35616e845",
      "End": "87aa6ebad1c2464fbed54e26536a79b2",
      "Id": "9e1c1ed6819e4bf0b94f5f7ea9e1b984"
    },
    {
      "Start": "341812048cfd45f4b947a921f38a0b58",
      "End": "38595f21f34640bdbc4e64e4ebc6cf5d",
      "Id": "5d0539cd1fe04c5fa26ed92084446432"
    },
    {
      "Start": "fcc8ad4ad7424f98b88dfb2a7e95be9d",
      "End": "23b3f00591c9452999d3d737d692db58",
      "Id": "931abff7a28843a6b9be691383447829"
    },
    {
      "Start": "241d3dfcd45a4bdfa07a51eb13ab7acb",
      "End": "4f1950d0f372499db5df924e15170921",
      "Id": "f901702e3f4c47feb64477dfed9a1d97"
    },
    {
      "Start": "47b2a50c29724828b5f5d7b19d5027f6",
      "End": "0324e17479934351aa2535e4c6e94b8b",
      "Id": "95b9efe2ba7044f4ae9b1df8d9b9af5c"
    },
    {
      "Start": "1108ac2f6fce401d938f26a8ee59074a",
      "End": "803e8086fa18485589c66523860306a8",
      "Id": "8e77dcada7ec42da9b7267b62025f716"
    },
    {
      "Start": "bf2ed6abefd34f5897e35f27bb507905",
      "End": "0591364d5fac4079b1908a4291c6f863",
      "Id": "efc4cf172dcf4a91baa5eac89b7cd890"
    },
    {
      "Start": "b24394df750549e7800b0d9e1615513b",
      "End": "e6d21e5aeb29451f86b5644e5e9db8ac",
      "Id": "0ce9b2b6a3504579bac27e62b2f5e0bb"
    },
    {
      "Start": "66f85f49a4c64268be1f26ff61eac647",
      "End": "1b2eea51e62b410c94c54e19ffd2f71f",
      "Id": "275e4b69a2fa4568b95100e13f0c8dfd"
    },
    {
      "Start": "66f85f49a4c64268be1f26ff61eac647",
      "End": "742cb3567eb347d3815159d3cb2845ea",
      "Id": "6cf8aa50c97b4194a39cd3d89861cbf3"
    },
    {
      "Start": "66f85f49a4c64268be1f26ff61eac647",
      "End": "bb7ab0686ec3406b87e91817b7b47c49",
      "Id": "c4a56ceba5364032a7167c1f85bbb28c"
    },
    {
      "Start": "66f85f49a4c64268be1f26ff61eac647",
      "End": "3c39a7dcaa7f4016b03585436a985285",
      "Id": "a559fcb09cd943a78730aa142bab0b10"
    },
    {
      "Start": "31972c7aa95445ff9c6f2e707241bdc6",
      "End": "f6d0e2263b70453a89aef8d79fb6eb2b",
      "Id": "442003e235a348d5a907255cd381a173"
    },
    {
      "Start": "0ba07d13f40c4b6c8f4de341bf5be510",
      "End": "24c818c64d3a4295b3fbd3a77e85e083",
      "Id": "baa6cd6876094d66a585dc526131386d"
    },
    {
      "Start": "1b986ec0f46d44ac9f80746df73c06e6",
      "End": "91b72a194508445e9595c3f485a68e00",
      "Id": "b78d88ecb3724a4ab49c0b28a648e9cd"
    },
    {
      "Start": "1b986ec0f46d44ac9f80746df73c06e6",
      "End": "560736d52c5b4315b76a9d6e869c770c",
      "Id": "6ca005b03f9b4fcda76d8d6c7f558be5"
    },
    {
      "Start": "1b986ec0f46d44ac9f80746df73c06e6",
      "End": "5095be5bcc8849b689f24eefcfea3d8c",
      "Id": "b217f761cd5f4763a385f43aa67addd8"
    },
    {
      "Start": "2471203ac13a41f2963e52f2cf39a989",
      "End": "8bd258710d5240faa7e0029b1a2b1924",
      "Id": "b754cc64ddbb40c6bd8de7a05559dd91"
    },
    {
      "Start": "e140350b7d1646bf91b227a0cb65b6e2",
      "End": "6b89b081941c48d8987ffb6ddf1d39c5",
      "Id": "d7ef11afb6994dbeaf0563f5c4a3b0fb"
    },
    {
      "Start": "7a3ae2c151304749b565874d3a643514",
      "End": "04ef747a5cdb402c9e3f8d3746f32d0f",
      "Id": "0a50e6d10d2747ff9ec6bfb5e7f2e91b"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "3e640792fe614815a93a3dc1866d2612",
      "Id": "6bd03a44bce84210bfe8e9645b32d1d6"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "ce771bd8901b419c98fda9a79eeadcd8",
      "Id": "ace3f6d83cc3493d8d6177711a9c564c"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "411e56172fc84b61b78840427d3af894",
      "Id": "19b5ea4bfcad4f9993a5fe08e7bbdb95"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "48b2c7064aa14645a6276caa1ef4e4a1",
      "Id": "e1c1ed9276954d2abd04401f8483d798"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "fad0de840bf947b8bb8dd5c772d32bce",
      "Id": "d3e820ad0e7b4c3e85216c3f68cbc932"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "2eaa712d72d34d48ba997e6a11800740",
      "Id": "04119ca86ec94bd09cbbd73c99c4fb7c"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "108f1affa15c4de797cf677377d78ea5",
      "Id": "44183c1e9b574986a359e059c86516ff"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "871dc1586a994a9396309e195dce3d1e",
      "Id": "41d906976fc740c3b09e3f9fe6c8600b"
    },
    {
      "Start": "6d8130a5abdb40da82999153377faccc",
      "End": "5c375a399a364fb8a4342daf4dfeebd7",
      "Id": "9628899fbcbc452da354a0df15ae0483"
    },
    {
      "Start": "51c28658b2f94c038c782110ba2e54d4",
      "End": "94489f81d25c44e2951680946dfd1c00",
      "Id": "fff0de5072a4411c92bb43733930be59"
    },
    {
      "Start": "cc01a674591a48d6a8712bc13292ed18",
      "End": "2774d156afe2405fbd90c7e77ae7bc38",
      "Id": "784600355a91423cb1249ca0e6092f5e"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "72a16f4faa564172933dc69451e08a5c",
      "Id": "c9b966ff104e4d5991c8fdb3fd9d5c25"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "5c46347b6f654577bc4111544fb23e8a",
      "Id": "f1d1a9e5c1cc420aa534ebc9617831ef"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "f6db8d0ebc9f4c48aa75087cce06c773",
      "Id": "9f920eee859e4f7380177e029f62f3e6"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "3daba3c86eea48349cf515ffa2c23199",
      "Id": "87284f8bfddb425282511cbe5de94527"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "2023e7d02d0e473d993abe65f6d5d1e7",
      "Id": "9bd20648c71f4b02be53899906bf1650"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "de2894759b414be7b2c3c665dc165595",
      "Id": "d5c0ec920eab4e6b8e8819145e3f9e5a"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "35bb8cdbeac64e84bb4d7c7b45157ecd",
      "Id": "04b75f36410249d592b2bc39e25b85a1"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "8d5670ae90cb490cb795709b9d805b4f",
      "Id": "2a806862dac34fcc951049b29e90ca56"
    },
    {
      "Start": "af16dfcade12473ead4c77c53d638a34",
      "End": "164f20938e16416391452bad6b9dff97",
      "Id": "eeb60a814d6b43099db50deb8ea67730"
    },
    {
      "Start": "b7be4d41a964494eaa5786133d93f19b",
      "End": "c547caf78be648c8b26c6880798d84a6",
      "Id": "bfe52e52684b49b494b541c553e804ba"
    },
    {
      "Start": "bcc85853b21845198f54ec1fe36e9c8d",
      "End": "b145bca00b24492dbcd3b16749d21b0e",
      "Id": "e17b9309da504d88986e63d367779f18"
    },
    {
      "Start": "800cdc64e3054158a604e1405af56bd4",
      "End": "2ec07c7dad7a4ff080ed35f7aa772718",
      "Id": "6c70abd29b3d48db909cfd794b9761b2"
    },
    {
      "Start": "47e6f827b86a4a7b8bd2cdd26ca19660",
      "End": "4a41a1a53f494ed5b82d760c3fb40ef3",
      "Id": "45e96621d86b4ddaac7e14f1164f233d"
    },
    {
      "Start": "9649dc8bd5d6417ba5e6146e1b454659",
      "End": "154d864e0024415a8cd04b93523d568e",
      "Id": "e9a2d1fc1f8441d89dd401d97d61cb86"
    },
    {
      "Start": "e84f82496fc64e2a91c0f7f20397a66a",
      "End": "9aca3965c98e441d947859a0428494ce",
      "Id": "d76f46d5e0184ce899aed3b7ece8734f"
    },
    {
      "Start": "df71dc241f3c4dd2a5dfc0fb275b64fb",
      "End": "cc65653c715141a48498830ecbe780ca",
      "Id": "edfd82f5ae944ef6b9c4af1759722170"
    },
    {
      "Start": "01d7204420044c43ac5fbabb795b0f5b",
      "End": "118c7d9c0f0741c3acd996e643f686a5",
      "Id": "079c683584294b258037a30e2827071d"
    },
    {
      "Start": "01d7204420044c43ac5fbabb795b0f5b",
      "End": "c1c0240933d244ecaeaf89fae8f8618f",
      "Id": "5beb8fcc17b149d583a7cea254b735bb"
    },
    {
      "Start": "41f2a100c5244f64992e816ec949518e",
      "End": "5eb8f3752b0d40feabdb7c2ee677c31c",
      "Id": "c5d6cd70e62f4c3c9e94ad424a905c18"
    },
    {
      "Start": "fc8846ca4cf14c42ac9381e9faeb6d6f",
      "End": "5cbb8a7d776b4e0c9ee3eec201cc31f4",
      "Id": "11e5f919171d4014b8d608ef29439229"
    },
    {
      "Start": "c7f117751dce4d2aa5b32f8a79c8e67c",
      "End": "66314c0f7e2a47b4a86e006bbf0b3df7",
      "Id": "4289e1a5569f49d29eda5a0faa886925"
    },
    {
      "Start": "c7f117751dce4d2aa5b32f8a79c8e67c",
      "End": "2c6b2d0e6ef241c696154bda5f99bf20",
      "Id": "5be772b03f944a4ea946b95818f080af"
    },
    {
      "Start": "2f17846cb41f4b869c232e0258bc065a",
      "End": "e7fe52166a8248e1a4b6851e717e2861",
      "Id": "218d64588d5445d39deada167e2dd8b8"
    },
    {
      "Start": "2f17846cb41f4b869c232e0258bc065a",
      "End": "2515c7676f4444078a466f6bc10e4d14",
      "Id": "c95475d9b5224267b0ee4efd96922c00"
    },
    {
      "Start": "491fb7163b3a4fd29a0d21bbc5455216",
      "End": "84a2fc7fdc55401cb213f38ce663f4dd",
      "Id": "116e3657910b40279e7b68bee57bba18"
    },
    {
      "Start": "e60d10372d774bd28fdc3170bc18a866",
      "End": "239306f6938a4bb9b5c375cfe556ebd8",
      "Id": "d4394259875247a081b01ee04cc86a3e"
    },
    {
      "Start": "48dde48f7ac248a58c7ed79969a14780",
      "End": "082bc75281b14238ae7ea394ebc13570",
      "Id": "3a50d1eeb01d4ff9a038c6fcb55f467d"
    },
    {
      "Start": "4fa08155eee84f3185bfc0a3a7ca9623",
      "End": "111c0694597a4eeaab736c33868d37af",
      "Id": "e92c213a4a3f43b799190536bdd02993"
    },
    {
      "Start": "d895183f196b4357949f2d1899454eb3",
      "End": "aee835adcc4f4d388f9f02c5c00b9f8e",
      "Id": "69d2864d5ffd432a9fc4f1965398e9f0"
    },
    {
      "Start": "d895183f196b4357949f2d1899454eb3",
      "End": "33ddf9b8c12e4cf5be488ccdec8199ab",
      "Id": "1bd08db7539e442aaeea3fabee5bce52"
    },
    {
      "Start": "d895183f196b4357949f2d1899454eb3",
      "End": "65d6c86ddcdb46a781d764663776428b",
      "Id": "acbfa54d283d486682f52aa63a0c26a1"
    },
    {
      "Start": "6dac1401ef9041edbc2a41d8084341d7",
      "End": "5715f188c9eb45fa9cbec444ce5b4572",
      "Id": "d490783455a54ef395a7033887da1ee8"
    },
    {
      "Start": "6dac1401ef9041edbc2a41d8084341d7",
      "End": "eaf132182ca84e5aaa5b7efe084e6e9b",
      "Id": "390a44282e614441a4260d68b97cf12f"
    },
    {
      "Start": "6dac1401ef9041edbc2a41d8084341d7",
      "End": "89350c85fcb143f5ad693a0ba564b778",
      "Id": "39c260a17907495fb3a81372f4a0e386"
    },
    {
      "Start": "9ecccd3c8367489abd06e5569df08a8d",
      "End": "2208e60b61254f9cae1d8ba6f9187b26",
      "Id": "9ffa3bf85caf454795c075acd79e6435"
    },
    {
      "Start": "0c43c19b889a4d56ad41170b6380009a",
      "End": "502a35922c4d44139ae6088ab55e2e9e",
      "Id": "54d0c5791f364bd580769034389f25cf"
    },
    {
      "Start": "2a0c37b6ac5f451e843702e4a557c4bd",
      "End": "decda197f7914f499c3e485717ed3a50",
      "Id": "fb32a8945e93401fb3fbe951256c10b2"
    },
    {
      "Start": "f801a8017179428484d190f3792929c4",
      "End": "9592bc0798aa474c97d5fbd252df48c3",
      "Id": "bc22058489d04a6cae71606f4b126ba1"
    },
    {
      "Start": "f7a3f6ed8dea48f5acd45ede74075e66",
      "End": "aa3154d14d2041f2b120305b3203d05a",
      "Id": "ddf4410f43e7446d9a9a8e0262189426"
    },
    {
      "Start": "abd6818b1c8f43098b03c8e66f0feed5",
      "End": "f12eb4ac18014e2b9cb5070311670adc",
      "Id": "ecc8620dffdf4d5e8341cfa024521484"
    },
    {
      "Start": "f50df26fd7b14d039e5b64c29b65bf13",
      "End": "4e9b2d90b0404c0aaee1c34404d128fb",
      "Id": "bb93a67c7d1a4985bbb5d316c8a7460b"
    },
    {
      "Start": "40f1942b1b16486cac19951f9f800ecb",
      "End": "bae6333fb81e421ea2cd685c058e2340",
      "Id": "7680fabf504749f2b2d91d03a2647124"
    },
    {
      "Start": "29438dadf4524cde81e87c7597554d13",
      "End": "f189a179b91a4843ad0ecace25c8c44f",
      "Id": "4916c13268184d2da2d3ba4b21d7bfe5"
    },
    {
      "Start": "193e32fc8b9a43e9a6736213d6aafd14",
      "End": "7f560ad983174ab39f68794241feffce",
      "Id": "17a3d4eebb2b43bbbaaf254da5fcff1a"
    },
    {
      "Start": "f705164c0b10479b9568aa68bbd7e003",
      "End": "a4ee46f24d9843768cd08ad28f6e1ebb",
      "Id": "ae0c8bfe41b6447fae434c4a81534bfc"
    },
    {
      "Start": "529e91d7fdf344ca920bf20fc0323fbb",
      "End": "dbb18ce085a4414ea95fb0c1af4cd2b2",
      "Id": "8964c85e557b4e8899be0513aec39e51"
    },
    {
      "Start": "f1fcfa56e0484a8db12c000a92be8139",
      "End": "4930ab7bb8f94437af2515ec2c8ca463",
      "Id": "6186cf3ca678414799955e98a086620d"
    },
    {
      "Start": "bbe506ce3ee24dac9c46952579501e72",
      "End": "afdc08f52f014778a93a0e3ad1b2dcd2",
      "Id": "652959fa95dd44f7b21a9f1682c4fa5d"
    },
    {
      "Start": "f61a38f737ca4be286fb8d6eafa47882",
      "End": "00c73419f72e4519acff85706f058367",
      "Id": "db3ff7ed81ae4148bf43efaa5479e685"
    },
    {
      "Start": "f983acc5a5ff4f2b8cc762255a6084cd",
      "End": "959d89bd783945559f430eba7e2d5fa1",
      "Id": "5d886b4afca2482887a723800883e24c"
    },
    {
      "Start": "aa5e722d4e02438da71f80eb3397d590",
      "End": "674073997e0c441097d3c1d21ac10981",
      "Id": "cd188ffc5f684c53adf7e78ba50232df"
    },
    {
      "Start": "b19d895551c14494be8a187c22ad7e69",
      "End": "aecf5f14b3614f589c07e9ddffb3c0c4",
      "Id": "ecdd9c4b0e2c4299956c37afee43ba80"
    },
    {
      "Start": "10fedae912624a00a58165bb8b1e3c03",
      "End": "f6c5cb00697e49649155d99dfc3402b9",
      "Id": "9ac12f52b30042749cc4c6fcae4efe3e"
    },
    {
      "Start": "2d786bc30df2492b949ef4aa717286da",
      "End": "3bbb2b62d1134e03b03088df514745a8",
      "Id": "6c66e68f4f894641a0c3b0817974b0cc"
    },
    {
      "Start": "d00ce13edeca45a08102a224257d983a",
      "End": "ef3a34137fb54b32855c6db2cb92eaa6",
      "Id": "2284b557c9bb4538a9a4f3ac42e0aed5"
    },
    {
      "Start": "3e119595a6fb4be9a5699d6eb7a17aec",
      "End": "2211e0d4ddd84c4ea8e6931be8ded0c9",
      "Id": "20e1994edbac4c56b3775447c0bf1a10"
    },
    {
      "Start": "c8cd552064a344cba5d7d77c82bbd45f",
      "End": "ceddff91ce2b4b7fac78d5759e4ef624",
      "Id": "8a8f9e8ce8dd401c9fbf03c23957efa6"
    },
    {
      "Start": "7e64c355af664e67976caf049693221b",
      "End": "017c1278c41f406fa7a4e1885db85d97",
      "Id": "b5ab7a8af3d44c42941cc7becd08bef0"
    },
    {
      "Start": "ba73f0ac2cfe4d4f9ecf435243ce1b38",
      "End": "fc194bcb0834438696b7c6bcc6b7485a",
      "Id": "63c9f79249a24ba08b5676d054c0aa41"
    },
    {
      "Start": "358b341740ce4152a27f31f5787a5e9a",
      "End": "e7ec5b2cae3b4fba85d73b889dd79c69",
      "Id": "ec3cff4d508a45df870370532662653f"
    },
    {
      "Start": "cdeff47656444d4387a4772499753451",
      "End": "30ef4616dd094cdd96cbc54cc6841941",
      "Id": "079dd90736e64f4b95a2d8f21cdb60e5"
    },
    {
      "Start": "2252f7b848c64657aacad4196526bb53",
      "End": "62b5a9a9783e4c2a922bfdfb250dd1ed",
      "Id": "36b16c5a10f14f9ba81a8fba9c7b3315"
    },
    {
      "Start": "2252f7b848c64657aacad4196526bb53",
      "End": "1f25fe6c7ed24bb2b6e88f3734be11ff",
      "Id": "308205a043714fe484b1c67d88c43e16"
    },
    {
      "Start": "2252f7b848c64657aacad4196526bb53",
      "End": "170daff9d7e54446958328c5d5c29d43",
      "Id": "587f46b5737c4b79b8d020eb74ca96aa"
    },
    {
      "Start": "2252f7b848c64657aacad4196526bb53",
      "End": "208ccdd688cf4d34a87e54fca03d40e9",
      "Id": "115594c508a74c989aadcdcd8d472ec2"
    },
    {
      "Start": "2252f7b848c64657aacad4196526bb53",
      "End": "b1c45c59fddc4fde9d09aab9652aa30a",
      "Id": "d4e28e56a97a4ec3a37699f87504a28b"
    },
    {
      "Start": "8bdde1289a7a41fea9f3d7a5ab154cac",
      "End": "378a6a56616b4749bd531b80597d85a8",
      "Id": "6490b5bfd9ef4160b3a597b0d55a216c"
    },
    {
      "Start": "8bdde1289a7a41fea9f3d7a5ab154cac",
      "End": "97784674299b43218731dedc56919434",
      "Id": "a41664560d234994aa7de50c4a72df16"
    },
    {
      "Start": "8bdde1289a7a41fea9f3d7a5ab154cac",
      "End": "a628d2667dfd401ea6fe0c6b6d5d2ad4",
      "Id": "fd2985afd4e746008f1f81a6d41d9cac"
    },
    {
      "Start": "8bdde1289a7a41fea9f3d7a5ab154cac",
      "End": "5a134142fad144b89257fc5e243426b3",
      "Id": "b48fa0dc37ad421694954f0b9d12234c"
    },
    {
      "Start": "8bdde1289a7a41fea9f3d7a5ab154cac",
      "End": "63f36f3e062d4b18b2e99757bf38a0e1",
      "Id": "c449e9b004b64187a3869461d3ce299d"
    },
    {
      "Start": "90ab88f933a143e9a41782464165a2b4",
      "End": "ce3c89d57bce404da1a6597942487eb9",
      "Id": "89a1ee7e09e341c4b1c3f60aff5f16c2"
    },
    {
      "Start": "90ab88f933a143e9a41782464165a2b4",
      "End": "5428227e9d444a2f975691db1e99f53c",
      "Id": "6eb97d1b997645fc86c64b9764c58fe4"
    },
    {
      "Start": "90ab88f933a143e9a41782464165a2b4",
      "End": "ab64e617d2a3457986ad9a758e76af3e",
      "Id": "07917874c2ef483faa900125e57f7bc8"
    },
    {
      "Start": "b087b8b5771046ce89f66b1fb4a722b0",
      "End": "e88e6577f0f147978d60eed2d126628f",
      "Id": "58562ee79b294a5caad67e127a0bc973"
    },
    {
      "Start": "b087b8b5771046ce89f66b1fb4a722b0",
      "End": "47cced867d234a8abd133ce3b117b9b8",
      "Id": "3216171e19094ffa94c0cda64ba5ba84"
    },
    {
      "Start": "b087b8b5771046ce89f66b1fb4a722b0",
      "End": "d2ca05a6014a4e719a0e7db9ccede494",
      "Id": "1ba0c00e44424067859ce2a479f0ffa7"
    },
    {
      "Start": "b087b8b5771046ce89f66b1fb4a722b0",
      "End": "fa6ebdaa9892416c83cdbd5eac5468e1",
      "Id": "403d88e8314c48c38ee82f3b11dd73a6"
    },
    {
      "Start": "28202a88e56f408cb082a69004ae5a91",
      "End": "72844a094f3743a4bef8e26b784b84e8",
      "Id": "46587c79c8af4ba9b049b1d79737688d"
    },
    {
      "Start": "87e527009bdd4f6c81adba33ccf49d23",
      "End": "38bcbe62272a4cdcbcc6127c42023bcd",
      "Id": "596354c37d1e499c986669b8b873baf9"
    },
    {
      "Start": "360092f3c9a2478082271d8d9b7f03ff",
      "End": "a30df7664a9541e7a3c3fda3dd70daa8",
      "Id": "84d13d0267bc40db9439dcaa695308b3"
    },
    {
      "Start": "cad39bab42da49e0b691060ddf1d142f",
      "End": "3c72b22b21854f30aafbcdd3a1d58fe6",
      "Id": "1a3f3f80f3974e888da211b3e804be96"
    },
    {
      "Start": "3d33e41a695945c380d3bce15151e57e",
      "End": "8db29de46ca94cf59e2edeac0b70acd8",
      "Id": "d68165df4a8b4c83b66432fe468a3278"
    },
    {
      "Start": "6bcbec3a8fd94c048959b6589ac343f3",
      "End": "199d57761baf42c2956eef25a6427ab4",
      "Id": "e198fd908b6948118913bd43b0b8e3b4"
    },
    {
      "Start": "89ab4a7ca9284934bde9c103824562c8",
      "End": "37492103967c4223beb65f0a02c56b6a",
      "Id": "5051766304a44f6786713dfac5b0cad0"
    },
    {
      "Start": "46c6fb16b08a4b46b96dc9573a39849d",
      "End": "170d82e5bee743ce90a85fe0977ad5de",
      "Id": "9e4cc8a082e845909694e9f6f0c6a608"
    },
    {
      "Start": "84418b21a97b464aa1b3056ed40c24b8",
      "End": "cc94e9a821454e0db84774242149bd80",
      "Id": "43b1cb5ce48d4da5983b1cad50a47879"
    },
    {
      "Start": "b76f74031c7f4b03a48fdfe30baff2b3",
      "End": "667df6e0660f484b9fcd3a325821c426",
      "Id": "4e17125a928b47f6a43cf90e55d59c23"
    },
    {
      "Start": "63f0bfd3f5ac4c4ea6ccc991a886f769",
      "End": "cf996d2d0ddd46728372d64e504a056c",
      "Id": "1b661f89d53f4d62af2109deba933928"
    },
    {
      "Start": "03c7fec5676d4d8fbfae3ce11065648d",
      "End": "d7beb14c12e6462089e1aaee78fc109b",
      "Id": "9d704fe3b48f4186ad7cac68335db5bc"
    },
    {
      "Start": "9c0b55ed52b94b57a047e6fb9bb2ea54",
      "End": "7bc74e06b07340d483678628b0b6b28f",
      "Id": "030f66c543814299a588bc61e1b5c8fa"
    },
    {
      "Start": "08c3d10e4ab548329c950afd631ed30e",
      "End": "5620bb218fd14ca18cf5e309a3ef1857",
      "Id": "c9c06c28fcd44c0e8e4155b1bdd4e847"
    },
    {
      "Start": "214e27a25b684f69bc5a07a8e4cc843a",
      "End": "135714c19e2348c2b12ff049d7f44e94",
      "Id": "e73fda0a2a6445f28f6187e002360995"
    },
    {
      "Start": "8fe9b546784d42eda0b6d03ef09e67d5",
      "End": "fb2a89f8b0384f07aa10011c41be7aeb",
      "Id": "f09ae940ba1e4372b97b2814debd6abb"
    },
    {
      "Start": "ad5d08307aa245fd91b275deb341db7b",
      "End": "3bb82fd1d380439ba0792d0be9e76de8",
      "Id": "14a67df6e8414cf39de90ed6f49e1124"
    },
    {
      "Start": "de576555bf814fc687aa119e8a412b9e",
      "End": "ec9662b5d7d14a10876908a906a4ad51",
      "Id": "3af513ba8aad40fba62269bea12be2b5"
    },
    {
      "Start": "ab4c0de3d2514faf83b49ad8870029ee",
      "End": "97e83cbd1cc54f0b9d163fe43d971eee",
      "Id": "4d76a0a6aef0489b93a3181c0c18ba07"
    },
    {
      "Start": "786cd98701584e5f9f021f089e728d69",
      "End": "b0208b6d7c8a4d56bcbcfcefdacc0b60",
      "Id": "3783093a2115426d9fe5b135828b68a7"
    },
    {
      "Start": "6467695eddd04f80b881c66c2f38c732",
      "End": "1574fd05077a4bb58391a6f13a2604c1",
      "Id": "0a377172e6f744238dbeb9020eac3936"
    },
    {
      "Start": "ac8b5b58dca647a890716aa8dc922532",
      "End": "edffe862738744728a999c4b5a52e5ab",
      "Id": "6364f13bd32f4786bbbbd66fd14fcea3"
    },
    {
      "Start": "0f8dcfcffce346829bfc64d228085866",
      "End": "d48fd37bf9e34a6690b868366d4554f9",
      "Id": "2cf7b0e6a7eb47fb9bb951213fd26110"
    },
    {
      "Start": "c761b281db7446aca79943c906332aa7",
      "End": "d00393eb192a4e3fab2ca70cd356d01d",
      "Id": "51183c214d9a4ac4a2764059d26992a0"
    },
    {
      "Start": "4f19e29d34fb4f13815d9962e6abbb68",
      "End": "46cb595a00ff4e8c91c7d96e78710704",
      "Id": "f7cd3a12ef3f420e8f15da8347d54f69"
    },
    {
      "Start": "2018825269954dc29e0ade58cf872236",
      "End": "0c72ed9472ae4f7c8b9e56a6bae2b220",
      "Id": "a8c399d9082e46d78cb1d421d9163c6c"
    },
    {
      "Start": "650ae02ca07940be810a290647b44c6d",
      "End": "7092b3988d0c4e23b6a409be28724020",
      "Id": "81c702c34a8b4a92a349b86f1636dbe6"
    },
    {
      "Start": "75353eceab58488e83ba0c0eaf7741e6",
      "End": "e65c66affbd4458fb0e39ee135e07a6a",
      "Id": "3128f2145a2c4cb1a8a1fc25b2185d8c"
    },
    {
      "Start": "410a3bb1d5414c7a9859d63a3ce93b09",
      "End": "c7f2b75e86b44bbca58545b4748e57ee",
      "Id": "185e05ca4af4459d9e4fafa3f680ffb4"
    },
    {
      "Start": "b5c8f5b394d947248c40842113f82057",
      "End": "caeeb75826c444568ad661ee01c46e39",
      "Id": "0f3e1e0511564b14a9f2d5ad4d2c5497"
    },
    {
      "Start": "6198c2cd2b83456a9529265ab3aab1ff",
      "End": "7cd4dbb1ebc244be88997b9deeebbf3e",
      "Id": "9638746f34f1435fa0a2bc40933f45ba"
    },
    {
      "Start": "48a6faf1cfcd4280896852c879f939da",
      "End": "7a0798023a5743cc9afe47c52215cc81",
      "Id": "6fa49b9195a143d0af85b85d69233ef9"
    },
    {
      "Start": "02ecd4d78c4446e88cfa34378b438f37",
      "End": "38c56822bb5a40e0ba7d00b629e05253",
      "Id": "64ecdc2fc7c34fbfa66bdc53b49b9f6d"
    },
    {
      "Start": "4567d4fc7c224336a91fac5dffafe898",
      "End": "e1878d77db154bc1960c291388dfc760",
      "Id": "738296f59719443fb654067cc2228af4"
    },
    {
      "Start": "d385ecbd405043a2ab7cf90a7ef5299b",
      "End": "77c18c43443244119d22dc890119a0e4",
      "Id": "c395c07c97af471ab3d72d003e2fc51d"
    },
    {
      "Start": "8f2f271d90284514bbbd97a20f27cd75",
      "End": "b2f5b4e79598422fa7ca2fd933f04b12",
      "Id": "372a65f175884c9984d7bdd5b7c8b69f"
    },
    {
      "Start": "f3c3297d6cdf4502b1641e9fbcd5e093",
      "End": "042c81f6c21b477e923dfcf81b29a364",
      "Id": "5945248f01fc4398893fd4605841fd36"
    },
    {
      "Start": "fa0cb9c1491a42b9bce44f9acab36ed5",
      "End": "3957a12052b74739b3b07be7242133ed",
      "Id": "bc156dd5cc19400ba3018347bef3150a"
    },
    {
      "Start": "95ed8d1a0fd84832a9b724b475f5bcbe",
      "End": "3450cf33406f4ffa806597a36b541dc5",
      "Id": "912326be96b64b74a21349feb092eaf6"
    },
    {
      "Start": "473388b48c4e4ebea0eb2a6ee596cfe1",
      "End": "619580004a504cc7b1d5527354f832ac",
      "Id": "b421b360e61c45dca31bc745aea069a6"
    },
    {
      "Start": "a607114f005c4a95a1ed180ae0b82e33",
      "End": "86a69d02422e4417902103b50dc5e8fa",
      "Id": "a0a6179ade6d403f952c430ac50f912a"
    },
    {
      "Start": "6c708ee411c746e78873e34563f2c689",
      "End": "f06481a535954d13b9141b5c00985267",
      "Id": "68563f14bd5547f6b029abbe671b87d8"
    },
    {
      "Start": "a9ac038efd364cee966577ab10b8b18d",
      "End": "fb364a5aa1444d3fbe1ae1f3a1be1f65",
      "Id": "f1c43c478c634e84b23b53067a4c00d9"
    },
    {
      "Start": "6a5a852d82c94262a7081734fb2148c3",
      "End": "89776bfd992d473b948b6392d0c6d566",
      "Id": "6252273bf62f407d98940eb2c4745ddb"
    },
    {
      "Start": "12910a7192c8425698d5aad3e9a083f9",
      "End": "b328e9ff6baf49de8e12d873ccbcb8a4",
      "Id": "ff165bd706654c81a2c870c6f18122bd"
    },
    {
      "Start": "5dc547ab13c349f29bf534a9f5e27dff",
      "End": "7d94092fd49747d9bf09a597c2ffb6ea",
      "Id": "92c61dc206834fb4a871d4622bd829ad"
    },
    {
      "Start": "a649e1510c09419c8419dfca2a5ad966",
      "End": "e3038accbdf944c893e1a08fa1ba96d7",
      "Id": "c5e742af975f41218a0ead96f7275912"
    },
    {
      "Start": "13288fe073544a30a9b988b7fa5a618f",
      "End": "5c52c31e879d4ec8aeb838fe9d2db97c",
      "Id": "8f079d0870554697aa50f76338a9239b"
    },
    {
      "Start": "8c059c4271a8481698e8eb8def88a318",
      "End": "a79820516f914428a052bccbae7913af",
      "Id": "d2a15f444b03462aafda61ec190523e0"
    },
    {
      "Start": "9f40c83d32d74a0db7c9b26dc69874f4",
      "End": "3ba36edf9c4b40e3abafb33b47b6cefc",
      "Id": "e1067bd673174e1888b86c20baa817bf"
    },
    {
      "Start": "de4f1c1dbe10401eb2b0a307a5c359d8",
      "End": "2817f1bb1f6e41aeb023626854400ccf",
      "Id": "82a9ceff24ea4fbdbddd28f83f68cc8f"
    },
    {
      "Start": "644d547b521f4a68b5ace7e4b3ed9f04",
      "End": "065c015ceb0f46ae830f8ac9302ac86a",
      "Id": "01ac4de76d54401e8ae2b0707f694380"
    },
    {
      "Start": "644d547b521f4a68b5ace7e4b3ed9f04",
      "End": "bd81e6285e27445faae15807b2b61f2a",
      "Id": "641f0cd041094a75915070140454ac82"
    }
  ],
  "Dependencies": [
    "4796d57c-a1a0-4676-b524-57abb5fa73be",
    "f3228c78-e4a0-42f0-8ec3-a19daf7157bb"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "3.0.3",
      "ReferenceType": "Package",
      "Nodes": [
        "c280c3b7a811448d8f9c1a8523e50da0",
        "7aa6bd20bc324bd68562accb6f293e28",
        "2930ff65bcf74490aeb307c7d0baf4ca",
        "9d395c921b234a90a2fba88c3a6abb07",
        "796f2f2cb1c04cafb57b5435d0c37353",
        "8905a8258e8f47d0ad959748e14d3bc9",
        "fdc58490c12f46e7b1962c43aa6431ef",
        "11007de08b9549389f9356ed5f5fa5de",
        "47cb71e23e724f3591dc257c06f98242",
        "cb523c729bde4828a6fd73ff28e2b513",
        "b277522ebbb54814be18b503f46930bb",
        "a80c0667de844bd0a19a4acf52adfcc6",
        "3849a2a31cc24850b09cfb60d4b72a2d",
        "be0282af998b4b51910888e206edf2f7",
        "df9a1910cfe74742b709e0418acc2e2a",
        "15c6456813fc41db9456baa4b86139b4",
        "6d2c5e4f82aa4212a51e97c095633c84",
        "e688c581f2eb46ebba25f653f6ae5036",
        "664a62acc7b149fbb4175a32cffb3c52",
        "0c6dfb9493254b1d9d9034849cae2164",
        "d0e3454b801e4e12b99d9b900fdec74e",
        "64128be33a884da184f4b0145da1117d",
        "6c67a889888f4aa08e4455ccb19897c7",
        "6ddc341698d64431b6bc3f6086e209fa",
        "cb84839938674c319100b702569d5422",
        "39e1df2486374e2bb447dd8030a74f02",
        "314fe4ff20294dba907c1112809edeb5",
        "30de4aafabbf4b779b7ce8e07939039d",
        "cf7c9bffbade4eb5868e81af67f76ede",
        "def15f1139ea40709bd0b6d5f3e07c16",
        "78985641cdf64d10800d0d7b5ac5cc8b",
        "37cf96df72c04dcb811a69e9fd2ab02b",
        "15f8de7a275a42b49969ca6cbe213c61",
        "646dbf8981a94173af6e689500442f59"
      ]
    },
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "086ca2ad74224171a3534bd9de110f18",
        "3a0c290b5f9e4093aade4ef08a29c5e4"
      ]
    },
    {
      "Name": "Genius Loci",
      "Version": "2021.9.29",
      "ReferenceType": "Package",
      "Nodes": [
        "256cd1f8fd244b85a4eac4a976ec396c",
        "6c4caaa2759c4d4099680894b5c1a220",
        "a3b49f5410434b7a9bdb53cfd4cb41dd",
        "5c24e9056fe14cb788f7f6ed3b1279fd",
        "379359733cf647d1b8b555bd81950c72",
        "8be21bab945043368036e99eb1b9051a"
      ]
    },
    {
      "Name": "archi-lab.net",
      "Version": "2021.25.2521",
      "ReferenceType": "Package",
      "Nodes": [
        "2e2c99411fee493a8a53a8df349db707",
        "5acee88e04794e1ebd6ecf1c93950306"
      ]
    }
  ],
  "Bindings": [
    {
      "NodeId": "9ff34eb2-223c-4afa-b666-8301e275ab6b",
      "Binding": {
        "ByPointAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_9ff34eb2-223c-4afa-b666-8301e275ab6b": ""
      }
    },
    {
      "NodeId": "f4e481cb-c94b-4114-be43-34322b0b0d2f",
      "Binding": {
        "ByPointAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_f4e481cb-c94b-4114-be43-34322b0b0d2f": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.6.1.8786",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Фоновый просмотр",
      "EyeX": 222523.50823983978,
      "EyeY": -128365.03804003343,
      "EyeZ": -124835.05550767682,
      "LookX": -54752.429543199716,
      "LookY": 123145.6736307922,
      "LookZ": 160932.07584233474,
      "UpX": 0.240484727383867,
      "UpY": 0.66523035465436009,
      "UpZ": -0.70684911483395
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "коды ссылок для анализа",
        "Id": "b4a164cc0ba2421fab62f07fe0d3f1ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9982.4101899499547,
        "Y": 6581.5085417541432
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "c6557d9429eb47068cfd470c9560fc26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9404.3195565324149,
        "Y": 7309.9482322040139
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "15b27af1a37349198fb47ca528da7475",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9399.7746207017844,
        "Y": 7225.412007664444
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Type",
        "Id": "cc78674de7fd4c2eadd4fae4b1b2afa2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9731.6925121939348,
        "Y": 5952.081275018093
      },
      {
        "ShowGeometry": true,
        "Name": "Element Types",
        "Id": "27d193b6764047caba60bf8356a3a8fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9705.458858256874,
        "Y": 5864.8543756773634
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "bfc6de6303ba47cfa5fe97d2120dcd86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9689.8905290492639,
        "Y": 6123.0840038027736
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType",
        "Id": "1180aecc304346cea1bb6d60a2132a34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9953.3880653563,
        "Y": 6018.2214682734821
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "64ab9b4659d549d2a2bce7762ceb5560",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9695.8691828086448,
        "Y": 6286.3797586276432
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllFalse",
        "Id": "22c83e0e20df480b960fa71fa7da6157",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9650.3444045500946,
        "Y": 6460.3052362939434
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "042a89521da2466596ea139d0132de6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9365.622070891055,
        "Y": 6190.060052777113
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "60f82a3df44643cf8e6162ccf9d7d0d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9399.0704184342649,
        "Y": 7404.2793836157134
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "f90abcbcbe6e47e789984ea9051e05e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9402.9111519973649,
        "Y": 7497.2660353655738
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "4548dd8801c2405cb66dd3c432d7b77f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8486.2639298009653,
        "Y": 7378.9103611746441
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "f974e19caa5f426e8bdb1da1c3287cd7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1057.1002107836673,
        "Y": 5593.8645177331064
      },
      {
        "ShowGeometry": true,
        "Name": "BoundingBox.GetElementsIntersect",
        "Id": "c280c3b7a811448d8f9c1a8523e50da0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 979.20139948593419,
        "Y": 5427.365445219325
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "513152f8e1294eb88f3f617656f58c41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9353.1498369052752,
        "Y": 7612.8224875122041
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9e2b830b47b345539ad56aa74d6d349c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8969.1358241478956,
        "Y": 7459.9446686734591
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "8c7d8b4f80234c76b3e7cd67c9516c10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9196.902263261105,
        "Y": 7585.817226391564
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "d45056c512de41b385322c5339a9e377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8087.4352598408123,
        "Y": 7987.7607764296372
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetLocation",
        "Id": "436cdaaef754459086f9e9a188c37a38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8131.31343365528,
        "Y": 7838.5769763874305
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.Length",
        "Id": "8c289f2b05c94c4d9be1c3125fc008bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7827.2905664517048,
        "Y": 7839.1561408823864
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.BoundingBox",
        "Id": "7aa6bd20bc324bd68562accb6f293e28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6828.2049746091234,
        "Y": 7232.8621174412556
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7c9ca365545d4b9cb5f10fb73991d66b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8000.3305118994713,
        "Y": 7165.3592832168424
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "8090d45fe19e4c6f96bb265a79dd7580",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7863.7657052460354,
        "Y": 7043.4112615392123
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "211edfb135534e5089ebb4c1ed41a605",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7678.7380755705744,
        "Y": 6603.7461323694042
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.OfCategory",
        "Id": "2930ff65bcf74490aeb307c7d0baf4ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7977.0711835066613,
        "Y": 6609.6920404376688
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "a3a610de36d3467698cd807302ac2356",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8175.7929982555888,
        "Y": 6700.07846653066
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "7819ac03e3de4bd7994f08b7f7d94906",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9400.4485956236058,
        "Y": 7042.4074014796643
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "416d7c65bd2c424d8bbaaadaa0d18241",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9404.9935314542345,
        "Y": 7126.9436260192342
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Element",
        "Id": "9d395c921b234a90a2fba88c3a6abb07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7837.01388032198,
        "Y": 6763.2248047681214
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType+",
        "Id": "086ca2ad74224171a3534bd9de110f18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7798.7507533887056,
        "Y": 6854.7153649126458
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bb96bae4aa8c40d78f85d3f42981064f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7593.639997197527,
        "Y": 7033.4320175749517
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.Solids",
        "Id": "796f2f2cb1c04cafb57b5435d0c37353",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7162.984192431084,
        "Y": 7029.0826890867138
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "02edcbd751c84cf09fb46e95e9b9a879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7142.9273980843027,
        "Y": 7321.9968710636931
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "edaf13dc93074a3a831f1a7e28e3d128",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7146.7393413820992,
        "Y": 7130.29242430252
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "85251ad7a4c144948ea46bb89396283a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7137.183978350904,
        "Y": 7212.974440009797
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetLocation",
        "Id": "40e81aa433464f53814fa2be65f46635",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1415.0166938280131,
        "Y": 5769.2190470640153
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "c2de62ce459a460c8cb1725c764e7a8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2364.7480219021227,
        "Y": 5538.949291414533
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "7dcfb3aed8d54894be98f53733af6825",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2366.3505979359225,
        "Y": 5423.3197689754916
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "fa47ebd0c5e542c2bdc9f41e95e92974",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2373.6333674077996,
        "Y": 5280.3845851261158
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "9508a69d954b4d93bc12b74c5f2364b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2946.15951408933,
        "Y": 5386.18016709459
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "31c9038812f54c96a7f079b333cf5746",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4851.10272830345,
        "Y": 6054.2967240149856
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "41415614014b407aab4f08d548664021",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4742.83613790076,
        "Y": 6123.9740011233562
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "72c737b467164369b13e3160e43c6450",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3977.5622580564368,
        "Y": 6970.1347555157308
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "547c601087104b5789bdadbc6c2d29a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3978.7847224565967,
        "Y": 7103.38337513299
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1bb4773e0c4842c99b50b6d771e0ad69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3789.4629092719169,
        "Y": 7098.0904521036509
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "09286e9966c94a09b2271d406bbdeb25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4410.7114913131545,
        "Y": 6950.8157384783563
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bd201e1035154278a9f4a57da34e7d50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4357.0298188750967,
        "Y": 7065.7792622343723
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "28864f58d44f49e69e910044f9437aab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22741.471533169439,
        "Y": 4493.08322656837
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "d293e216805a4fa8b90f8bbe6daf31bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22742.14964199984,
        "Y": 4699.20945036029
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6607f5d80cb04ec59f92c50faac6061f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22588.120624411738,
        "Y": 4690.77450864578
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3b8d2b4294a64386b1dacd275dc099c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22591.912999571341,
        "Y": 4466.36299032003
      },
      {
        "ShowGeometry": true,
        "Name": "Line.Direction",
        "Id": "47ac816cfa9349c8b319466722c07879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3780.279959057927,
        "Y": 5355.9198940828855
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "32eee341164848e786ef3482f2699316",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4252.70974105221,
        "Y": 5278.3434199297126
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "b57a25722b794d5987ae455706824e5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4110.6433058916718,
        "Y": 5428.27498335083
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "6d15642ff40142e8a41b9144bc28492d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4068.4683193787369,
        "Y": 5190.8311994986225
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "fbac7c0eb8b94a3bb25c22e9912fcb12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3977.4825632849261,
        "Y": 7225.1352576846011
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f4ea9ec78e8c41e9b5a5b804bd12d934",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4275.6851788899467,
        "Y": 5681.0726527238921
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fd1277087d114a16a99a830688a73f85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22598.767358897439,
        "Y": 4891.68044516726
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "8166ad7926c54adba337b438327e069a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22757.575549400841,
        "Y": 4892.43313322754
      },
      {
        "ShowGeometry": true,
        "Name": "большой треугольник",
        "Id": "ca2b8551f96d47b8817b775db1536c79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5173.6172946740926,
        "Y": 6642.2555799341781
      },
      {
        "ShowGeometry": false,
        "Name": "Line.Direction",
        "Id": "3c1cf434477743298858531246cc5cb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3390.93434338357,
        "Y": 6331.06108951301
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d05df6c030b04e4b8b20cfd0cb818704",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3840.8576102946918,
        "Y": 6320.835255945105
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "06e6b3f95f7742e797c37b8b61496144",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3839.291294945353,
        "Y": 6179.1448143512744
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleWithVector",
        "Id": "605a6812c9b740b7b3c539131c2ae040",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3919.5621921781312,
        "Y": 6407.3639107485942
      },
      {
        "ShowGeometry": true,
        "Name": "малый треугольник",
        "Id": "8ab7346284ac4c5bba63df0aac2d2ae2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5174.5857507126721,
        "Y": 6742.4727493285382
      },
      {
        "ShowGeometry": true,
        "Name": "полная ширина",
        "Id": "84ef4b9ce8284e8f9b86de6656158c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5484.9355180760513,
        "Y": 6642.8907882601152
      },
      {
        "ShowGeometry": true,
        "Name": "острый угол между стеной и перпендикуляром возд.",
        "Id": "166974e1b2274ed993c119b496ad1504",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3918.1292942930113,
        "Y": 6518.0104887789548
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e5c8fe2a6dcf45d8828e610db1474e31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1280.0792669654431,
        "Y": 5504.2100880760454
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fac13e6eb9f14cb5b0d930f5e4378898",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1315.3981965343132,
        "Y": 5334.4253441715455
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "d0e57e2ca2884bcbbc3e392023b23656",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2830.28944523108,
        "Y": 6768.90978138499
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "c3cf40baa784454581b3104b8996bff9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2361.2657779451629,
        "Y": 5792.8203306794367
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "61f3f0ea6293470e832c5506fda79019",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2814.42860487446,
        "Y": 6040.25641212909
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.Location",
        "Id": "8905a8258e8f47d0ad959748e14d3bc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3691.50630863062,
        "Y": 5238.877692148013
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "691f4a72b217403491b4b6475d0b3cb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2113.9786123862991,
        "Y": 5525.8292794259869
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "296199f432de4f9d93ffaf29ddb93450",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2349.2102477289618,
        "Y": 5637.6159427980319
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "a130439d50b24990b82eed3b36327a47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2365.2112999528317,
        "Y": 6029.410004999324
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "70607cbcd2cb45bba14f1c26090ecba8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2353.0251869082231,
        "Y": 5914.8263424923634
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "4ac5b5948b8e4199a8b21e2729f64302",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4352.1520952913261,
        "Y": 7186.3764043086394
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "5a555e44b36c4b2ebf7b438cf1ed6668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3848.3021962281464,
        "Y": 5672.4429631009434
      },
      {
        "ShowGeometry": false,
        "Name": "py.Пересечение функциями ревита",
        "Id": "23b8c2eaf07e447d96299421a295426a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1964.3253925476761,
        "Y": 5344.6857450073549
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.TotalTransform",
        "Id": "fdc58490c12f46e7b1962c43aa6431ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1907.8994735929668,
        "Y": 5148.2162630410066
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Round",
        "Id": "6df4c15a922842a793a1b77766837e3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4591.2095557094844,
        "Y": 5306.1875077010318
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "26776f5878934b3a81a2061d6f43f01a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6797.8927379505676,
        "Y": 6749.6007866480049
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "8d7434c83cb0448c80d99bf11af1e2f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6005.7048778898452,
        "Y": 7153.01422515899
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "8dc82f97a4254170b40072fdf8f6b148",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6265.1251268705973,
        "Y": 6932.1618024988911
      },
      {
        "ShowGeometry": true,
        "Name": "Точность выставления задания по координатам, мм",
        "Id": "3e9130dd34684ffb8ccd5d2cc2dc5be0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6815.20555900013,
        "Y": 6477.0506749903134
      },
      {
        "ShowGeometry": true,
        "Name": "Разделитель",
        "Id": "819d729a1bcc47309383b0bbc4d372d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6820.34989320224,
        "Y": 6575.8593803541689
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "187bc8006cac4b1d9c5d34d76114595c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7207.5542922839577,
        "Y": 6874.3748663607448
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "e6eb3183e61b4b75a58d72ea5954af5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6246.7741699480366,
        "Y": 7125.7809204755922
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "6af88980147241469560a8598d6e4fff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21335.110067768841,
        "Y": 4282.69338859037
      },
      {
        "ShowGeometry": false,
        "Name": "Point.ByCoordinates",
        "Id": "82f13d504d3f453aafa4699b7476cf04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21861.897778913364,
        "Y": 4378.1885343933
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ca6140ebdc9e499a9cad4cd3cd25f823",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20994.889308055241,
        "Y": 4584.36975852128
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "b822bf1a1dda4fae8e047dfd4a428fd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21332.803162251839,
        "Y": 4405.21284174183
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "6964f482e3bb4092adf1779bf493bf9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21330.945919119338,
        "Y": 4527.79088848808
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "c246e431118142e4ac311afe34a9799d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21559.588262689038,
        "Y": 4271.53211665467
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "dce07c1dfdd740608c19e53a1047e553",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21546.664804005941,
        "Y": 4395.22807833667
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "0db80bd4d97e46a59fee0b24d47c898f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21552.788108689518,
        "Y": 4520.2583212757481
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "f8eea8c5fddf4ea781728329decb9868",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21325.50541374374,
        "Y": 4662.71542180217
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "6e5f897f3ab1479da985d1c128e55367",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21543.993611205238,
        "Y": 4660.31030267435
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "b3ab149391f14224a017182174605c1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21328.769716969138,
        "Y": 4787.84704544024
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "15706ca1a7f44c14ab371c6325a4bc11",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21547.257914430538,
        "Y": 4785.44192631242
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "697a9a4de9f545908e7136e81079e4b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21332.034020194438,
        "Y": 4932.56448843035
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "9a92afbd03e54a4d9dece24d05b1865a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21550.52221765594,
        "Y": 4930.15936930253
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "8590d9df23be40d48a03f1a5a7927d50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21326.95444745534,
        "Y": 5067.48902174444
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ccf5ee2128984535b3f086a3e4fb96b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7429.0900639594474,
        "Y": 6780.2389546398745
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5ebb746fb0c64d5588725414cdca4a9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20738.23724080254,
        "Y": 4471.75705382742
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "23a1151ade4f462c919fa789ee897bc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20732.394134823138,
        "Y": 4331.88110349281
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "770907c6371942ceb86f4fd95b4804be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22772.586536008341,
        "Y": 4185.18581719101
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "4d322f62d0284178951b031c5f5a8514",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22731.81520145954,
        "Y": 4275.33530726279
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "27ba4573ac88422891af1eaad1ac483e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20769.934742707341,
        "Y": 4179.41395787332
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8adae1320ff84dfcb44b6a3ed41ae471",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21376.490418615438,
        "Y": 4024.47116246404
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "c0abb70df80c4ac7b0a249289c806503",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21696.80565297744,
        "Y": 4040.56241392362
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "93f0fdfcd21545b19e2c5de744b2e48b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21754.979188004439,
        "Y": 4140.01672561593
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.BoundingBox",
        "Id": "11007de08b9549389f9356ed5f5fa5de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 456.28673548287315,
        "Y": 11219.728122539573
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d5d35195d8214182bdcca384f3190aa2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1005.0443100272078,
        "Y": 11446.178590549529
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "66e308730ef3430ebe4d3bbdbc2bdc19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -785.62666076752532,
        "Y": 11309.916334801435
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a9d6022ccb4946dfb08c9918ca45e170",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -561.6940758415958,
        "Y": 10982.321472724012
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.OfCategory",
        "Id": "47cb71e23e724f3591dc257c06f98242",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -862.103132905223,
        "Y": 10987.2294062285
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "f18d69827053418da1129678c0f50487",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1058.7489985266066,
        "Y": 11078.653806885271
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Element",
        "Id": "cb523c729bde4828a6fd73ff28e2b513",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -719.96988059300111,
        "Y": 11141.800145122732
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType+",
        "Id": "3a0c290b5f9e4093aade4ef08a29c5e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -585.93640747931568,
        "Y": 11234.927805201962
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6f2b2984e63940ceb56d525309e7b64c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -504.59008746802283,
        "Y": 11340.997561291791
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.Solids",
        "Id": "b277522ebbb54814be18b503f46930bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 164.3853922463768,
        "Y": 11045.8513665498
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "644f0afafa1c41e7893899cb88e16c0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 174.87199846113981,
        "Y": 11301.68106951522
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "be436ece7bc84d35a95bd958fe27ca26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 169.86378164684356,
        "Y": 11126.724451985083
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7fb6d89d7c1b49b39fe09700364bb6e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 179.41914467803781,
        "Y": 11209.406467692355
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetLocation",
        "Id": "ec7be3ee06534cc68bf0b1bb91b8026c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2232.833109774283,
        "Y": 10068.53842780947
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "ea8ff5712ae7458982279bcebe99ba35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1783.5838338223029,
        "Y": 9679.091645614446
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "e5077b2fddaa42bab48493555baeaf84",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2121.781297362043,
        "Y": 9931.387757937895
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "77a445d53d8847d09715c3b8614819e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1984.8113650255095,
        "Y": 9611.2229256736173
      },
      {
        "ShowGeometry": true,
        "Name": "BoundingBox.GetElementsIntersect",
        "Id": "a80c0667de844bd0a19a4acf52adfcc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1358.3870771254633,
        "Y": 9695.1394646481986
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "46e63759dec144ba895face00849f093",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5842.1957952628327,
        "Y": 10577.159364351066
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "edbf69fc37b44026b36cd3bb180cd146",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5733.9292048601437,
        "Y": 10646.836641459437
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "7d800634cf8c459f8627994cde8cf986",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5289.803948112648,
        "Y": 10999.946080774904
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "12a9df0df8dc489ea5aaea268ab8f260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5304.9035481075089,
        "Y": 11367.004908629047
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5ea5389d0f41412b8b52f59cd2e0009f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5108.7844330736689,
        "Y": 11348.117381901373
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "307093a6bd9447cfb4b6740787b125b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5278.4277430867351,
        "Y": 11484.561183539139
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "a3a614e71f5b41cd95b97673df6c1429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5955.2323809498521,
        "Y": 10203.86682882184
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "37e9fab3a6f142c48ad698fbbeed7a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5815.5880596325223,
        "Y": 10318.559719512501
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8bd2b69c2f314eb989414ac5e8bd1a10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6026.8279192667214,
        "Y": 10319.92816678001
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "54e465d146b84e549764a33e83acbcb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5471.2040243779229,
        "Y": 10211.275435499279
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "dd1dc07f79814ac6bc55ee118d619eb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5501.7902203762624,
        "Y": 12049.596843873882
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "edb79d730a2e4dd6ab7b6149be950c60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5647.4155459844824,
        "Y": 11845.968476562473
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "7b8e2deb24904979a6aa32004a502ae8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5302.6337985634418,
        "Y": 11886.370704346886
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "88f2bd2290fe4bd896ca5978875d1e77",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5265.3256284120325,
        "Y": 11985.659056278633
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "764f98a0b6ea4860bccd8e912a6f1a67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4241.8414836261927,
        "Y": 9930.3832684222325
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "b8207d9bd4fb4318b2dbe3d9abda549e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4198.6607301374324,
        "Y": 10625.18267974718
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "ccd1955e667a49fab5f3d85210cb6431",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4203.5452519136225,
        "Y": 11006.769679592253
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "40d16ad077ca47e091b638d11ab4e118",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3390.1340509521224,
        "Y": 10586.38341066891
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "8fd7983c852540dcb00fe1171e052a46",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3377.9479379075128,
        "Y": 10471.799748161946
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "ac0fa1e0dbb04d488f67d0ee7806c27f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3386.1885289444526,
        "Y": 10349.79373634902
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "2dc17ad3052a4266b0b5a34afc3739ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3374.1329987282525,
        "Y": 10194.58934846762
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "a661a69e4e01439f83a58a3d6e9d92cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3389.3961087056123,
        "Y": 9809.2149902604069
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "7af30a12bac44952807a1da7a6b6a067",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3391.2733489352122,
        "Y": 9980.2931746450777
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "60af0bfa21c041e4b25d0ff420f9be95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3389.6707729014124,
        "Y": 10094.156992286902
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "acb41e0836c54c9da3ac31a280fd55c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3087.4933984974323,
        "Y": 10033.629849115598
      },
      {
        "ShowGeometry": false,
        "Name": "py.Пересечение функциями ревита",
        "Id": "00609c42d99d40148445697c5fe997b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3013.7530058637522,
        "Y": 9887.50609473609
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.TotalTransform",
        "Id": "3849a2a31cc24850b09cfb60d4b72a2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2894.4066689327319,
        "Y": 9651.6219244892782
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a47a153f1c6d4a3bb59aa36be931a37d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7595.9386038649209,
        "Y": 11101.548619706658
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "c0b319f6c1454e8582fa21d8d262c658",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6509.8994678070248,
        "Y": 11537.684295614912
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "4788a7de0e774091a0d7f43a6600e5a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6823.16480725037,
        "Y": 11310.74811816
      },
      {
        "ShowGeometry": true,
        "Name": "Точность выставления задания по координатам, мм",
        "Id": "aa12941ccb4044ed8412a6b278ce27d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7582.697318167202,
        "Y": 10895.498622734238
      },
      {
        "ShowGeometry": true,
        "Name": "Разделитель",
        "Id": "b5ca242df79746afb6eaf0bddd2fb88d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7592.9273811267622,
        "Y": 10978.76672233422
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "bd6a707be6874f509abf1be1556f9336",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7981.6757604731429,
        "Y": 11148.108322240949
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "f1e25be755d54affa77192fd275a2748",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8227.1359298738025,
        "Y": 11132.186787698538
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "5b9ec9fa1f4d46398617ca7051c4fe58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23007.907809243319,
        "Y": 12519.571356052886
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4a916974193347608f91e0578f38ee9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22260.439194639417,
        "Y": 12382.924686039385
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "60f913373efb4d358fc2dec9db2943b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22824.809965169719,
        "Y": 12272.510401862186
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "45a597eedae34a82878bb11d54b8488d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22782.051330372418,
        "Y": 12536.245763791387
      },
      {
        "ShowGeometry": false,
        "Name": "Point.ByCoordinates",
        "Id": "a3e3a698bad64304a41fd2e8fe510cfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23292.519010330019,
        "Y": 12615.021376069386
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "1aa9640a8ddf4c289aae2119c2b90b73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22994.984350560117,
        "Y": 12643.267317734886
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "6661aa9c504e40e49626bb717c84b1a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22180.71368137742,
        "Y": 12579.920342890986
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "de7938411fc94f6294d6ea982f78870b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22781.122708806117,
        "Y": 12653.252081139986
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9048e76702874aa1ae457fc283a814d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22186.55678735672,
        "Y": 12719.796293225587
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "b990ffe35d4b4cfdb64166d024cdd6b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22779.265465673619,
        "Y": 12775.830127886285
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "4d5ac08a00de4b53a5f98fd15188c128",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22997.75366313522,
        "Y": 12773.425008758486
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "b3e6d06e663b4a81a777338c426c59a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23451.71436199762,
        "Y": 12105.952790576186
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "c2a2bb4115274ceea7d9569addfe723e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23509.887897024517,
        "Y": 12205.407102268586
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1b015074db53481191ba8c11fca3dad3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24036.44017096602,
        "Y": 12938.813748043985
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2326c1b55ceb42bcbf544b0304ca4ad1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24013.567892395418,
        "Y": 12710.135885121386
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3af92355588149848e96109f4763acab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22443.20885460942,
        "Y": 12832.408997919485
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "89ea1e64e21b4439b15deb317901d378",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22773.824960298018,
        "Y": 12910.754661200386
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "7771088193a145eea71609d8bba841e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22992.31315775952,
        "Y": 12908.349542072487
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "12fd8d54961f472581a1b80da1dc909d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24395.48204669312,
        "Y": 12447.810900151186
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "2dee30f61b454b368d3f2f797596ba35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24189.79107972372,
        "Y": 12741.122465966586
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "ad9aec8a39654018800a8617053ed8a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24190.46918855422,
        "Y": 12947.248689758486
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a4f2a287893c457a89cbea3ca7c006ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24047.086905451717,
        "Y": 13139.719684565485
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "9b0f939032c44f74a6373a67de8094fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22777.08926352342,
        "Y": 13035.886284838385
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "53f5171857e448eea6dce1ef51ecd45b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22995.577460984819,
        "Y": 13033.481165710586
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "5731f7d7d4cf4bc88856b360d2d2fc2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24358.918136134518,
        "Y": 12538.189762493586
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "8d329085151748098a13210aae2afecf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24205.895095955017,
        "Y": 13140.472372625685
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "a401b45c2e464fb5ad90136be28055d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22780.353566748719,
        "Y": 13180.603727828486
      },
      {
        "ShowGeometry": true,
        "Name": "String.ToNumber",
        "Id": "632bb83b0e6e4ba385791571afcb3172",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22998.841764210218,
        "Y": 13178.198608700686
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "07a68bd7f237419692b5aa81ee005b3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22774.332919668817,
        "Y": 13332.467599276486
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5c921514b77a4b68836a74306f446398",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5970.3035191466579,
        "Y": 11789.837174916007
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "4183ae793fea4d6c816b4176b2746dfa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24611.018609357641,
        "Y": 8378.85605417763
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1ad8a088153e4bb5a5e54a56b7d7126c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24272.096907528241,
        "Y": 8383.1049677799874
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "3bec285a87464063ad7d099f4e137c93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24622.494067197804,
        "Y": 8683.7568233875027
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c26fcb7b4f3e414ca9373fa19c164784",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24268.975270202442,
        "Y": 8709.2637766106927
      },
      {
        "ShowGeometry": true,
        "Name": "DateTime.Format",
        "Id": "f6c0ff5f33d940c0ae709baae24061e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24473.770302190322,
        "Y": 8866.1776666275036
      },
      {
        "ShowGeometry": true,
        "Name": "DateTime.Today",
        "Id": "f1284f9e80924f4a812d3d149d6091ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24316.62054486791,
        "Y": 8807.9286697179232
      },
      {
        "ShowGeometry": true,
        "Name": "Document.FilePath",
        "Id": "304b69893e3345c89c6037dd1fe29968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22485.181473142318,
        "Y": 7929.79867495274
      },
      {
        "ShowGeometry": true,
        "Name": "Document.Current",
        "Id": "3a9e794ec34a44d6a727bcff7de468e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22295.23526435838,
        "Y": 7930.79867495274
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "2682d92c8ac04349bae971875d53356d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22790.415059448525,
        "Y": 8010.6394997481593
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "dcf0075d28454660b94555d4f5cac56a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22702.101674384663,
        "Y": 8121.2586856157295
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "80adb66827ec4ea2ad86befba53a15a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23103.42872387731,
        "Y": 8010.7660442544957
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "a3a055cee16c41bbbfad68083f2ef178",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23292.559855744548,
        "Y": 8003.09423572962
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "48df1124b0a04402a66c5ffd9c60f9c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23270.669899816665,
        "Y": 8145.8349721436089
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "b69d59d947304b46a9141692744e523d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24621.96009419395,
        "Y": 8526.5660994677164
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "40114be0495b4fbd9b4fbd7ac40a865f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23476.6066164301,
        "Y": 8228.0147722219917
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "c8e00cce9e274f45be0c176ecb1c5c5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23564.920001494,
        "Y": 8117.3955863544224
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "98b3f4429c4849699a99809669006d1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23876.338226986743,
        "Y": 8261.1727998881215
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "01ae8d13ef6642d6b192c6d2a9b7aa8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24403.774605820174,
        "Y": 8139.9397043126992
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b49f4d96c1104ba4bad0d0c9db495e56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23652.079498886247,
        "Y": 8350.901438368759
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "e68299b83b754482ac229624421c487a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -512.81471611268785,
        "Y": -138.09344080517053
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "6a099f35091a48aabb52f9dc4b164908",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16691.44183686531,
        "Y": 4249.5825077682266
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3b44953bcfe94ff0870403480f53b797",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 25281.985597695442,
        "Y": 8340.3654370900458
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "406bc09d638c4a358fab010414884657",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 25320.517093896626,
        "Y": 8471.7047610593854
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "fb0eabe0b5704cf3a8cc1eedec2e5d56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 25341.32673700044,
        "Y": 8606.0156567533086
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "282924c0be8b40d7acf17dcd21f7728f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 25707.960591665113,
        "Y": 8526.881710798265
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "c09a6eb308f54506be341cbb5c8066d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5719.7129311547078,
        "Y": 14023.132673402271
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "f6d226385c6a4b96977d675fc04e6847",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16471.761958841613,
        "Y": 13087.576943166479
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6fdc1600ef844cef960cab5fb5ab8b9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5935.3123140200678,
        "Y": 11346.96874555487
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "c47ed99904484e34b75b7d29c7a6179e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5959.9618808144978,
        "Y": 11496.994887716839
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "1dd68cc6ed634db8b069fe3bf5c6b047",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5942.2016569332245,
        "Y": 11237.67436068491
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "82cd8b026bc7430db100ebac197ed99a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5945.5228077489082,
        "Y": 11101.633577327966
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6f5b1c0b27af40cebecf553192a4cd39",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6549.4666012210337,
        "Y": 11829.01186010371
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "35bbcbb25b0e4a5d9e19adfd4545a8b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3645.4250995078846,
        "Y": 14826.346853531217
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "51592b824aab4465b039e0317e1735a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1156.3291425098796,
        "Y": 14114.069832028134
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.OfCategory",
        "Id": "be0282af998b4b51910888e206edf2f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1111.6334013961095,
        "Y": 13993.747672262434
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "9e4f540592d34f33b1c2a8316a2ada41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1120.2185051962078,
        "Y": 13904.550203511735
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Element",
        "Id": "df9a1910cfe74742b709e0418acc2e2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1118.7729146444108,
        "Y": 14239.157185067732
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.GetFamily",
        "Id": "a8b6fedd5dd8499cbc70e1427fd1e897",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1133.83540108741,
        "Y": 14340.778731702132
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "b5b2373c77a44059a52c4838f129adbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1143.9311557439032,
        "Y": 14430.765132560435
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d983e51a1440412a90aae656b308598a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1545.6716296964551,
        "Y": 13861.225780915753
      },
      {
        "ShowGeometry": true,
        "Name": "Element Host",
        "Id": "256cd1f8fd244b85a4eac4a976ec396c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2568.4462423361097,
        "Y": 13669.445863957581
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "ff99aca516c04ed99d29e829a79c6af3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3150.6656730503364,
        "Y": 13625.692632530336
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "d6a5438a67df4d368a8516ffc143d187",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2840.5467992813315,
        "Y": 13808.705954724941
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Location",
        "Id": "15c6456813fc41db9456baa4b86139b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3274.8681572985697,
        "Y": 14304.958482443766
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "09edf9e6789545bcacaf30486e1a9b43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3930.86095656981,
        "Y": 14094.373296215159
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.TotalTransform",
        "Id": "6d2c5e4f82aa4212a51e97c095633c84",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2755.7569483889447,
        "Y": 14507.05596603316
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "0824f835bab44a2fb3e6e1dacba70026",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3295.6816492368462,
        "Y": 14517.613609885539
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "37e07290807443ecadf25e769bb99fb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3134.6287860605453,
        "Y": 14617.77630036281
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "bdc4eba24b0f4c4eb44436e74e014d9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3076.8637048599458,
        "Y": 14387.916993166571
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9b50b218e1f84a579a9867fc16364a8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3121.4933453629446,
        "Y": 14524.144552525639
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "7d3c8739c36d4b759aaf03735aded374",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3535.8989185033943,
        "Y": 13732.087129396408
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e15d17bb24c348a5aa2a68bd967fbd3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3370.6544830751309,
        "Y": 13807.626904388033
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "62fbcccf51934d1e985d214cf20e4814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3347.0248187398765,
        "Y": 13703.354398505531
      },
      {
        "ShowGeometry": false,
        "Name": "Element.IntersectsSolid",
        "Id": "e688c581f2eb46ebba25f653f6ae5036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4229.9537459733729,
        "Y": 14442.213707068708
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetLocation",
        "Id": "bd55397db5ee44c0b8060c45b641e395",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4452.2380775082993,
        "Y": 14643.671637941876
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.SolidIntersection",
        "Id": "664a62acc7b149fbb4175a32cffb3c52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4608.1864146834469,
        "Y": 14760.658930347361
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "fad890ba3106459582a2a43499bd7cec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5024.0791659641609,
        "Y": 14549.126344418784
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "840ad134fbe24b80aaa374013c48f304",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5007.502806220009,
        "Y": 14428.954793034243
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "5936cd847d84436cbd3f7b77962c6ff3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5012.4075082820409,
        "Y": 14657.316141792144
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "fbccfc5e177f4966bd43a1601feb38a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5017.4297590233618,
        "Y": 14343.323992522526
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "25f84e7453224e319262ec554f8eb1af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9651.7627321958826,
        "Y": 15753.64782594491
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "d23b6e6749ef4f7da732851b140b4636",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9092.46317791392,
        "Y": 16116.13019701681
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "96e90ebd376545c9a948ea94e21cbb26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9343.7968815224,
        "Y": 15931.8239467811
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "bf3afa4410bd4d50b08402c29b08ba22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10037.499888804101,
        "Y": 15800.20752847911
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "b56d6c3f9f2042e8b793cb03a70c20a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10282.960058204761,
        "Y": 15784.285993936708
      },
      {
        "ShowGeometry": true,
        "Name": "Точность выставления задания по координатам, мм",
        "Id": "ada9fc336c914338b6c7df3ec7ff5b89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9638.5214464981618,
        "Y": 15547.597828972406
      },
      {
        "ShowGeometry": true,
        "Name": "Разделитель",
        "Id": "706ce5a440c3422dbac6b10f4e4ffd07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9648.7515094577211,
        "Y": 15630.86592857241
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "288e0840051c4183afff79bb862ae9c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8575.0492423937976,
        "Y": 15823.951537873241
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "091df06bfa664cb69350dfd1e1197a55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8376.7208143238622,
        "Y": 14516.658555503494
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "84057d7144ed4a3fb1ba9cd767e29a78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8118.6235032114746,
        "Y": 15684.248802272341
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5d531c73501f4cf3bc8cd4287a3c6428",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8135.2276559597776,
        "Y": 14820.62509149074
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "7987bffb7a364a76bc46ede94d36282f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8131.9065051440866,
        "Y": 14956.665874847742
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4c1d23159f284054ae014e639edf8ce6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8140.3986454440474,
        "Y": 15093.46099779724
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "c85794ea671b4b28adbc19e93c1c3100",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8137.0774946283582,
        "Y": 15229.501781154242
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "e738301bbcff49f6900da4f05e50dc25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8305.125276006991,
        "Y": 14400.597217545295
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "51536cba159d4e90a702bb91d3267a71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8165.4809546896613,
        "Y": 14515.290108235997
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "ca4d65c869854443aa71a9eaea9823ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8755.87488832546,
        "Y": 14585.4389643794
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "14355c5c2db54221800c7512116ba90d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7815.0394070313869,
        "Y": 15599.889851734442
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "104842636160426a977864f0454ef5fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8647.60829792277,
        "Y": 14655.1162414878
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "28f63d483fe14ec98b182e67a4a536e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7821.0969194350619,
        "Y": 14408.005824222797
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "9cd87fcda93742f1841d670e8a768caf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7629.0346266455763,
        "Y": 14945.129124522344
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "9ba5f6dd21f24454bacb923e33b210be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7630.2570910457271,
        "Y": 15078.377744139641
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "93f58a0422924b7ab3e9909fc38bdb32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7628.9549318740574,
        "Y": 15200.129626691243
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "5963687653b1418a98efe3c9ce13cb76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7669.4140814231669,
        "Y": 15803.51821904584
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "63c34532bb2240e5b4cadf44e8ba45f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7470.2576596103481,
        "Y": 15640.292079518844
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "dd3c4706dfe94e529f105dbb623df5d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7441.8001464853687,
        "Y": 15795.098189161892
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2945799a9bdd4eefbf0dcee6180a227b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7434.1379760118871,
        "Y": 15059.490217411942
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "90c0f265565d4b419beafd7ddba101ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5777.2652429886393,
        "Y": 15149.076192158576
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a7edb86c53d14661b1f8c149eb1f4a36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5832.2903210285958,
        "Y": 14728.220874871293
      },
      {
        "ShowGeometry": true,
        "Name": "Element Host",
        "Id": "6c4caaa2759c4d4099680894b5c1a220",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6826.412125745921,
        "Y": 14121.715906110248
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "87b238f940e24701bc5b24c4f778461d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7118.6789204191518,
        "Y": 14229.696990426059
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "86c48aa3a1994934a13021e5e165052b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6798.8687353759278,
        "Y": 14313.145936868663
      },
      {
        "ShowGeometry": true,
        "Name": "BIM. отверстия в перекрытиях",
        "Id": "fb6604773fe144a98ebb2600caf3db86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2192.4621747411152,
        "Y": 13942.121493568404
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "251fb69ae4a944ce8891f92e8a212592",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5144.4380936846737,
        "Y": 1357.5950803250303
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "84c49d29bb934e95aa54550cdb416bc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5127.8617339405237,
        "Y": 1237.4235289404294
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "c50afd88fea24b7fba984b338c3464ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5132.7664360025537,
        "Y": 1465.7848776983296
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "9634141d787441cf989125861005c483",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5137.7886867438738,
        "Y": 1151.7927284287305
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "2485a6d9e0be4a2d8009c3b4376db4c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5734.5264796545634,
        "Y": 1490.8537672486282
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "45c8186fb1c14625810de3e4cff5cfab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6023.35419920263,
        "Y": 1835.1799073207121
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1a18d0689cc144c3853321825a573d95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5987.9324438417734,
        "Y": 2093.0505180419241
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "4fcaa660b52e4d79880c6edc00445ce1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8370.7114806539648,
        "Y": 2105.95167739902
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2e8586888eb6408681037525303c4574",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8262.444890251274,
        "Y": 2175.6289545074196
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "29d9640a813241f892ff7476d25d2e24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5133.5008641127015,
        "Y": 2369.4222699542129
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "7e6d1bd31ea24a1db2bd6ddb3e13602e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5131.4181807954774,
        "Y": 2234.8385950723459
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "005654ab32ea462aa6b7074818b62a1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3752.9536842154957,
        "Y": 1131.558689491218
      },
      {
        "ShowGeometry": false,
        "Name": "Element.IntersectsSolid",
        "Id": "0c6dfb9493254b1d9d9034849cae2164",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4079.3401440680709,
        "Y": 1641.7639909988848
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetLocation",
        "Id": "d2314620aa1e4c59a73af4585a0be28b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4165.578903864699,
        "Y": 1929.8620053752434
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.SolidIntersection",
        "Id": "d0e3454b801e4e12b99d9b900fdec74e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4518.3114612356558,
        "Y": 1977.1827521196053
      },
      {
        "ShowGeometry": true,
        "Name": "Element Host",
        "Id": "a3b49f5410434b7a9bdb53cfd4cb41dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6373.3725286414783,
        "Y": 1079.8383323913431
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "856273a696b442a3b0689958f29540fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6665.6393233147082,
        "Y": 1171.148884751457
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "33aaf4257f10405480aa66d9c38ef549",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6345.8291382714788,
        "Y": 1271.2683631497448
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "d4b8f850f7f6494d92f32061fe115f95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3538.4860813860578,
        "Y": 1694.6848923781019
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Location",
        "Id": "64128be33a884da184f4b0145da1117d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3004.7499807097538,
        "Y": 1251.9227455250766
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.TotalTransform",
        "Id": "6c67a889888f4aa08e4455ccb19897c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2507.5786867236311,
        "Y": 1433.2008685139781
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "83f3a0555c414d5488d93b89392be12b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3047.5033875715408,
        "Y": 1443.7585123662784
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "f53d5b20f96b48fe810cf470894504bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2886.4505243952408,
        "Y": 1543.9212028435786
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "a50542cfd895411789ead0c323cd2fe0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2828.6854431946413,
        "Y": 1314.0618956473782
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "09a6060fd557401cb2018ef73cdc75e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2873.3150836976311,
        "Y": 1450.2894550063784
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4b8c0ce91e5844ba98aff29e4fa9ccb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 800.973519759822,
        "Y": 588.21452282820974
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "392f7cf747ca44bfa257b86c6bb66ab7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 411.631032573252,
        "Y": 841.05857394060877
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.OfCategory",
        "Id": "6ddc341698d64431b6bc3f6086e209fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 366.93529145948196,
        "Y": 720.73641417490944
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "baf090298aba48a3b4d75a1289d96bc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 375.52039525958207,
        "Y": 631.5389454242104
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Element",
        "Id": "cb84839938674c319100b702569d5422",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 374.07480470778137,
        "Y": 966.145926980209
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.GetFamily",
        "Id": "2b9749ac8c1d47eb80d2e4bd6626611b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 389.1372911507824,
        "Y": 1067.7674736146091
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "46015ca08c2b49a18da36b22f2cb52dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 399.233045807272,
        "Y": 1157.75387447291
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "345a643086944f28807f930499e64069",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3359.9548482919927,
        "Y": 960.27822485093657
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "173178d17f13464f9c13f69101b03a2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7831.90693002781,
        "Y": 1850.2029912029966
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "20f92e57ec0a49288bd7fde242790f0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7404.5239473660095,
        "Y": 1841.573301580057
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "12d46514ab0a408fadc7e1f93a8266dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 776.46711382417016,
        "Y": 748.90512938874372
      },
      {
        "ShowGeometry": true,
        "Name": "Line.Direction",
        "Id": "f3627d84af074a99babebda65dda3162",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7235.5586050234333,
        "Y": 1510.3801149678843
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "1940de05fb114007b14adb15015b033e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7758.5931695287636,
        "Y": 1460.7811455044571
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "ba7f4f1fd10446eb9fa137d9eeb13c1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7597.5403063524436,
        "Y": 1572.3154232096372
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "7be6402fd46c48b1ba766f6b40f17713",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7601.5066986747834,
        "Y": 1412.3101518419894
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.Location",
        "Id": "39e1df2486374e2bb447dd8030a74f02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7177.0127479646035,
        "Y": 1278.5443468295343
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Round",
        "Id": "17fd1810dd064654a5245b4b3ca3983d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8181.6201325633938,
        "Y": 1503.964764283548
      },
      {
        "ShowGeometry": true,
        "Name": "острый угол между стеной и перпендикуляром возд.",
        "Id": "cf5d38881e1342f4a289a0ffa38f4585",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7550.4866836853043,
        "Y": 2730.3262976048754
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleWithVector",
        "Id": "bfe99d54d4224a46b3132e9b1da2f934",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7545.3740838476942,
        "Y": 2518.9632186754534
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9619da7f0f094efca95df21b241d52f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7478.64607211013,
        "Y": 2439.4796051342419
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9fbdd7ce50b84b1db43db6746c995af9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7475.77184611837,
        "Y": 2352.0674552008722
      },
      {
        "ShowGeometry": false,
        "Name": "Line.Direction",
        "Id": "132accd759964128a27046952048db25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6456.9690204756844,
        "Y": 2149.5785479643664
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "c0128977c4424c4d8e114d4d67a94bd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6174.214097825422,
        "Y": 2434.98653239527
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "82b625a8c2654c63b20f305c91f494fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6175.4365622255818,
        "Y": 2568.2351520125303
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "58811c32b18d4b6da69202a81f053218",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5955.9280509688979,
        "Y": 2574.754415185278
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a23d37e01e6945eea71fed62cdf8cc62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6577.4647806992962,
        "Y": 2438.2165900153559
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "947235aa76e2441d89227d6512aae784",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6553.5174833745914,
        "Y": 2654.6589421790295
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "12a3e2b0aa23436fac04ba49a8e764a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6187.3574554376628,
        "Y": 2714.398823580299
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "8ddf23d8187c49279192b816dfa0b617",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6934.0468829220627,
        "Y": 2761.7364564215504
      },
      {
        "ShowGeometry": true,
        "Name": "большой треугольник",
        "Id": "14e76ff450994ae8b44080827a0cb729",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8358.7432611182739,
        "Y": 2617.4414037304277
      },
      {
        "ShowGeometry": true,
        "Name": "малый треугольник",
        "Id": "eaab049ea55b4dc9ae869bd9d7cfcc6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8359.7117171568534,
        "Y": 2717.6585731247878
      },
      {
        "ShowGeometry": true,
        "Name": "полная ширина",
        "Id": "b62da573324b45d7986fd4b8f42a6000",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8657.87670667448,
        "Y": 2771.909432359008
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "122d456250ef4d648b96d8235d1736c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10150.131859610079,
        "Y": 2708.4570767009673
      },
      {
        "ShowGeometry": true,
        "Name": "Точность выставления задания по координатам, мм",
        "Id": "299fbd67329242babe436edda5802e50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10011.893646974504,
        "Y": 2414.0936640029668
      },
      {
        "ShowGeometry": true,
        "Name": "Разделитель",
        "Id": "8d26dd0bc2314eb48f7cf7585ccd79ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10024.609703837721,
        "Y": 2524.7076965427518
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a142eec1adf24196b745015e2c86b15f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10626.39375165694,
        "Y": 2795.4816571806405
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "524de66f2e8e40098352a43a0fce195a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10873.856725247655,
        "Y": 2748.9785881601674
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "da603602cf3b4bc4a2dbc175f61b91ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1960.3608545504503,
        "Y": 768.78305714895123
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "479f5ffbb3194d9094427d14ed156326",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3422.9260428093594,
        "Y": -2898.3935712821112
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "e2c03c4d4e8a4f0ea4fb5ba86eb38de1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2838.0847087759657,
        "Y": -2036.0339799261383
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "bae354b8bf554c92aff2b93b56fba2e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2542.8986563602921,
        "Y": -2987.9785931876904
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Location",
        "Id": "314fe4ff20294dba907c1112809edeb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2330.9768188720427,
        "Y": -2399.4583331426
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "e0b1d7435fd5438c8e2727e4838eb4e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2346.647047296552,
        "Y": -2238.16348775782
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "944aea5de1924d9383aecb042a93105c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2185.594184120253,
        "Y": -2138.0007972805197
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "0730df86c8a24d8b9483a84b3e7a10ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2127.8291029196525,
        "Y": -2367.86010447672
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "855679ca70bc4b0fadf3c1d4796db3fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2172.4587434226423,
        "Y": -2231.63254511772
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.TotalTransform",
        "Id": "30de4aafabbf4b779b7ce8e07939039d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1806.7223464486424,
        "Y": -2248.72113161012
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "df9b60b135e542ddb0023fd7f588ba04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1213.9685451413125,
        "Y": -2895.4295070758508
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "3302c7dc8f0b438780dd67dbd5470950",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 905.53104467845276,
        "Y": -2918.5676219846455
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "35a1150fcf2d49dbb8d6110ff707cbbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 91.184652368428033,
        "Y": -2888.788610773408
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.OfCategory",
        "Id": "cf7c9bffbade4eb5868e81af67f76ede",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -278.8380432116254,
        "Y": -3013.4093216329725
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.GetFamily",
        "Id": "7480c01f59d440b4a5cf3051a656fa94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -256.63604352032496,
        "Y": -2666.3782621932728
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9f13199e496147bda3107022e8bc4f93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 155.20018508871465,
        "Y": -3145.9312129796704
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "3e23185029704c7fb8536c87fe8542aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1782.238140114192,
        "Y": -3047.1942568596496
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "48cc55f1941446fcae05a9eb6af5f8a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -234.14230209785535,
        "Y": -2893.0871618672732
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "c373e13b0e6e46ed91fe45de917ac246",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -270.25293941152529,
        "Y": -3102.6067903836733
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Element",
        "Id": "def15f1139ea40709bd0b6d5f3e07c16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -271.698529963326,
        "Y": -2767.999808827673
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "577050fb1a7e49aeb6245bfcb78993ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -246.54028886383537,
        "Y": -2576.3918613349729
      },
      {
        "ShowGeometry": true,
        "Name": "Element Host",
        "Id": "5c24e9056fe14cb788f7f6ed3b1279fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1787.9107728757426,
        "Y": -3147.7765252445497
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "fa77cbe8952540d3b92b7a550b54b5e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2119.5360790195427,
        "Y": -3249.7392467171903
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1c8c6c4a5bb1429fb7e85b58a0cb3f4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 765.15478037433786,
        "Y": 916.383379316972
      },
      {
        "ShowGeometry": true,
        "Name": "грань-труба",
        "Id": "92a5aab22e7942b0a85c860353107745",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7108.4183758865638,
        "Y": 15518.634015060552
      },
      {
        "ShowGeometry": true,
        "Name": "round",
        "Id": "4e93e63765534480bfed8e9143ed3126",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6604.25605218166,
        "Y": 15321.855228995199
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "e376d9b10d744d0bac6c017872c12ea8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5384.7381647171433,
        "Y": 14575.142085162506
      },
      {
        "ShowGeometry": true,
        "Name": "грань-труба",
        "Id": "0f7ecf7c554e4d5cacae1c276963509c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4983.0905959462789,
        "Y": 11868.85950270556
      },
      {
        "ShowGeometry": true,
        "Name": "round",
        "Id": "0eafe58b4a7b4978a4c320f337e8cb7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4962.0926761171786,
        "Y": 11749.429605453761
      },
      {
        "ShowGeometry": true,
        "Name": "round",
        "Id": "9dd6a3c0b6fe4a1fad0c3cdc88087c38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4203.7202971103206,
        "Y": 7395.4586430312229
      },
      {
        "ShowGeometry": true,
        "Name": "грань-труба",
        "Id": "58853846e74b44caaa5a18fa7a14b863",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4224.7182169394191,
        "Y": 7514.8885402830219
      },
      {
        "ShowGeometry": true,
        "Name": "round",
        "Id": "faa7b3d1534749a08fbaccb7d989d2ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6494.4608899886316,
        "Y": 3138.0480279034837
      },
      {
        "ShowGeometry": true,
        "Name": "грань-труба",
        "Id": "af5bc518213a4f9e9825e3cddbe09822",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6515.458809817731,
        "Y": 3257.4779251552827
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "d291c02860d0406ca74a2931389a0fb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2643.9014198851128,
        "Y": 601.59304224682592
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2c36a6b07f064b3bb67d9873e0475ec0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2911.9658092059594,
        "Y": 673.357089606851
      },
      {
        "ShowGeometry": true,
        "Name": "Element Host",
        "Id": "379359733cf647d1b8b555bd81950c72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2381.69293003642,
        "Y": 592.56508158948077
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "ffecb39657e14fbe969829a63355481a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6218.4296672463852,
        "Y": 15132.801945379402
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "ea9a8be311474ef2805683e41a3f5daa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6219.644738087246,
        "Y": 14808.798142691619
      },
      {
        "ShowGeometry": true,
        "Name": "LinkElement.Element",
        "Id": "78985641cdf64d10800d0d7b5ac5cc8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1269.7447895598762,
        "Y": -2516.3255442686027
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.GetFamily",
        "Id": "52192dec8f6c4e45bb6b81e4e976e7ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1284.807276002877,
        "Y": -2414.7039976342026
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "f3e670e0993c43e69dbc6d26639fe0e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1294.903030659367,
        "Y": -2324.7175967759026
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "65aa028662c8465ebedb0e22aa2c0a13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15343.200601172075,
        "Y": 2547.894058505156
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "83223959b7e1404bb788e20ac8569c28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15809.929771068459,
        "Y": 2276.4696993479556
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "0b61886050d9437381c3c3765cae1172",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15777.956850047609,
        "Y": 2687.6895908071242
      },
      {
        "ShowGeometry": true,
        "Name": "Family.ByName",
        "Id": "48e13c01c0034300b5dfa4130e0b70e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16119.592226987839,
        "Y": 2129.5637948099757
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Family Type",
        "Id": "872286f5f03747e5b92f474b76f07c5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16084.046105006266,
        "Y": 2716.6653232813837
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "95ed21a250aa4f4d8f8edb7ae3631f0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16367.177276654085,
        "Y": 2129.3347111532557
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "ba435d4687de4bc7a2ad2d85b7b9d5b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16628.529696591086,
        "Y": 2129.2507764137254
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "17b1002ff7404b7c8e3cf0916ecca3da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16404.199939644106,
        "Y": 2273.4114431830958
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "becab78fd73a45089ce9e5e8bc0f2dd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18881.165860554425,
        "Y": 3031.3975496042763
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "2eac51bea13147a4bb11dc60b1728d3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19099.562539768565,
        "Y": 2857.628211436067
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cc9b533fc7294422a5373cd266245440",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17520.953172354362,
        "Y": 5486.7394151241951
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "6f540e3ad37f4ce594ea9a2d5e2e8d65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17984.232905458462,
        "Y": 5299.6071905062654
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllFalse",
        "Id": "f4b1fcdda24446ec8e361171eeee6194",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19310.285228862904,
        "Y": 3035.3917169705769
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f109a1b926b144f5be9fed2f2e69e81c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19358.979744684246,
        "Y": 2736.9038323056216
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e7b9bdd3b99248a3acb5caf128eeecf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18883.173987373517,
        "Y": 5439.3451778663821
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "0cc5ea531c9d4c128c41bf4858431923",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18623.756782457865,
        "Y": 5560.069556996832
      },
      {
        "ShowGeometry": false,
        "Name": "Elements.Delete",
        "Id": "2e2c99411fee493a8a53a8df349db707",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20870.486488802962,
        "Y": 2790.822666114223
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllFalse",
        "Id": "903053fea84d4d0dbd3b58c158864374",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18834.479471552204,
        "Y": 5737.8330625313411
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "c8c2d4c321bf4edba6dfd90a6f6d8edf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18405.360103243725,
        "Y": 5733.8388951650413
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3d4f439711644434ae6f554e7e3ad56e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19460.449176866656,
        "Y": 5356.4259521140411
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "6c2e7ef24c054b4faa043bd972a7bdea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19539.565352848054,
        "Y": 5773.6301794036917
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "27f9e7711c574270a5302e5d73c382b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19423.425802309284,
        "Y": 4969.5826825929707
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "6453be53d05d44bc9577ce59415b09eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19900.704259285554,
        "Y": 5766.7511014093216
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "bc40e67d69254e7a8659b688d4e61fd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20146.000965367457,
        "Y": 5673.0270040623218
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "c26d16a443344b098e969f7dae927746",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20174.575212828237,
        "Y": 5315.8325416127736
      },
      {
        "ShowGeometry": true,
        "Name": "BIM. связанные файлы",
        "Id": "1721f0ace30543848e7b94b230a94fd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1025.9194143529885,
        "Y": 10615.116551145136
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c85135279ca347cdb88ee9f7b83f2b0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9075.6776786403316,
        "Y": 1966.1622636173297
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "e517ac3d33104fd2b01eceda5680447d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8019.25707913113,
        "Y": 2671.4604898319076
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "30191c94b458471db79937bbcd401d89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9784.1927047454265,
        "Y": 2882.1849877491359
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c90c14e67c2343ad975d3061c0530f2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11131.255331686556,
        "Y": 2825.9368861800731
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "e27f3eaedc6c488ebd008d1030edd3e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7890.6917989417116,
        "Y": 6901.2816492901811
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "68b2089ae2274daf9999a21759eee62e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8648.8002153709822,
        "Y": 11169.041310874827
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c297a902d4bc4de9aee9082432bacab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10697.481332480762,
        "Y": 15516.518805646492
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "74cafa5fb8364bb9b7688f5a4bfd8d33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4139.0694834493552,
        "Y": 1251.8288689719072
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "8756b597915e48bd8f78d92406ede249",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5325.8888660080984,
        "Y": 1613.8467255441794
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6d182631b1a74c66922ad869e057526d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9876.7847726712171,
        "Y": -1155.3176390234398
      },
      {
        "ShowGeometry": true,
        "Name": "Точность выставления задания по координатам, мм",
        "Id": "367a842d403848c5b43d04f241c98fb4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9821.8273558068176,
        "Y": -1362.6712650948198
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "5459f2ec3f2e4bc5b5e82465b4cd2858",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10236.204951248015,
        "Y": -1064.56406768834
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "ed66625a3ef64a3bbd067fb63c3ada2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10466.265967513416,
        "Y": -1125.9831001305197
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "983e9a2741a5427292a0f27d774f2828",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10810.175968473406,
        "Y": -1096.801229647898
      },
      {
        "ShowGeometry": true,
        "Name": "Разделитель",
        "Id": "b18aa04a049f44988950ce1e6100539d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9832.057418766417,
        "Y": -1279.4031654948299
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7abdfa34a8e3451baaf5765b90605edf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9510.8456178065462,
        "Y": -981.58972797526985
      },
      {
        "ShowGeometry": true,
        "Name": "полная ширина",
        "Id": "afa69d758cfd421e858e2b4801e4181f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8384.5296197355965,
        "Y": -1091.8652833653996
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "066d97ffed3c4b48b8fbc99d0e4c9276",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8802.3305917014477,
        "Y": -1897.61245210708
      },
      {
        "ShowGeometry": true,
        "Name": "большой треугольник",
        "Id": "445ade3679e04e1185e224853d49f8b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8085.3961741793873,
        "Y": -1246.3333119939798
      },
      {
        "ShowGeometry": true,
        "Name": "малый треугольник",
        "Id": "c79d3e6d9d294254bdbf962e35955fba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8086.3646302179668,
        "Y": -1146.1161425996197
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.PointAtParameter",
        "Id": "eb01c4adfbb046759617c7e8528560ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8097.3643937150764,
        "Y": -1757.82303832539
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4385e93643e64c3da4f6ef83a3216cb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7989.0978033123874,
        "Y": -1688.1457612169897
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "98d879a0537947b989e0527ebb9f00ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7558.5598430889268,
        "Y": -2013.5717245214096
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Round",
        "Id": "423f6344ae944b7cbc2c3cf461e03e69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7908.2730456245072,
        "Y": -2359.80995144086
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "54990abf8f7a409e88d97ae82b51e3ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7749.1949754660172,
        "Y": -1192.3142258925
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "7900a13f624a4dc8965f01b9ed280ddc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7131.1768604271265,
        "Y": -2022.20141414435
      },
      {
        "ShowGeometry": true,
        "Name": "Line.Direction",
        "Id": "c1ce1896961e4e3280ae8aed8f2438cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6962.2115180845458,
        "Y": -2353.3946007565296
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleAboutAxis",
        "Id": "b7003f3ed65b4d48ba0c9c395b837bd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7485.246082589877,
        "Y": -2402.9935702199496
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ZAxis",
        "Id": "39856b7e230147e7a33c9f3c9e3cefaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7324.1932194135579,
        "Y": -2291.45929251477
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.XAxis",
        "Id": "6caa073b30ff461ab85fbb1fe9b1d7ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7328.1596117358959,
        "Y": -2451.46456388242
      },
      {
        "ShowGeometry": false,
        "Name": "LinkElement.Location",
        "Id": "37cf96df72c04dcb811a69e9fd2ab02b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6903.6656610257169,
        "Y": -2585.23036889488
      },
      {
        "ShowGeometry": true,
        "Name": "острый угол между стеной и перпендикуляром возд.",
        "Id": "30af50008c3e49b0bdaf0225f8a34c0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7277.1395967464168,
        "Y": -1133.4484181195298
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.AngleWithVector",
        "Id": "048661a15872416fbcc6599ef69a62f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7272.0269969088067,
        "Y": -1344.8114970489596
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d22e0d181d164c2e89cf51ab31fdf164",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7205.2989851712473,
        "Y": -1424.2951105901698
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4adeb07acc09472bb5d7f920bfdb8ad4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7202.4247591794874,
        "Y": -1511.7072605235398
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f278932703794feea34807652231823d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6392.2922363758271,
        "Y": -2692.6258309729496
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "304a90d041634e48a122e54d41e4ebc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6304.1176937604168,
        "Y": -1425.5581257090498
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fde4348ef7a14109971aa1dfd5b7dd05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6280.1703964357066,
        "Y": -1209.1157735453799
      },
      {
        "ShowGeometry": true,
        "Name": "полная высота",
        "Id": "c5e23a8872ea49c89d12a36f0d07d629",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6660.699795983177,
        "Y": -1102.0382593028598
      },
      {
        "ShowGeometry": true,
        "Name": "Element Host",
        "Id": "8be21bab945043368036e99eb1b9051a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6100.0254417025972,
        "Y": -2783.93638333307
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "92091317c4944a91a9c3a59b68015612",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6072.4820513325967,
        "Y": -2592.5063525746696
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "0467745bb26346579a498ef8a019f126",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5900.8670108865372,
        "Y": -1428.7881833291399
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "545feda9838d40b1a588dac4e02294ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5902.0894752866971,
        "Y": -1295.53956371188
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "f306e72b21ff42559e20fa541405d996",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5914.0103684987771,
        "Y": -1149.37589214411
      },
      {
        "ShowGeometry": false,
        "Name": "Line.Direction",
        "Id": "6c2da22a329946adbb4e5feb9f9b94b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6183.6219335367969,
        "Y": -1714.1961677600398
      },
      {
        "ShowGeometry": true,
        "Name": "round",
        "Id": "15ca9522a40e4be496e15a20e59a7ac5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6221.1138030497468,
        "Y": -725.72668782092978
      },
      {
        "ShowGeometry": true,
        "Name": "грань-труба",
        "Id": "e965b9d5b363434281f12c1c02a24720",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6242.1117228788471,
        "Y": -606.29679056912983
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "effe104f378145feb068b2129c13098e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5682.5809640300167,
        "Y": -1289.02030053913
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "2c95807ace10441d89d2bd2303b8e67f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5461.1793927156768,
        "Y": -2372.92094847578
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9dbe1410e6f745d587cb071a62765676",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5750.0071122637473,
        "Y": -2028.5948084036995
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7410d002beaa4781b779e53a7db5b9f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5714.5853569028868,
        "Y": -1770.7241976824898
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c70a9d668ae84f868df9fe228893f474",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5052.5417790692172,
        "Y": -2249.9279901802297
      },
      {
        "ShowGeometry": true,
        "Name": "List.IsEmpty",
        "Id": "20c1f8ba26fd4fe6a21c8587c18207da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4871.0910067457871,
        "Y": -2506.17963539938
      },
      {
        "ShowGeometry": false,
        "Name": "List.FilterByBoolMask",
        "Id": "64ec7aa785bd46c3848325dda4a3c6d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4854.5146470016371,
        "Y": -2626.3511867839798
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "b0c877e32c314fe0ac4ed0cc0758c0fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4859.4193490636671,
        "Y": -2397.9898380260797
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "439599a53e974ce58234efd7237d60a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4864.4415998049872,
        "Y": -2711.98198729568
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "0bf453fe8d9348d88e6ab084ec55cf54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4860.1537771738167,
        "Y": -1494.3524457701997
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "d23c1446c69048aebba5be2c027fdf7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4858.0710938565971,
        "Y": -1628.9361206520598
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.SolidIntersection",
        "Id": "15f8de7a275a42b49969ca6cbe213c61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4244.9643742967774,
        "Y": -1886.5919636047997
      },
      {
        "ShowGeometry": false,
        "Name": "Element.IntersectsSolid",
        "Id": "646dbf8981a94173af6e689500442f59",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3805.993057129187,
        "Y": -2222.0107247255296
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetLocation",
        "Id": "1a89a9a8b07c46d7af0d1dedf9788bcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3892.2318169258169,
        "Y": -1933.9127103491696
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "b2528694a124446f8aba9f7b43ac8372",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3700.8870869954571,
        "Y": -2731.6249129053249
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "27548b6f60e148668b941fede4f938b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4287.5393003935242,
        "Y": 14089.080703353371
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "ec8294ffadf04ee78f0a8caeb70935f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7126.06907973123,
        "Y": 10892.1892754454
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "35cd1c49c5fd4bf898ea8e8402431069",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7153.7055141415012,
        "Y": 11028.086265298949
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "0148e1f91a664d8cbd4724ff37af1707",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7155.72831128752,
        "Y": 11140.8748687711
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "df4a87e16d4d48ffb27321a7cdcdadb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7155.1138273305314,
        "Y": 11256.300753346251
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "16d6040ca99448a39ecb4fed1ec16247",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7150.54342171904,
        "Y": 11373.0452784729
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "30748bce041e469dbcf237d124341da3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6925.7324264567251,
        "Y": 11016.511430494444
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "63e3a47eb06a47da8facabeb8c80cda0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17987.870499400655,
        "Y": 3560.7683307559541
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "50c320c879414e18b2c6da27f2141a2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18316.861536046745,
        "Y": 5521.09831641215
      },
      {
        "ShowGeometry": true,
        "Name": "обработка вручную созданных",
        "Id": "a8bdf2ae2e4d4b51896e21d5f516842e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19812.755530591974,
        "Y": 4666.9484735263068
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "04f204ca9e1e4a92b566ecd54643de0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20087.011008103833,
        "Y": 5053.4247946924061
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b5cb814d37e247609a483e084dcaa198",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20039.547168442074,
        "Y": 5179.4586874218858
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "57dbd949334242c8b02dbe4888ab8ff0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19867.87635960933,
        "Y": 4902.476431841611
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "d456a566ce90470e86b54b0f5d250f8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17003.2718254607,
        "Y": 3900.8557616702883
      },
      {
        "ShowGeometry": true,
        "Name": "BIM. трубы/воздуховоды",
        "Id": "67f804da65d045aca395b58e026c26f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7459.1778017779843,
        "Y": 8196.3601101143759
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "50cb16bd39fe4bf5b758acfa2f5824d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16016.445988790822,
        "Y": 2915.6341159970152
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d70e7951ea23460eabd0c241b70165b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5540.4015776552242,
        "Y": -2791.8212463787117
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4d7c7a6493c54d47bba6adbe6818d4eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5728.7528666080125,
        "Y": 1047.7490444639959
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "de9c205ca2b84e6b972c8e66b2b65d81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -397.73851349057486,
        "Y": -636.095950061096
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "1148bbc364ae40bdac96f2af9cad6006",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22721.99086364824,
        "Y": 3815.45525224206
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f9a304fca9f54ec980e1bf513f520c17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22700.390911730141,
        "Y": 3706.46165063068
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fe12ea8b82bb40d38b8badf1b11de59a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24331.394176145619,
        "Y": 11891.406084409886
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "64f727e9674b45599fc421d20d46404d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24348.258631586519,
        "Y": 12043.769673491386
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d3387424fc144d18b444eb3f398b0321",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24359.088936016018,
        "Y": 11538.469282071086
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "63479b5f2c92482ebce5817e75a6b92c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24361.914412592319,
        "Y": 11639.897112627486
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "7feaa7a62d4a43ab9160ab1ea07b5927",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22729.196889043138,
        "Y": 3517.48342749007
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c2a71b28d3954729ab38823f9bbd16ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22732.455774432241,
        "Y": 3411.32373324544
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "cc52e9470083422b93ac032d1b87b4f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19850.214666445856,
        "Y": 3024.545011268604
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6a675453fa354569bf619c17fc12804a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19832.365252017833,
        "Y": 2907.2356725152636
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "eb7d22a92e394848a5c881d7058cb180",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20192.548255407815,
        "Y": 2922.9477344075708
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "9f673a7dd27841ddbe1aca11d07f3e4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19863.63566517688,
        "Y": 3249.3163294653082
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "79352fea86e94737956793139bc19c2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19861.427738014983,
        "Y": 3167.7124735055681
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "e9344a934b2d4574870245c169b27200",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17988.42009458979,
        "Y": 4002.7294145509345
      },
      {
        "ShowGeometry": true,
        "Name": "BIM. отверстия в стенах",
        "Id": "5d0e91aa422948d49764d01bf8dfa192",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2981.031189770516,
        "Y": -559.65583904774041
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "91743249ade34a01af0f5a508b71807d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2834.1877625876323,
        "Y": -646.2124230484319
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "7f26f0c7df1143bfb47bd5f864ee4c4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2986.6017579647728,
        "Y": -656.48389867662718
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "64f3340a824e448684d4a778ffdb3e3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18309.9967780001,
        "Y": 3563.09501220741
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "eb507274b6f14694898fd99d1f1f6499",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18342.820480790106,
        "Y": 3857.7666413623497
      },
      {
        "ShowGeometry": true,
        "Name": "1.1 Создано новых заданий (стены):",
        "Id": "608b346f1db844f2ad6d5fe2ad01858b",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 18960.173785959381,
        "Y": 4105.8804217970264
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "8be0a64075af4f3a98490e7f6eb8ed3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18844.953840526046,
        "Y": 3915.5352153129
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "39306901b1e044578be1d0835425e1be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18694.792301615293,
        "Y": 3720.230449589088
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "679fb7a3686441899d83e105665e7427",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19130.517128809737,
        "Y": 3717.402843774295
      },
      {
        "ShowGeometry": true,
        "Name": "String.Replace",
        "Id": "475953bb7ec14f3f9f2aa05b4f62f837",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20703.105002850309,
        "Y": 14082.822447047392
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "1ecec1006020467b82c6cd4595bb4efb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20948.401708932211,
        "Y": 13989.098349700393
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "035af58ad3a4426d930dc71885804fa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20341.966096412809,
        "Y": 14089.701525041763
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllFalse",
        "Id": "37d07229779641aab66848d1a48edad8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19636.880215117009,
        "Y": 14053.904408169414
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "502639771ba34ec2ad3faa7e4984c993",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19207.760846808509,
        "Y": 14049.910240803114
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c734ce711ff249529aaec66cd02aaa97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19685.574730938311,
        "Y": 13755.416523504455
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "da31a3d20e864a0da737a5c20783a1d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19426.157526022609,
        "Y": 13876.140902634905
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "74a33a9a46ee44ec85dee6ec0d475ecc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20262.84992043141,
        "Y": 13672.497297752114
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "0cbf414671534e4d84c33541ac9b5a48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20976.975956393009,
        "Y": 13631.903887250844
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f564dc7311314cfc92ae79f71f208ce5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19119.26227961151,
        "Y": 13837.169662050224
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3d5ae8b66bf84b799e28de6030453ec5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20841.94791200681,
        "Y": 13495.530033059955
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "a31de63be5034a65a29adb893ace953b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18859.644641039755,
        "Y": 13579.173040136064
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "3c74558ddc884721a4c8fee6f150d08b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20889.411751668609,
        "Y": 13369.496140330473
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "f83b8287db2847208daa085f39cf7f2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20225.82654587401,
        "Y": 13285.654028231043
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a4b5e9426b2e44c38ed3fd1e83ab7912",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20670.27710317411,
        "Y": 13218.547777479684
      },
      {
        "ShowGeometry": true,
        "Name": "обработка вручную созданных",
        "Id": "be7d7530222340bab4a84e6bffd452eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20615.15627415671,
        "Y": 12983.019819164385
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9fbdbe1a28e94913a1550ba9b6674581",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18316.953190517008,
        "Y": 13585.186097090615
      },
      {
        "ShowGeometry": true,
        "Name": "1.2 Создано новых заданий (перекрытия):",
        "Id": "de5a0664f27846b888b72dfecaaac2bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 19595.89094587709,
        "Y": 12438.33187134073
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "d30d153d54b4407d90576a4a5183b3cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18622.392109375891,
        "Y": 12368.338621594479
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "56b46f6b41fe4d37ae6b4db55c498da0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18976.79249557629,
        "Y": 12223.375848405898
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "0457d868e60340e48ca5d3bb87e5a141",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19681.656237472329,
        "Y": 12347.421662678034
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "c665cb169d364f03966706e8a8b5baf6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19328.76431640139,
        "Y": 12085.839656632639
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3cecdb8840ba4b4eb11ec8ebac7fe646",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19755.985735147238,
        "Y": 12159.54272685571
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "4be7906e3ecb481d98937cf572172982",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18564.982271316385,
        "Y": 11852.669815560081
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1c80f5fceedb4470b1f8ea9dfc13ea3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18950.759321827845,
        "Y": 11914.813038387811
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "85ab869f842544ca99de735ce6366f3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18230.962754717624,
        "Y": 11633.450641405212
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7c13de9c0c6a4025b95a033b3d7084a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17768.594731437555,
        "Y": 12272.813147108964
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4347ed8af63a4d6e9a80dc524e5d55fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18177.498509191119,
        "Y": 11484.749142817724
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "c07b5db6cc364818a310c23317ecbc41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20666.0364087416,
        "Y": 11565.3876751034
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Family Type",
        "Id": "9c0d1fc1f0c54f5ea9330ea76aa9609d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16610.868536639187,
        "Y": 10674.209605164382
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d0bec0dde5e440439464f077bab5c141",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20663.828481579709,
        "Y": 11483.783819143644
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "2a032a04a5bf4e04a79d52d43988eae9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16460.791332141031,
        "Y": 10806.639041452032
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "afdfa34680654e0492d554ae7d9cdaed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20650.600616271211,
        "Y": 11363.959879395423
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "e16769d8e5c4489080d736dad3e974ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19674.718276596988,
        "Y": 11444.80049798676
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllFalse",
        "Id": "adbc0c65559f49f793d47082294f777c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20112.685972427709,
        "Y": 11351.463062608653
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "d66138a0aa6a454bb86cd006778462f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16344.403927475087,
        "Y": 10432.446777442521
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "dfe1a05070aa402282cf24be6c5406c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20648.392689109311,
        "Y": 11282.356023435683
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "ec8a01657e7d478e9f4095ef824e01d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20994.94899897261,
        "Y": 11239.019080045644
      },
      {
        "ShowGeometry": true,
        "Name": "==",
        "Id": "e06f8ff31a1143bbae4b06ce5cbd2d2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19901.963283333309,
        "Y": 11173.699557074144
      },
      {
        "ShowGeometry": false,
        "Name": "Elements.Delete",
        "Id": "5acee88e04794e1ebd6ecf1c93950306",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 21714.939540338532,
        "Y": 11086.158842809069
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "00a661a91bea4a428f303b127edb143b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20161.380488249011,
        "Y": 11052.975177943694
      },
      {
        "ShowGeometry": true,
        "Name": "String.Concat",
        "Id": "fe726967dced41a6b4f1f84fb3e7d4bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16881.013769515484,
        "Y": 10020.205749081131
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fb2fb1ebba114860a098e8402a9c5d58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16286.743600939888,
        "Y": 10023.264005245992
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "fff89da8e6434764bce5c4d32cbd2fad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15820.014431043484,
        "Y": 10294.688364403191
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "24239079a83741c5b129bc03ff29c6fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17105.343526462486,
        "Y": 9876.0450823117626
      },
      {
        "ShowGeometry": true,
        "Name": "Family.ByName",
        "Id": "5bc8734a16364fa99cd532e2dcfb5d8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16596.406056859287,
        "Y": 9876.358100708012
      },
      {
        "ShowGeometry": true,
        "Name": "Object.IsNull",
        "Id": "a6d15f3bbeb744099b882a6af0edb384",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16843.991106525486,
        "Y": 9876.1290170512912
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b2bee339041d4be79bdb14fd9da35d9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17703.697352586154,
        "Y": 5357.789583148533
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1f6ba3d5dc0a44c7a12e9021c893c4e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18642.415496014255,
        "Y": 13804.05888954542
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "9156a17f2f5c489f911abb9c834cc6ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17046.838182164392,
        "Y": 4260.6109681005573
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "b45852286f7f4acebd44b8752150f139",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17760.213540721285,
        "Y": 12596.689509836793
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2a485df7d58a4ddcb2f9c48e52b59124",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6277.3218487860458,
        "Y": 1736.1904096241717
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "ec6505c10a2e425abecf8bc8af7179ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21789.49811247837,
        "Y": 5120.6848891945192
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "a593df0487b14a7eae48980e5e25bea7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23101.409319943537,
        "Y": 13352.445571388602
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9b670c46f31a40c9bc1405885ac3de4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38624.299292140058,
        "Y": -1288.8139928128003
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d30dd761cbd44b5294a21984488d0335",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38392.458527333227,
        "Y": -1300.1512050002002
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "72dc7048835d4c32bda0f2507b494766",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38579.122827874875,
        "Y": -1067.6017171321207
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "771cc8d14a96402ab428eaa8c63ad1a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38602.47787788861,
        "Y": -976.950976876491
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c26ae3384f934dd49721437731ac6253",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38288.129784686811,
        "Y": -840.86842052836982
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "35d2fb3cdda64fc4bc78b30d455cd39d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38016.706723176525,
        "Y": -773.53480077485983
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "cb57a21c675d463fa473d281880adee2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38200.213451854295,
        "Y": -1029.9300918216231
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "7007a91c68e34d6fafb3e18b7f24fe01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38943.73692404195,
        "Y": -1283.0761441216
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "374d2ba4ad8a4840affd50087db4eaa4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38918.0820464491,
        "Y": -1383.4140818585902
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "0e60f40913174f0d8cdc2e82f17c4630",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39533.880080861105,
        "Y": -1896.4368400007806
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "b536b540d452486f9f2db0dead277525",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36929.669488097556,
        "Y": -2393.7130159632407
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f23086abed5246e1a61b7d0e4c0110b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36357.783618880669,
        "Y": -2359.00646491294
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "d7287c97531640f99490a43110822c70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36170.276575708667,
        "Y": -2269.29659822751
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f5995bba78ba46fe941ab655874915fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36133.79047109247,
        "Y": -2355.2608526639206
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "1a1a9623acc1441dbf7be10a87e7d10e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36128.981006188114,
        "Y": -2504.1741633666961
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "47031ae573f84fa892f4afc0e3731fb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36885.146053991448,
        "Y": -2478.7188537942411
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "0a05a4d3c88f40fc90e06bf46cd0fbef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37068.120943009417,
        "Y": -2720.0001683414671
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "788f1c1464784782a8d6ad2b5aec3065",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39404.723340514967,
        "Y": -2693.01631972615
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "826d0d6ad200423195589f576130b603",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39493.743790222739,
        "Y": -2787.73530478655
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "a756cbab6a07467e940ac89846a56b6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36537.3208750319,
        "Y": -2715.0827198406018
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "4ba766087a9d4575b5755146a68a4480",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38519.313389792849,
        "Y": -2818.9421633174206
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9fc46735f23841ec82ff7a08f979e830",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38497.349031953585,
        "Y": -2911.6640000306506
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "63096d822ced4c18adf35c795fccf96f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37691.547743864117,
        "Y": -3290.5852438174938
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7c87e7c76bdd433f8f7adc391bd5d1f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38040.869630834044,
        "Y": -3269.920628747891
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "d81da4ca732e4b098e4ed2fdf0071fef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35904.362788347855,
        "Y": -3538.5104459067306
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8743561b407b48b69b3eb7ff2e838f51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36162.198081935552,
        "Y": -3460.883030012521
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "740a1af73ee44bbc926f3c7ff10d7a65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35488.081348899,
        "Y": -3575.0389493965
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5f79a8d385904d4ca20ec84177df1253",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35242.996227469,
        "Y": -3572.4021426867612
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Family Type",
        "Id": "4e8677960f134ab29d4ad5df80c0e502",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39396.186079935447,
        "Y": -2612.4022507709506
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "435209598bd04a63a9e554308edd7dfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39444.85963115334,
        "Y": -1801.7178549403807
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Family Type",
        "Id": "d54e3993d01a47acb992b997c89205da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39436.32237057382,
        "Y": -1721.1037859852404
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "1f01185821b248619f78c438898fea82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34925.376557110154,
        "Y": -3623.130795638911
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f4ac187997f24bacb43993c6f9c0b008",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36942.633391617615,
        "Y": -3666.9221425775186
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c46a9b1c4f8b4d1ea8ee2bc5ed8b12fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37172.4861389897,
        "Y": -3754.6959112720838
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "fa8c6c1b4252453d9849eca2b76d085a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36548.126674002655,
        "Y": -3769.4217065032444
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "36a9499588b74c38a49c003d19a74dff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37555.593536649787,
        "Y": -3759.4757572521862
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "812a532833de497d9656dc04e3f28174",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34873.093603651854,
        "Y": -3772.3752817703707
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "7d0d2992dc814d4c97ba4f6d007f67c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35833.484405528063,
        "Y": -4016.7162953906727
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6216d6f093b14c488fbaef51cf2db49d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36161.9751727754,
        "Y": -4066.271023336908
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0e88407213ba483799418b497592d3e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37787.90230873468,
        "Y": -3994.9411559632463
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "84463155de594baa981d093e58cd7462",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35303.2268482753,
        "Y": -1652.13013824551
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f3b41923bfa94f1da98a3ce82b6c9c56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35288.6960980957,
        "Y": -1402.52675837312
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "46c577f9fe6540a692d33e48c9721632",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35043.068687486,
        "Y": -1901.7544487627
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "dd3915067d9748db94f279aaf690e4ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35066.3777579905,
        "Y": -1457.34111858767
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7c4a47e847374bccb6455263ebea3f6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34073.6898968973,
        "Y": -1640.56095630647
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3c5e37fc7fd34b44be354f3ee25c2a9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34395.9899666784,
        "Y": -1416.96865782712
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "6aabd494bb03404ca7210d484823d8fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34655.1339759788,
        "Y": -1395.09595092638
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "2795fecb3b9346a986bb5b81b94c0637",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34125.9728503556,
        "Y": -1491.31647017501
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "a67c879297904b70b17f999f64a9b586",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36860.450169389012,
        "Y": -3450.931471940527
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a2de08bb5d34474294ca102195b62432",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36846.154277038513,
        "Y": -3543.5527900566476
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f3918670a60e43a6a0006a0ead36ba76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36403.034720191892,
        "Y": -277.81177432257368
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "847eb61504a3477ca48d3412a916e924",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36190.9214285546,
        "Y": -327.440046665204
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "5629c6cfffa443a8991e7632eb983fa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36809.45268010677,
        "Y": -788.60667820504364
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "f5ba883feb704a8985f108594ff06ea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36871.343074214063,
        "Y": -293.54834988517382
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "6b583a3d66b5484b8aeaf04c0f92bfe0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35892.356842976369,
        "Y": -378.1686996173537
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8055ac8e20624fd7922becbe36e2b8ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35840.073889518069,
        "Y": -527.41318574881393
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4b370222cd81432e878c4cde14585e03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37069.610840896064,
        "Y": -538.98236768785387
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "466ef2df90c645559d1e2596ba05b8d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37129.178367801767,
        "Y": -215.9209339909637
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9f093f1e9c69454999cc8140a25b4d67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37548.43280271961,
        "Y": -685.089572802249
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "d7588f6f471d4114aaa3edb78e70600d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35254.251140129738,
        "Y": -3845.7811914510366
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d6c878f9c32d443c95ecf16db2546642",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -35257.223542952015,
        "Y": -3940.2202248485019
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "94a22c7478ea49cfa9ea28fe008ab880",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36060.114151655616,
        "Y": -775.480622130542
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "200b8a3265124075818a932fb284ae55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36057.141748833317,
        "Y": -681.04158873308177
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "76c4779d62724a6f8343d190ef48427a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34426.209715625475,
        "Y": -1652.22866931565
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cd3c0c2120144b85827d03250ff7c513",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -34432.173921917143,
        "Y": -1752.6513096518531
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "72a5037e7f9440199edc164d32dc493e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20324.350560603634,
        "Y": 2703.3127534971222
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "dd5bb4b3dc474cfe9c7b352906489e08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20322.142633441737,
        "Y": 2621.7088975373822
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3fa76f2e0ea74714826edda4789afc69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20643.935911745953,
        "Y": 2902.1748115371338
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "360ac842261c4cd1bdf95124ad59d2c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21520.7201506554,
        "Y": 11203.1550166328
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "5751613502f54f6e9a3e602dcb117b30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21201.134799513,
        "Y": 11004.29295859281
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a3d1273d126a4b628a6bdd083c47c162",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21198.9268723511,
        "Y": 10922.68910263307
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cd9d1f11d8e747b5adb11324ebcd5ce1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16088.277003205842,
        "Y": 3432.63532809957
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "25c9b42012c44174a7bee1ad47c6a587",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17333.23915069455,
        "Y": 11515.194235127505
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "84adefe347944a549cb1b96218a41525",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16971.592447893003,
        "Y": 3537.3060528868009
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "026229900142489d88d06acfad2c83cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17007.248595575253,
        "Y": 3437.3271536472089
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b7cbe24fb3034bf0b0201941d6dcbec7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22032.83106547844,
        "Y": 3546.73509338458
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "50c934cd337341269850da27f1a8e192",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21995.555652922238,
        "Y": 3641.17260711935
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "5cddf18442544b9db11c92f1f65c55f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23732.10159907422,
        "Y": 11661.095974773387
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "297d1e36b0d940688aea0c0624670337",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23755.78358802362,
        "Y": 11549.838592388385
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f3ee49bdaa9c41eca0986aa48ea9e4d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23472.23227223452,
        "Y": 11748.971361832986
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "163d8b60c0d74116a9b3d667ea0f2d8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21750.628972030328,
        "Y": 3715.1127719971378
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "2863c150c52048cc833ef0f6b9788da3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50192.765360654652,
        "Y": -5560.462380531927
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2dfc57791f3244d5a2ca53f0399de065",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50557.081434401851,
        "Y": -5801.1024604207669
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e21464230ec04bb4818db3b0598773f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50376.302667352553,
        "Y": -5751.534556573667
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "34a0b6b0c6854285bcbdd1bfa8dc2238",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50220.095942480752,
        "Y": -5879.1212570414473
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "d148ab5b3a124a80ba8c000245bb8f6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51007.3436529052,
        "Y": -5738.14080975765
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "cf7cc84bc51249b488e871822607bad8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50983.4545363783,
        "Y": -5874.17848565837
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Family Type",
        "Id": "d3caf7be90514a6abac8196d6c614260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51150.102939960554,
        "Y": -6052.5545036067269
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a5b020c2b3fa475aa33c92de85d6fa52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51316.753770799653,
        "Y": -5649.5298527657169
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "7a2643f34a0b46a692d7032f0dc624f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51223.349830892053,
        "Y": -5877.3582050387267
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8ee859cffd434598956867e9113f255b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51318.463926798155,
        "Y": -5768.0849212162666
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "f1291ca6ed1243d6a3aeba3c9dc8fc4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51158.640200540052,
        "Y": -6133.1685725619272
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyType.ByName",
        "Id": "512dd6c66b3943deb1135640090c2546",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51597.023779404451,
        "Y": -6128.4943336687766
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Family Type",
        "Id": "132f6530eddb43e5bca399ee72771f25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51588.486518824953,
        "Y": -6047.8802647136172
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "4a0ad03b0d3a473087e800638e32549d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51686.044229112253,
        "Y": -6223.2133187291665
      },
      {
        "ShowGeometry": true,
        "Name": "Наименование типа семейства",
        "Id": "5e6086efc88b41ddbf0081fdf3df7291",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51247.660650247853,
        "Y": -6227.8875576223272
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script поворот отверстия",
        "Id": "0c84f267cc8f489183c5667c225708c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24191.778322224021,
        "Y": 13300.58402991105
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "68356901639d4972ab97407fee2723bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -10234.484323342986,
        "Y": 5564.41093261802
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7411f9c4d1844371a46dcd399752f2f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49777.993442168969,
        "Y": -6303.38031290833
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "5c4c5db79177436cbc21c24abe180796",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49229.652478295939,
        "Y": -6003.6813514691748
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "22fee04f91fc4d89bb09d04676234674",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49678.976647558346,
        "Y": -5928.4460503615937
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ca30cebd2ea74983842dabfc4a4f051c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49634.453213452143,
        "Y": -6013.4518881925942
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "281c3b8b42de471a83ea991bdc2d9891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49264.898973118208,
        "Y": -6596.8732591435746
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "d1643fdb0d9e4d8bb0509407496fc8f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49714.223142380608,
        "Y": -6521.6379580359944
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9a50154c17ac400caadfe242faa21d1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49669.699708274406,
        "Y": -6606.643795866994
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "1d354dfc4d5b4f1b80d2ea024cd935cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49729.181969805708,
        "Y": -6828.8891820697145
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "04e9549b66ef444999fe4afe9f30c6f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -48968.954982029936,
        "Y": -6607.9068877287955
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d0e04afe98e440788c4832170dc9d45f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -48843.523940143154,
        "Y": -5996.6774335821474
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script поворот отверстия",
        "Id": "bba28cecf881427e901a9c5c273ceb4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22429.154561467163,
        "Y": 5085.9830390677416
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4ba480e7acdf416aba143627820cd36d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16461.415341920434,
        "Y": 4410.0333752352462
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "94c75e6761784e81afa31a188c298f13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22376.803314290388,
        "Y": 3966.401294902726
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "120cfa9602de4c718f91aa1ed28f1f4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22547.646861494915,
        "Y": 3933.5743198790587
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "bfd565eeb5ef447da2fefc7c40b0d62e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22770.77553986392,
        "Y": 4027.5950851889806
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "5fb99e8f98a549499f767b87bc12523d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23866.246017296875,
        "Y": 12264.20302346823
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3f09b41c80284098b5593a9a0954fbde",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24036.101985225374,
        "Y": 12242.239420480899
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "d3741151d1054ce2a14f6e604e3dc79a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24348.760415806479,
        "Y": 12193.880937111506
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.ByPointAndLevel",
        "Id": "9ff34eb2223c4afab6668301e275ab6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22166.648109356305,
        "Y": 4157.8019156928249
      },
      {
        "ShowGeometry": true,
        "Name": "Вложенные",
        "Id": "ee50f2ffba11471285ec6d0a60a838dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -37073.472970897863,
        "Y": -2900.1946739811756
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "2fcdff4d36ae46a6adc1f470635819e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36852.734925932375,
        "Y": -2862.8662622765996
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "016f523634544b618746019858112141",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -32699.983503138472,
        "Y": -3684.1199165260241
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "7ab5cf75cea8422b8830aa852467056f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -32950.015304906708,
        "Y": -1020.7136996639451
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7369e36b3ae247eeb19173e505a94eb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16103.718645505451,
        "Y": 13267.800440803141
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "f769090ecd75474386c052967f0f2b66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21298.220736406427,
        "Y": 3371.31255760409
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "d84d574e0c3f44cb9c097927115f2584",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21296.153009622732,
        "Y": 3452.1811449776815
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "20e971efbe514ba88ad03299bc178d13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21751.369974131871,
        "Y": 3536.6561798616744
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bcbeb7f79fe8437b96c0382721ced15a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22472.177973469894,
        "Y": 4217.4790488499775
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "8f90d5b1dfe748d292d932f09af8cc85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22715.385903887454,
        "Y": 11476.880905088079
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "a8445848fabc4f798b1e29badb26debb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22713.318177103753,
        "Y": 11557.749492461669
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.ByPointAndLevel",
        "Id": "f4e481cbc94b4114be4334322b0b0d2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23540.076969020483,
        "Y": 12511.265509468712
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "e1019ca95d2b4551a7fbf38387a07130",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23139.508734593092,
        "Y": 11862.610465557464
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5a0521ce05f7405abfe5b17cacf716bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21924.07021389345,
        "Y": 3820.7464289213831
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d4e099e2ee3143ea871032fb910ad470",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 23306.183503688851,
        "Y": 11907.330168908698
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "a5d33b1b20ce4c048679440440ee42a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21515.735314397763,
        "Y": 3455.8868643763694
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "2be89b9e0d424ff9a6c1b990112b4b79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22766.181083799871,
        "Y": 11777.17096939325
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "839a4bcd5ffb4e839590f4355c49996e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 314.14990505083779,
        "Y": 11921.459636480349
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9380ca6b83a24cfa9034be9ef2d5fd93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15936.394757847462,
        "Y": 13285.674948566559
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "821be9a494034a61bc223245dfbbc3c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4236.575110129862,
        "Y": 6395.5308663374017
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "7250835e46844b19a775bf8e1a7756af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6558.0241596087144,
        "Y": 7040.5607288879419
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "7fe5c1022e81441bbb48458fbf1e5357",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6540.814382340297,
        "Y": 6890.2960943575954
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "6cf6ac794e314f0294aaee69405aae6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6473.2946835612966,
        "Y": 6578.7648404112215
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "457a243212de4cc7be39fa67dfc1c5bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6476.2292592468148,
        "Y": 6692.7866485160484
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "d14b433fc6aa4ab19179f86042a53e9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6455.9505398020965,
        "Y": 6816.1038654265
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "b6b5d312828a44b69d46df17f4a53696",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4501.71306719719,
        "Y": 6508.61090227889
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a2a7fc4b72714bec9548facaea119871",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4606.8012768351446,
        "Y": 6785.8853876897047
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "5b62813ce323471abd5faee8180acfb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4832.6255358850412,
        "Y": 6954.3088086773669
      },
      {
        "ShowGeometry": true,
        "Name": "острый угол между стеной и перпендикуляром возд.",
        "Id": "9e0122223f3f4f3b9308222fe0c9c871",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3963.021327470964,
        "Y": 6626.912566070886
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "62905af78e8b4e099aa4bb9e95954fc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2811.511503643103,
        "Y": 13493.414393758179
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "f539b90be4c844188aa551f092a26639",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3346.6058786473031,
        "Y": 13060.807244732207
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "609694bec3104042bd67d230b650a6dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2768.7661697224971,
        "Y": 13042.881179549717
      },
      {
        "ShowGeometry": true,
        "Name": "2.1 Всего заданий в проекте было (перекрытия):",
        "Id": "d96cae55afe849909996dc526acaddec",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 16418.687479565433,
        "Y": 10966.954362752676
      },
      {
        "ShowGeometry": true,
        "Name": "2.2 Всего заданий в проекте было (стены):",
        "Id": "1fb0efdb5dbc4a6f87ef28f797c65695",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15981.765411507504,
        "Y": 3055.0435282520184
      },
      {
        "ShowGeometry": true,
        "Name": "3.1 Проверка семейства (Перекрытия): ",
        "Id": "51fed421c89f43eb82f8c05371a286c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17313.615373426692,
        "Y": 9879.5842138607841
      },
      {
        "ShowGeometry": true,
        "Name": "3.2 Проверка семейства (Стены): ",
        "Id": "8b407541161f4c1fb86455d522032eb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16828.61951254656,
        "Y": 2134.4465759160676
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "86fc3e6325b547f0ac56814a41bbf7fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19201.100777623637,
        "Y": 11527.769132278241
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "24453078a3fb4adbb8d129352ad8f3d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18500.064231897646,
        "Y": 3318.4310085088778
      },
      {
        "ShowGeometry": true,
        "Name": "Напоминание:",
        "Id": "4573a20c13f74b5e98288fd8cb53d96d",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": -9789.6623196036762,
        "Y": 5591.8635585833108
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "cdc6279bc48d479dae854951953c72bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16402.813233419678,
        "Y": 3545.7645979215513
      },
      {
        "ShowGeometry": true,
        "Name": "List.SetDifference",
        "Id": "10d44301ab684a1eb0d865713352831e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17637.710003441593,
        "Y": 11620.051217113849
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3973e2539c33470ea52957720497991a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -67529.07828424903,
        "Y": -10590.577853139157
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "82f0bb2762284f9bb839aeab7febf638",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -67972.537502899853,
        "Y": -10706.097636872657
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "26586068a49c4e5a911913e2692864c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -67721.288213136417,
        "Y": -10617.752354048307
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e1e04f2f6da84d17aaf179eb4346b420",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -67970.122652973281,
        "Y": -10514.604697401444
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "c1b60f6a236b43c0b36c8c89fc20daaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51842.731535212843,
        "Y": -4883.5552820060057
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a89b8cfd32734473a51b477e9a114dc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51759.73507739458,
        "Y": -4735.1877200192694
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "cb6ffc8f83d840409b00d156e78c5645",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51761.5830709408,
        "Y": -4798.818070201618
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "28e3a7d24acb40bca176a24656e4ff87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51786.044059875312,
        "Y": -4967.6140983261257
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "09d5ea72512a4b3b8f44fa9cefb211b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52022.2364973884,
        "Y": -5005.81606913627
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "881c97bac6624950a54069a9d33ae291",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51861.752668575507,
        "Y": -5109.2590255803434
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "0873c21ee66f4aacbb7c1be7068f67ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52866.485529807425,
        "Y": -5126.1885261264051
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "5ba51263a2d5409cbcd28a305885c186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52816.9948930759,
        "Y": -5351.3118735417038
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "87ba6c9a355d4dbb92428bc30b728327",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52825.503166201626,
        "Y": -4909.0666217906028
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "627cd9d452364036a0ccb6720524fdc0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52800.623037523554,
        "Y": -4990.2203853679239
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "dfa1b219a66946e0a42a6c52d357d962",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52792.114764397826,
        "Y": -5432.4656371190249
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "608323e8fd684d0e9f40fb66c3239f93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52893.849450453512,
        "Y": -5527.2471850283791
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ddbc0fe521e5412398fc94b3f55df127",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52906.556263857106,
        "Y": -4737.4445387679352
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "d87dddf6f18643b6821a6ce4877ba2a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52865.573900251307,
        "Y": -4520.3226344321356
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a307022778d149c982ad945a19449c29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52840.693771573206,
        "Y": -4601.4763980094558
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "a939214583ef42f4920a75ced79450ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52922.681655659966,
        "Y": -4351.5750138831627
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "d1a3b37a481146c6b0142c96a98f7472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52863.824952249124,
        "Y": -4134.4531095473631
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "3b685187b5154e0b8637a82e274f3505",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52838.944823571022,
        "Y": -4215.6068731246833
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "535f325acce14d58a4f2ffa4f2049b53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52957.10808548746,
        "Y": -3988.4751119742941
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "1af0cae0641f4b8282f2a545334f3697",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52859.523645832312,
        "Y": -3780.2903775410136
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4d8bd426dc514a3e9e6e61e6ccd82652",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52834.643517154211,
        "Y": -3861.4441411183329
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "96cfb54594334f6f90479126c290b8eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -27759.739437758872,
        "Y": 12024.783473506432
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c760939f41cc4bb3b90c1721b5099907",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -27240.641424535464,
        "Y": 12124.724918062771
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "c15671e5675d4fd8b9b9947b64d9a656",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -10859.747589815712,
        "Y": 6523.37342997965
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4a94efcd1a3c45d8a6c922d8dbfebc83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -10249.897202179882,
        "Y": 6526.4682151028837
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d64daad985d447ba9fa554e8d37c18bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -9095.411396224943,
        "Y": 7732.5448794106242
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "246d3dfa3bbb40e7b6f5cf24784297a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8337.42874039509,
        "Y": 8068.3810617377949
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7caf7d4c219f48a39a645fe4d76a88c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -53048.162305126687,
        "Y": -5411.3299519765269
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fcad9efbc63b430bbdd5d93ba7e6e835",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30729.035762633135,
        "Y": 8624.0465549354649
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "ee0a3d456a9c498795ac93f000009f2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30687.349414942135,
        "Y": 8482.5640113032641
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "2bd053b91abf47d1bbc648cccd0cd186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30727.187769086941,
        "Y": 8560.4162047531136
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "c7a464f36e3245948d8fe10fc5540437",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30296.883589325418,
        "Y": 8219.7903886765453
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "afc2f23c54424c32b8b62335d0883e5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30627.018171452237,
        "Y": 8249.9752493743945
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ab78d5ae7a4c471e825edf26557c52b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30707.238241942854,
        "Y": 8406.2968267233537
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "cd366cb608134ffd8aba1fc4522ef28c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29232.429862992554,
        "Y": 7755.3966845960294
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "8b18bf7fc55342a4a784dafc0ea8c814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29259.793783638648,
        "Y": 8156.455343498
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ab6092f79c5d43a2a7804ec52a0fea23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29219.723049588953,
        "Y": 8545.19933085647
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "f4d442c301f94f1b9ba6f4f0b338274b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29180.51891523457,
        "Y": 9679.9901250348412
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "d7badd027cbe471aa92ff6b272b6c6cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29179.942163994998,
        "Y": 10068.460952918598
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "781a19c4f89d49f38e25da714ea5ed5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29204.019005793052,
        "Y": 10462.526732252645
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "e93877be4c014f5ab25bd3d12a58679c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29189.016727170303,
        "Y": 9327.5301127397051
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "e684c8e77de2412b856a157e9c0af73b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29137.834223542912,
        "Y": 7918.3483992146166
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "70be1a297cda4f1da3d5ef4add336657",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29270.728018261481,
        "Y": 8312.7879652085285
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "5548b2f1dbb94ce0aae2c255b059438b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29151.95010023981,
        "Y": 8758.4047616991666
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "87d62093e86d41fe81fda2d91126be99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29102.433995283467,
        "Y": 9099.8907060098991
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "f08c034265f64dd092791b600a8729e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29073.904482498467,
        "Y": 9459.7144266386531
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "f7dd21e6c1d54da58ffb28760cabd9cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29010.492591517213,
        "Y": 9802.2881319339722
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "33bfc43a10fc436693685be9d5b4ac10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 28997.154252496897,
        "Y": 10222.185404523665
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "716fa2d16f1b4cf5a37091466589a0f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29056.330654535643,
        "Y": 10583.156167740546
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "89ff9efec38147e3b084ba75b698dfbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 28852.380054790625,
        "Y": 10595.840111555732
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "2b943212c12a4655b4aff07ad5599fef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 28787.066915971576,
        "Y": 10222.018058665966
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b3e452db6f34430883241caabb58765f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52930.52561039319,
        "Y": -3619.7408355753519
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "c720323c44234c59b34e3e1d2b017c44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52832.941170737984,
        "Y": -3411.5561011420718
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "c4624e32da6d494a928d7f8068c04878",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52966.042724044273,
        "Y": -3503.5036442338528
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "b80ae10430334bfa9b0d766827206262",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51809.784183762516,
        "Y": -5054.1917197171806
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "4591e4601b2248db999026a00a773f99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30637.821032140444,
        "Y": 8325.4472968712489
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "9141fa0cdd4a4f8ca85300c915d241af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50982.977523560061,
        "Y": -5018.5252734106061
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "4e81b283c96040a49e45953f8619037b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52578.432324871865,
        "Y": -5452.0638141719692
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "6e2a945ac9ad44d5bbd9f159d2cb501b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52472.760532897883,
        "Y": -4602.9776280106043
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "cbadf0be99fe43f1b9fdc6e0ecee9694",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52538.7321750668,
        "Y": -4214.7477126472977
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "f7e00df0d69d46dc965651f2d2858772",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52504.977991351072,
        "Y": -3871.0831201024366
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "6bd2e7266896439f9490d4723066c54d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52515.336209965157,
        "Y": -3509.9274292628538
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "079d8bea06454228bf83858cedb9a26e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -52490.460140353687,
        "Y": -5015.1141486767992
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "cf8b45acf80f4e94817e4e271bf35f55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29795.878124719584,
        "Y": 7952.970835624893
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "d11f7083a31e49a89e2268284d727073",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29536.612783467266,
        "Y": 8241.8726010709543
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c6144f01eb3c459a8bb374bdba1853ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29587.929488515412,
        "Y": 8657.4978896666762
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "8f283baab65f43eda2cf54b1c966f929",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29203.597657786,
        "Y": 8931.06885574125
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "51be20f81df94eacb2a541fdcb993824",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29607.792210248812,
        "Y": 9027.4410819512814
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "fdebc20156034001944481a9742ceff7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29585.446648298737,
        "Y": 9392.4185938025348
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "253ae798c8f94415a9279c65cfff6be9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29612.467205987865,
        "Y": 9788.05779490824
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "7f9f752de8504189b904ad09096c1058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29610.209617313707,
        "Y": 10166.184304918008
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "79b1c62f11234a1eb5bf4b9e1c30c5c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 29657.327747296673,
        "Y": 10532.015182439673
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "a9d6c9a74ca048b9b34dcdfe67fc26dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 31081.909350699723,
        "Y": 8338.46109024167
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e2665cce790f4a88a52ebe6c63fb7686",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -51127.132678195645,
        "Y": -4835.3136059685885
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "eae4a0d508634d359c45cff013f6a79a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 30929.802597381804,
        "Y": 8525.180733548048
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "206fc118a75a45fbacf3da0a72144208",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50766.0,
        "Y": -4953.0
      }
    ],
    "Annotations": [
      {
        "Id": "ee739d45793a4dcfa53b73339cf6c34b",
        "Title": "отбираем только нужные внешние ссылки",
        "Nodes": [
          "cc78674de7fd4c2eadd4fae4b1b2afa2",
          "27d193b6764047caba60bf8356a3a8fc",
          "bfc6de6303ba47cfa5fe97d2120dcd86",
          "1180aecc304346cea1bb6d60a2132a34",
          "64ab9b4659d549d2a2bce7762ceb5560",
          "22c83e0e20df480b960fa71fa7da6157",
          "042a89521da2466596ea139d0132de6a",
          "b4a164cc0ba2421fab62f07fe0d3f1ae"
        ],
        "Left": -9992.4101899499547,
        "Top": 5811.8543756773634,
        "Width": 807.78811905889961,
        "Height": 889.6541660767798,
        "FontSize": 36.0,
        "InitialTop": 5864.8543756773634,
        "InitialHeight": 861.6541660767798,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "02b98ca68b1a4d14b39c879ae2af56e8",
        "Title": "получаем воздуховоды и трубы, лотки",
        "Nodes": [
          "c6557d9429eb47068cfd470c9560fc26",
          "15b27af1a37349198fb47ca528da7475",
          "f90abcbcbe6e47e789984ea9051e05e1",
          "60f82a3df44643cf8e6162ccf9d7d0d0",
          "4548dd8801c2405cb66dd3c432d7b77f",
          "8c7d8b4f80234c76b3e7cd67c9516c10",
          "9e2b830b47b345539ad56aa74d6d349c",
          "513152f8e1294eb88f3f617656f58c41",
          "7819ac03e3de4bd7994f08b7f7d94906",
          "416d7c65bd2c424d8bbaaadaa0d18241"
        ],
        "Left": -9414.9935314542345,
        "Top": 6989.4074014796643,
        "Width": 1048.7296016532691,
        "Height": 716.41508603253988,
        "FontSize": 36.0,
        "InitialTop": 7042.4074014796643,
        "InitialHeight": 715.41508603253988,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d8c5fa58eae54041a7e5be6db03ccb23",
        "Title": "Исключаем короткие участки труб и вздуховодов",
        "Nodes": [
          "436cdaaef754459086f9e9a188c37a38",
          "d45056c512de41b385322c5339a9e377",
          "8c289f2b05c94c4d9be1c3125fc008bc"
        ],
        "Left": -8141.31343365528,
        "Top": 7742.5769763874305,
        "Width": 549.878173814468,
        "Height": 366.18380004220671,
        "FontSize": 36.0,
        "InitialTop": 7838.5769763874305,
        "InitialHeight": 294.18380004220671,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "c17599b864de4352ba5113a9a0c198ec",
        "Title": "получаем стены из всех ссылок",
        "Nodes": [
          "2930ff65bcf74490aeb307c7d0baf4ca",
          "a3a610de36d3467698cd807302ac2356",
          "211edfb135534e5089ebb4c1ed41a605",
          "7c9ca365545d4b9cb5f10fb73991d66b",
          "8090d45fe19e4c6f96bb265a79dd7580",
          "9d395c921b234a90a2fba88c3a6abb07",
          "086ca2ad74224171a3534bd9de110f18",
          "bb96bae4aa8c40d78f85d3f42981064f"
        ],
        "Left": -8185.7929982555888,
        "Top": 6550.7461323694042,
        "Width": 917.46248635611755,
        "Height": 717.61315084743819,
        "FontSize": 36.0,
        "InitialTop": 6603.7461323694042,
        "InitialHeight": 706.61315084743819,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "74b9266c264a436eb31ad28c82d9d3de",
        "Title": "Исключение нулевых геометрий",
        "Nodes": [
          "7aa6bd20bc324bd68562accb6f293e28",
          "796f2f2cb1c04cafb57b5435d0c37353",
          "02edcbd751c84cf09fb46e95e9b9a879",
          "edaf13dc93074a3a831f1a7e28e3d128",
          "85251ad7a4c144948ea46bb89396283a"
        ],
        "Left": -7172.984192431084,
        "Top": 6976.0826890867138,
        "Width": 626.77921782196063,
        "Height": 464.91418197697931,
        "FontSize": 36.0,
        "InitialTop": 7029.0826890867138,
        "InitialHeight": 437.91418197697931,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b0ae6699f2e34afe91836e0ccaff5b7a",
        "Title": "фильтруем воздуховоды без пересечек",
        "Nodes": [
          "c2de62ce459a460c8cb1725c764e7a8c",
          "7dcfb3aed8d54894be98f53733af6825",
          "fa47ebd0c5e542c2bdc9f41e95e92974",
          "c3cf40baa784454581b3104b8996bff9",
          "a130439d50b24990b82eed3b36327a47",
          "70607cbcd2cb45bba14f1c26090ecba8",
          "296199f432de4f9d93ffaf29ddb93450",
          "691f4a72b217403491b4b6475d0b3cb9",
          "23b8c2eaf07e447d96299421a295426a",
          "fdc58490c12f46e7b1962c43aa6431ef"
        ],
        "Left": 1897.8994735929668,
        "Top": 5095.2162630410066,
        "Width": 656.73389381483275,
        "Height": 1053.1937419583173,
        "FontSize": 36.0,
        "InitialTop": 5148.2162630410066,
        "InitialHeight": 1026.1937419583173,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "8a9e039a00c84db2877b2b1c9034a2af",
        "Title": "получаем список воздуховодов, их пересечений и стен, их создавших",
        "Nodes": [
          "9508a69d954b4d93bc12b74c5f2364b6",
          "3c1cf434477743298858531246cc5cb7",
          "61f3f0ea6293470e832c5506fda79019",
          "d0e57e2ca2884bcbbc3e392023b23656"
        ],
        "Left": 2804.42860487446,
        "Top": 5290.18016709459,
        "Width": 776.50573850911042,
        "Height": 1856.7296142904006,
        "FontSize": 36.0,
        "InitialTop": 5386.18016709459,
        "InitialHeight": 1527.7296142904006,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "09eefe5d5f0a412784ff38f2d66e439b",
        "Title": "Создаем и настраиваем кубики",
        "Nodes": [
          "28864f58d44f49e69e910044f9437aab",
          "d293e216805a4fa8b90f8bbe6daf31bb",
          "6607f5d80cb04ec59f92c50faac6061f",
          "3b8d2b4294a64386b1dacd275dc099c2",
          "fd1277087d114a16a99a830688a73f85",
          "8166ad7926c54adba337b438327e069a",
          "5ebb746fb0c64d5588725414cdca4a9a",
          "6af88980147241469560a8598d6e4fff",
          "b822bf1a1dda4fae8e047dfd4a428fd8",
          "ca6140ebdc9e499a9cad4cd3cd25f823",
          "6964f482e3bb4092adf1779bf493bf9a",
          "c246e431118142e4ac311afe34a9799d",
          "dce07c1dfdd740608c19e53a1047e553",
          "0db80bd4d97e46a59fee0b24d47c898f",
          "f8eea8c5fddf4ea781728329decb9868",
          "6e5f897f3ab1479da985d1c128e55367",
          "82f13d504d3f453aafa4699b7476cf04",
          "b3ab149391f14224a017182174605c1f",
          "15706ca1a7f44c14ab371c6325a4bc11",
          "697a9a4de9f545908e7136e81079e4b3",
          "9a92afbd03e54a4d9dece24d05b1865a",
          "8590d9df23be40d48a03f1a5a7927d50",
          "23a1151ade4f462c919fa789ee897bc6",
          "4d322f62d0284178951b031c5f5a8514",
          "770907c6371942ceb86f4fd95b4804be",
          "27ba4573ac88422891af1eaad1ac483e",
          "c0abb70df80c4ac7b0a249289c806503",
          "93f0fdfcd21545b19e2c5de744b2e48b",
          "8adae1320ff84dfcb44b6a3ed41ae471",
          "1148bbc364ae40bdac96f2af9cad6006",
          "f9a304fca9f54ec980e1bf513f520c17",
          "7feaa7a62d4a43ab9160ab1ea07b5927",
          "c2a71b28d3954729ab38823f9bbd16ec",
          "50c934cd337341269850da27f1a8e192",
          "163d8b60c0d74116a9b3d667ea0f2d8c",
          "b7cbe24fb3034bf0b0201941d6dcbec7"
        ],
        "Left": 20722.394134823138,
        "Top": 3358.32373324544,
        "Width": 2315.1814145777025,
        "Height": 1828.1652884989999,
        "FontSize": 36.0,
        "InitialTop": 3411.32373324544,
        "InitialHeight": 1801.1652884989999,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "54250cb0e1324c4cb578bd55714f79b4",
        "Title": "получаем толщину стен",
        "Nodes": [
          "f4ea9ec78e8c41e9b5a5b804bd12d934",
          "5a555e44b36c4b2ebf7b438cf1ed6668"
        ],
        "Left": 3838.3021962281464,
        "Top": 5619.4429631009434,
        "Width": 657.38298266180027,
        "Height": 154.62968962294872,
        "FontSize": 36.0,
        "InitialTop": 5672.4429631009434,
        "InitialHeight": 153.62968962294872,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "14bd7946a9f94fd0b83a12603d3eed48",
        "Title": "вычисляем угол поворота кубика",
        "Nodes": [
          "47ac816cfa9349c8b319466722c07879",
          "32eee341164848e786ef3482f2699316",
          "b57a25722b794d5987ae455706824e5d",
          "6d15642ff40142e8a41b9144bc28492d",
          "8905a8258e8f47d0ad959748e14d3bc9"
        ],
        "Left": 3681.50630863062,
        "Top": 5137.8311994986225,
        "Width": 815.20343242159015,
        "Height": 383.44378385220716,
        "FontSize": 36.0,
        "InitialTop": 5190.8311994986225,
        "InitialHeight": 382.44378385220716,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "0c25cc5bffa34cafab708d75ce0f7bad",
        "Title": "Получаем точку центра кубика",
        "Nodes": [
          "31c9038812f54c96a7f079b333cf5746",
          "41415614014b407aab4f08d548664021"
        ],
        "Left": 4732.83613790076,
        "Top": 5958.2967240149856,
        "Width": 318.26659040268987,
        "Height": 258.67727710837062,
        "FontSize": 36.0,
        "InitialTop": 6054.2967240149856,
        "InitialHeight": 214.67727710837062,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "1b4e05deda864f34a6b586c8fbef6d4c",
        "Title": "получаем габариты воздуховодов",
        "Nodes": [
          "72c737b467164369b13e3160e43c6450",
          "547c601087104b5789bdadbc6c2d29a1",
          "1bb4773e0c4842c99b50b6d771e0ad69",
          "09286e9966c94a09b2271d406bbdeb25",
          "bd201e1035154278a9f4a57da34e7d50",
          "fbac7c0eb8b94a3bb25c22e9912fcb12",
          "4ac5b5948b8e4199a8b21e2729f64302"
        ],
        "Left": 3779.4629092719169,
        "Top": 6897.8157384783563,
        "Width": 911.56690960317974,
        "Height": 446.31951920624488,
        "FontSize": 36.0,
        "InitialTop": 6950.8157384783563,
        "InitialHeight": 419.31951920624488,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "acc24d2ad12f472699840565141d0714",
        "Title": "получаем минимальный угол между осями стены и перпендикуляром воздуховода",
        "Nodes": [
          "d05df6c030b04e4b8b20cfd0cb818704",
          "06e6b3f95f7742e797c37b8b61496144",
          "605a6812c9b740b7b3c539131c2ae040",
          "166974e1b2274ed993c119b496ad1504"
        ],
        "Left": 3829.291294945353,
        "Top": 5996.1448143512744,
        "Width": 505.8379993476583,
        "Height": 624.86567442768046,
        "FontSize": 36.0,
        "InitialTop": 6179.1448143512744,
        "InitialHeight": 483.86567442768046,
        "TextblockHeight": 173.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "70fa370a491847878ad5cc860d7cdaf8",
        "Title": "решаем большой и малый треугольники и получаем полную ширину",
        "Nodes": [
          "ca2b8551f96d47b8817b775db1536c79",
          "8ab7346284ac4c5bba63df0aac2d2ae2",
          "84ef4b9ce8284e8f9b86de6656158c9a"
        ],
        "Left": 5163.6172946740926,
        "Top": 6502.2555799341781,
        "Width": 662.31822340195868,
        "Height": 343.2171693943601,
        "FontSize": 36.0,
        "InitialTop": 6642.2555799341781,
        "InitialHeight": 245.2171693943601,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "65a7ced70a84418786c2a7c3f2a3adb4",
        "Title": "фильтруем по габаритам и находим пересечения",
        "Nodes": [
          "f974e19caa5f426e8bdb1da1c3287cd7",
          "e5c8fe2a6dcf45d8828e610db1474e31",
          "fac13e6eb9f14cb5b0d930f5e4378898",
          "40e81aa433464f53814fa2be65f46635",
          "c280c3b7a811448d8f9c1a8523e50da0"
        ],
        "Left": 969.20139948593419,
        "Top": 5238.4253441715455,
        "Width": 769.196797048379,
        "Height": 623.79370289246981,
        "FontSize": 36.0,
        "InitialTop": 5334.4253441715455,
        "InitialHeight": 579.79370289246981,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "706a8990823f422e8eca0447815130bd",
        "Title": "Создание строки описывающей отверстия",
        "Nodes": [
          "26776f5878934b3a81a2061d6f43f01a",
          "8d7434c83cb0448c80d99bf11af1e2f0",
          "8dc82f97a4254170b40072fdf8f6b148",
          "3e9130dd34684ffb8ccd5d2cc2dc5be0",
          "819d729a1bcc47309383b0bbc4d372d7",
          "187bc8006cac4b1d9c5d34d76114595c",
          "e6eb3183e61b4b75a58d72ea5954af5d",
          "ccf5ee2128984535b3f086a3e4fb96b1"
        ],
        "Left": 5995.7048778898452,
        "Top": 6424.0506749903134,
        "Width": 1650.3851860696022,
        "Height": 821.96355016867619,
        "FontSize": 36.0,
        "InitialTop": 6477.0506749903134,
        "InitialHeight": 820.96355016867619,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1eb65b8db6844c99a26d46b34d11decf",
        "Title": "ВК/ОВК. Задание на отверстия в перекрытиях.",
        "Nodes": [
          "439d7e7aad6249ebb3de88160d358fca",
          "db8fd86c25224ecfa4038aa04e97bf86"
        ],
        "Left": -9964.7843495550987,
        "Top": 7266.0658829202548,
        "Width": 314.0,
        "Height": 551.53573985587263,
        "FontSize": 36.0,
        "InitialTop": 7406.0658829202548,
        "InitialHeight": 291.53573985587263,
        "TextblockHeight": 130.0,
        "Background": "#FF848484"
      },
      {
        "Id": "7eed1745aaa24759bf5e447d1df8dd1f",
        "Title": "получаем перекрытия из всех ссылок",
        "Nodes": [
          "d5d35195d8214182bdcca384f3190aa2",
          "66e308730ef3430ebe4d3bbdbc2bdc19",
          "a9d6022ccb4946dfb08c9918ca45e170",
          "47cb71e23e724f3591dc257c06f98242",
          "f18d69827053418da1129678c0f50487",
          "cb523c729bde4828a6fd73ff28e2b513",
          "3a0c290b5f9e4093aade4ef08a29c5e4",
          "6f2b2984e63940ceb56d525309e7b64c"
        ],
        "Left": -1068.7489985266066,
        "Top": 10929.321472724012,
        "Width": 826.15891105858373,
        "Height": 619.857117825517,
        "FontSize": 36.0,
        "InitialTop": 10982.321472724012,
        "InitialHeight": 608.857117825517,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1f194aaf2a3d478f8d05197e3e38ab52",
        "Title": "Исключение нулевых геометрий",
        "Nodes": [
          "11007de08b9549389f9356ed5f5fa5de",
          "b277522ebbb54814be18b503f46930bb",
          "644f0afafa1c41e7893899cb88e16c0b",
          "be436ece7bc84d35a95bd958fe27ca26",
          "7fb6d89d7c1b49b39fe09700364bb6e1"
        ],
        "Left": 154.3853922463768,
        "Top": 10992.8513665498,
        "Width": 583.90134323649636,
        "Height": 427.82970296542044,
        "FontSize": 36.0,
        "InitialTop": 11045.8513665498,
        "InitialHeight": 400.82970296542044,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aba9ae33e475475bae79b68c707f1b88",
        "Title": "фильтруем по габаритам и находим пересечения",
        "Nodes": [
          "ec7be3ee06534cc68bf0b1bb91b8026c",
          "ea8ff5712ae7458982279bcebe99ba35",
          "e5077b2fddaa42bab48493555baeaf84",
          "77a445d53d8847d09715c3b8614819e8",
          "a80c0667de844bd0a19a4acf52adfcc6"
        ],
        "Left": 1348.3870771254633,
        "Top": 9558.2229256736173,
        "Width": 1196.3942202365797,
        "Height": 603.31550213585251,
        "FontSize": 36.0,
        "InitialTop": 9611.2229256736173,
        "InitialHeight": 602.31550213585251,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "bdd7b74ce2b8406aac4205a26edec438",
        "Title": "получаем толщину перекрытий",
        "Nodes": [
          "a3a614e71f5b41cd95b97673df6c1429",
          "37e9fab3a6f142c48ad698fbbeed7a1d",
          "8bd2b69c2f314eb989414ac5e8bd1a10",
          "54e465d146b84e549764a33e83acbcb7"
        ],
        "Left": 5461.2040243779229,
        "Top": 10150.86682882184,
        "Width": 785.62389488879853,
        "Height": 262.06133795817004,
        "FontSize": 36.0,
        "InitialTop": 10203.86682882184,
        "InitialHeight": 261.06133795817004,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "03aff8e1e7b041b394b0ce16062df21d",
        "Title": "создаем кубики",
        "Nodes": [
          "46e63759dec144ba895face00849f093",
          "edbf69fc37b44026b36cd3bb180cd146"
        ],
        "Left": 5723.9292048601437,
        "Top": 10524.159364351066,
        "Width": 318.26659040268896,
        "Height": 215.67727710837062,
        "FontSize": 36.0,
        "InitialTop": 10577.159364351066,
        "InitialHeight": 214.67727710837062,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "22901f7b8be7459299a119a3bc70d302",
        "Title": "узнаем угол поворота",
        "Nodes": [
          "dd1dc07f79814ac6bc55ee118d619eb6",
          "edb79d730a2e4dd6ab7b6149be950c60",
          "7b8e2deb24904979a6aa32004a502ae8",
          "88f2bd2290fe4bd896ca5978875d1e77"
        ],
        "Left": 5255.3256284120325,
        "Top": 11792.968476562473,
        "Width": 636.08991757244985,
        "Height": 349.62836731140851,
        "FontSize": 36.0,
        "InitialTop": 11845.968476562473,
        "InitialHeight": 348.62836731140851,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "21a1d05b53ef4952bb128c06338fa907",
        "Title": "получаем список воздуховодов, их пересечений и перекрытий, их создавших",
        "Nodes": [
          "764f98a0b6ea4860bccd8e912a6f1a67",
          "b8207d9bd4fb4318b2dbe3d9abda549e",
          "ccd1955e667a49fab5f3d85210cb6431"
        ],
        "Left": 4188.6607301374324,
        "Top": 9704.3832684222325,
        "Width": 336.18075348876027,
        "Height": 1680.3864111700204,
        "FontSize": 36.0,
        "InitialTop": 9930.3832684222325,
        "InitialHeight": 1221.3864111700204,
        "TextblockHeight": 216.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "904d8290e0374d629d6f69416187934d",
        "Title": "фильтруем воздуховоды без пересечек",
        "Nodes": [
          "40d16ad077ca47e091b638d11ab4e118",
          "8fd7983c852540dcb00fe1171e052a46",
          "ac0fa1e0dbb04d488f67d0ee7806c27f",
          "2dc17ad3052a4266b0b5a34afc3739ff",
          "a661a69e4e01439f83a58a3d6e9d92cf",
          "7af30a12bac44952807a1da7a6b6a067",
          "60af0bfa21c041e4b25d0ff420f9be95",
          "acb41e0836c54c9da3ac31a280fd55c1",
          "00609c42d99d40148445697c5fe997b5",
          "3849a2a31cc24850b09cfb60d4b72a2d"
        ],
        "Left": 2884.4066689327319,
        "Top": 9598.6219244892782,
        "Width": 687.86668000248028,
        "Height": 1106.7614861796319,
        "FontSize": 36.0,
        "InitialTop": 9651.6219244892782,
        "InitialHeight": 1079.7614861796319,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "6a2022038f574432897870f250427878",
        "Title": "Создание строки описывающей отверстия",
        "Nodes": [
          "a47a153f1c6d4a3bb59aa36be931a37d",
          "c0b319f6c1454e8582fa21d8d262c658",
          "4788a7de0e774091a0d7f43a6600e5a4",
          "aa12941ccb4044ed8412a6b278ce27d7",
          "b5ca242df79746afb6eaf0bddd2fb88d",
          "bd6a707be6874f509abf1be1556f9336",
          "f1e25be755d54affa77192fd275a2748"
        ],
        "Left": 6499.8994678070248,
        "Top": 10842.498622734238,
        "Width": 1944.2364620667777,
        "Height": 788.18567288067425,
        "FontSize": 36.0,
        "InitialTop": 10895.498622734238,
        "InitialHeight": 787.18567288067425,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "588d655cae83485ab5fb46257783d7e6",
        "Title": "Создаем и настраиваем кубики",
        "Nodes": [
          "2dee30f61b454b368d3f2f797596ba35",
          "ad9aec8a39654018800a8617053ed8a2",
          "1b015074db53481191ba8c11fca3dad3",
          "2326c1b55ceb42bcbf544b0304ca4ad1",
          "a4f2a287893c457a89cbea3ca7c006ed",
          "8d329085151748098a13210aae2afecf",
          "9048e76702874aa1ae457fc283a814d2",
          "45a597eedae34a82878bb11d54b8488d",
          "de7938411fc94f6294d6ea982f78870b",
          "3af92355588149848e96109f4763acab",
          "b990ffe35d4b4cfdb64166d024cdd6b7",
          "5b9ec9fa1f4d46398617ca7051c4fe58",
          "1aa9640a8ddf4c289aae2119c2b90b73",
          "4d5ac08a00de4b53a5f98fd15188c128",
          "89ea1e64e21b4439b15deb317901d378",
          "7771088193a145eea71609d8bba841e3",
          "a3e3a698bad64304a41fd2e8fe510cfd",
          "9b0f939032c44f74a6373a67de8094fa",
          "53f5171857e448eea6dce1ef51ecd45b",
          "a401b45c2e464fb5ad90136be28055d4",
          "632bb83b0e6e4ba385791571afcb3172",
          "07a68bd7f237419692b5aa81ee005b3a",
          "6661aa9c504e40e49626bb717c84b1a8",
          "5731f7d7d4cf4bc88856b360d2d2fc2a",
          "12fd8d54961f472581a1b80da1dc909d",
          "4a916974193347608f91e0578f38ee9c",
          "b3e6d06e663b4a81a777338c426c59a9",
          "c2a2bb4115274ceea7d9569addfe723e",
          "60f913373efb4d358fc2dec9db2943b5",
          "64f727e9674b45599fc421d20d46404d",
          "fe12ea8b82bb40d38b8badf1b11de59a",
          "d3387424fc144d18b444eb3f398b0321",
          "63479b5f2c92482ebce5817e75a6b92c",
          "5cddf18442544b9db11c92f1f65c55f0",
          "297d1e36b0d940688aea0c0624670337",
          "f3ee49bdaa9c41eca0986aa48ea9e4d9"
        ],
        "Left": 22170.71368137742,
        "Top": 11485.469282071086,
        "Width": 2468.2044547570986,
        "Height": 1965.9983172053999,
        "FontSize": 36.0,
        "InitialTop": 11538.469282071086,
        "InitialHeight": 1938.9983172053999,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "cfdb1e18770d4a05a84c7a428da9f787",
        "Title": "Выбор раздела текущего открытого файла в ревит",
        "Nodes": [
          "3a9e794ec34a44d6a727bcff7de468e8",
          "304b69893e3345c89c6037dd1fe29968",
          "dcf0075d28454660b94555d4f5cac56a",
          "2682d92c8ac04349bae971875d53356d",
          "80adb66827ec4ea2ad86befba53a15a3",
          "a3a055cee16c41bbbfad68083f2ef178",
          "48df1124b0a04402a66c5ffd9c60f9c9",
          "c8e00cce9e274f45be0c176ecb1c5c5c",
          "40114be0495b4fbd9b4fbd7ac40a865f",
          "98b3f4429c4849699a99809669006d1f",
          "b49f4d96c1104ba4bad0d0c9db495e56"
        ],
        "Left": 22285.23526435838,
        "Top": 7883.79867495274,
        "Width": 1780.1029626283635,
        "Height": 560.10276341601912,
        "FontSize": 30.0,
        "InitialTop": 7929.79867495274,
        "InitialHeight": 566.10276341601912,
        "TextblockHeight": 36.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "2a4e0af8c1e54a368bfcce1004092dc7",
        "Title": "Получили все трубопроводы(исключены короткие участки\r\n",
        "Nodes": [
          "e68299b83b754482ac229624421c487a"
        ],
        "Left": -522.81471611268785,
        "Top": -321.09344080517053,
        "Width": 453.73333333333335,
        "Height": 561.0,
        "FontSize": 36.0,
        "InitialTop": -138.09344080517053,
        "InitialHeight": 145.0,
        "TextblockHeight": 173.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6f00150f4733473c9c37f4342a3505a6",
        "Title": "Получение габаритов трубопроводов и задание размеров задания",
        "Nodes": [
          "7d800634cf8c459f8627994cde8cf986",
          "12a9df0df8dc489ea5aaea268ab8f260",
          "5ea5389d0f41412b8b52f59cd2e0009f",
          "307093a6bd9447cfb4b6740787b125b4",
          "6fdc1600ef844cef960cab5fb5ab8b9b",
          "c47ed99904484e34b75b7d29c7a6179e",
          "1dd68cc6ed634db8b069fe3bf5c6b047",
          "82cd8b026bc7430db100ebac197ed99a"
        ],
        "Left": 5098.7844330736689,
        "Top": 10946.946080774904,
        "Width": 1202.1774477408289,
        "Height": 653.04880694193525,
        "FontSize": 36.0,
        "InitialTop": 10999.946080774904,
        "InitialHeight": 642.04880694193525,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3e56afd3f2b04c56b507f62f963328af",
        "Title": "Получили все трубопроводы(исключены короткие участки\r\n",
        "Nodes": [
          "35bbcbb25b0e4a5d9e19adfd4545a8b5"
        ],
        "Left": 3635.4250995078846,
        "Top": 14643.346853531217,
        "Width": 453.73333333333335,
        "Height": 561.0,
        "FontSize": 36.0,
        "InitialTop": 14826.346853531217,
        "InitialHeight": 145.0,
        "TextblockHeight": 173.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "051a94b549704074be386b7de5a79179",
        "Title": "Получение существующих отверстий\r\n",
        "Nodes": [
          "51592b824aab4465b039e0317e1735a8",
          "be0282af998b4b51910888e206edf2f7",
          "9e4f540592d34f33b1c2a8316a2ada41",
          "df9a1910cfe74742b709e0418acc2e2a",
          "a8b6fedd5dd8499cbc70e1427fd1e897",
          "b5b2373c77a44059a52c4838f129adbd",
          "d983e51a1440412a90aae656b308598a"
        ],
        "Left": 1101.6334013961095,
        "Top": 13765.225780915753,
        "Width": 1069.0382283003455,
        "Height": 758.539351644682,
        "FontSize": 36.0,
        "InitialTop": 13861.225780915753,
        "InitialHeight": 714.539351644682,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "44c71321bf484444a606063e6ae11625",
        "Title": "Solid перекрытия",
        "Nodes": [
          "256cd1f8fd244b85a4eac4a976ec396c",
          "ff99aca516c04ed99d29e829a79c6af3",
          "d6a5438a67df4d368a8516ffc143d187"
        ],
        "Left": 2558.4462423361097,
        "Top": 13572.692632530336,
        "Width": 726.21943071422675,
        "Height": 329.01332219460528,
        "FontSize": 36.0,
        "InitialTop": 13625.692632530336,
        "InitialHeight": 328.01332219460528,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e91cd0f582214154a44755d5f704c179",
        "Title": "Получение угла поворота системы кординат элемента\r\n",
        "Nodes": [
          "6d2c5e4f82aa4212a51e97c095633c84",
          "37e07290807443ecadf25e769bb99fb2",
          "bdc4eba24b0f4c4eb44436e74e014d9b",
          "0824f835bab44a2fb3e6e1dacba70026",
          "9b50b218e1f84a579a9867fc16364a8c"
        ],
        "Left": 2745.7569483889447,
        "Top": 14247.916993166571,
        "Width": 793.92470084790148,
        "Height": 462.85930719623866,
        "FontSize": 36.0,
        "InitialTop": 14387.916993166571,
        "InitialHeight": 374.85930719623866,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "29d8da5bd276468596f36d5a86cf0949",
        "Title": "получаем толщину перекрытий",
        "Nodes": [
          "7d3c8739c36d4b759aaf03735aded374",
          "e15d17bb24c348a5aa2a68bd967fbd3a",
          "62fbcccf51934d1e985d214cf20e4814"
        ],
        "Left": 3337.0248187398765,
        "Top": 13607.354398505531,
        "Width": 471.87409976351773,
        "Height": 293.27250588250172,
        "FontSize": 36.0,
        "InitialTop": 13703.354398505531,
        "InitialHeight": 249.27250588250172,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "873ce5b4e8a64fc9a00327b817d82524",
        "Title": "Solid отверстия",
        "Nodes": [
          "09edf9e6789545bcacaf30486e1a9b43"
        ],
        "Left": 3920.86095656981,
        "Top": 13998.373296215159,
        "Width": 175.34333333333333,
        "Height": 267.0,
        "FontSize": 36.0,
        "InitialTop": 14094.373296215159,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "67d4baa1a1604c5c996f3622570125be",
        "Title": "Вектор пересечения трубопровода и отверстия",
        "Nodes": [
          "e688c581f2eb46ebba25f653f6ae5036",
          "bd55397db5ee44c0b8060c45b641e395",
          "664a62acc7b149fbb4175a32cffb3c52"
        ],
        "Left": 4219.9537459733729,
        "Top": 14346.213707068708,
        "Width": 630.232668710074,
        "Height": 559.44522327865343,
        "FontSize": 36.0,
        "InitialTop": 14442.213707068708,
        "InitialHeight": 463.44522327865343,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "80d5973afe7647d39927b67faaf8f9fa",
        "Title": "Создание строки описывающей отверстия",
        "Nodes": [
          "25f84e7453224e319262ec554f8eb1af",
          "d23b6e6749ef4f7da732851b140b4636",
          "96e90ebd376545c9a948ea94e21cbb26",
          "ada9fc336c914338b6c7df3ec7ff5b89",
          "706ce5a440c3422dbac6b10f4e4ffd07",
          "bf3afa4410bd4d50b08402c29b08ba22",
          "b56d6c3f9f2042e8b793cb03a70c20a6"
        ],
        "Left": 9082.46317791392,
        "Top": 15494.597828972406,
        "Width": 1417.4968802908406,
        "Height": 714.53236804440348,
        "FontSize": 36.0,
        "InitialTop": 15547.597828972406,
        "InitialHeight": 713.53236804440348,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c035b13842dc4e4e8555ef462ce7c9a9",
        "Title": "получаем толщину перекрытий",
        "Nodes": [
          "e738301bbcff49f6900da4f05e50dc25",
          "51536cba159d4e90a702bb91d3267a71",
          "091df06bfa664cb69350dfd1e1197a55",
          "28f63d483fe14ec98b182e67a4a536e7"
        ],
        "Left": 7811.0969194350619,
        "Top": 14347.597217545295,
        "Width": 785.62389488880035,
        "Height": 262.06133795819915,
        "FontSize": 36.0,
        "InitialTop": 14400.597217545295,
        "InitialHeight": 261.06133795819915,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "362893fb17fe4d3f9bcf8a16c3e6847a",
        "Title": "получаем габариты воздуховодов",
        "Nodes": [
          "9cd87fcda93742f1841d670e8a768caf",
          "9ba5f6dd21f24454bacb923e33b210be",
          "2945799a9bdd4eefbf0dcee6180a227b",
          "93f58a0422924b7ab3e9909fc38bdb32",
          "5d531c73501f4cf3bc8cd4287a3c6428",
          "7987bffb7a364a76bc46ede94d36282f",
          "4c1d23159f284054ae014e639edf8ce6",
          "c85794ea671b4b28adbc19e93c1c3100"
        ],
        "Left": 7424.1379760118871,
        "Top": 14767.62509149074,
        "Width": 1050.2606694321603,
        "Height": 564.87668966350248,
        "FontSize": 36.0,
        "InitialTop": 14820.62509149074,
        "InitialHeight": 553.87668966350248,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5544707cd89442a5a33e44df2ce7bb16",
        "Title": "Получаем точку центра кубика",
        "Nodes": [
          "ca4d65c869854443aa71a9eaea9823ac",
          "104842636160426a977864f0454ef5fd"
        ],
        "Left": 8637.60829792277,
        "Top": 14489.4389643794,
        "Width": 318.26659040268896,
        "Height": 258.67727710839972,
        "FontSize": 36.0,
        "InitialTop": 14585.4389643794,
        "InitialHeight": 214.67727710839972,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "1bcaa8f40f0c4f3eb6b02fc741ee26f7",
        "Title": "узнаем угол поворота",
        "Nodes": [
          "5963687653b1418a98efe3c9ce13cb76",
          "14355c5c2db54221800c7512116ba90d",
          "63c34532bb2240e5b4cadf44e8ba45f0",
          "dd3c4706dfe94e529f105dbb623df5d0"
        ],
        "Left": 7431.8001464853687,
        "Top": 15546.889851734442,
        "Width": 627.23926054601816,
        "Height": 349.6283673113976,
        "FontSize": 36.0,
        "InitialTop": 15599.889851734442,
        "InitialHeight": 348.6283673113976,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "67b84fcf8d494c27896e2416462a8e3e",
        "Title": "выбор стен по отверстиям",
        "Nodes": [
          "6c4caaa2759c4d4099680894b5c1a220",
          "87b238f940e24701bc5b24c4f778461d",
          "86c48aa3a1994934a13021e5e165052b"
        ],
        "Left": 6788.8687353759278,
        "Top": 14068.715906110248,
        "Width": 463.810185043224,
        "Height": 337.43003075841443,
        "FontSize": 36.0,
        "InitialTop": 14121.715906110248,
        "InitialHeight": 336.43003075841443,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "914216afc4d94602a6ea40ba8549f947",
        "Title": "Фильтр пересечений",
        "Nodes": [
          "fad890ba3106459582a2a43499bd7cec",
          "840ad134fbe24b80aaa374013c48f304",
          "5936cd847d84436cbd3f7b77962c6ff3",
          "fbccfc5e177f4966bd43a1601feb38a8"
        ],
        "Left": 4997.502806220009,
        "Top": 14247.323992522526,
        "Width": 226.82333333333335,
        "Height": 528.99214926961758,
        "FontSize": 36.0,
        "InitialTop": 14343.323992522526,
        "InitialHeight": 458.99214926961758,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "f97615a6acd94f06a5ebb77e0d2aee18",
        "Title": "получаем список воздуховодов, их пересечений и отверстий по которым они пересекаются",
        "Nodes": [
          "2485a6d9e0be4a2d8009c3b4376db4c4",
          "45c8186fb1c14625810de3e4cff5cfab",
          "1a18d0689cc144c3853321825a573d95"
        ],
        "Left": 5724.5264796545634,
        "Top": 1264.8537672486282,
        "Width": 432.82771954806685,
        "Height": 921.19675079329591,
        "FontSize": 36.0,
        "InitialTop": 1490.8537672486282,
        "InitialHeight": 747.19675079329591,
        "TextblockHeight": 216.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "24b4f76ed28449009f462cd2eae96f04",
        "Title": "Получаем точку центра кубика",
        "Nodes": [
          "4fcaa660b52e4d79880c6edc00445ce1",
          "2e8586888eb6408681037525303c4574"
        ],
        "Left": 8252.444890251274,
        "Top": 2009.95167739902,
        "Width": 318.26659040269078,
        "Height": 258.67727710839972,
        "FontSize": 36.0,
        "InitialTop": 2105.95167739902,
        "InitialHeight": 214.67727710839972,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "501cf01d052e4cbfb428f4f78af0bc8e",
        "Title": "Фильтр пересечений",
        "Nodes": [
          "251fb69ae4a944ce8891f92e8a212592",
          "84c49d29bb934e95aa54550cdb416bc6",
          "c50afd88fea24b7fba984b338c3464ba",
          "9634141d787441cf989125861005c483"
        ],
        "Left": 5117.8617339405237,
        "Top": 1055.7927284287305,
        "Width": 226.82333333333335,
        "Height": 528.99214926959917,
        "FontSize": 36.0,
        "InitialTop": 1151.7927284287305,
        "InitialHeight": 458.99214926959917,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "a4225ca0e3ab44c0957d8d54994b2c43",
        "Title": "Solid отверстия",
        "Nodes": [
          "005654ab32ea462aa6b7074818b62a1c"
        ],
        "Left": 3742.9536842154957,
        "Top": 1035.558689491218,
        "Width": 175.34333333333333,
        "Height": 267.0,
        "FontSize": 36.0,
        "InitialTop": 1131.558689491218,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c9fd2f2bc0594e41a419a036c58ffd69",
        "Title": "Вектор пересечения трубопровода и отверстия",
        "Nodes": [
          "0c6dfb9493254b1d9d9034849cae2164",
          "d2314620aa1e4c59a73af4585a0be28b",
          "d0e3454b801e4e12b99d9b900fdec74e"
        ],
        "Left": 4069.3401440680709,
        "Top": 1545.7639909988848,
        "Width": 690.97131716758486,
        "Height": 576.41876112072055,
        "FontSize": 36.0,
        "InitialTop": 1641.7639909988848,
        "InitialHeight": 480.41876112072055,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "159a19ad777742a09d3a5ff9337d7a67",
        "Title": "выбор стен по отверстиям",
        "Nodes": [
          "a3b49f5410434b7a9bdb53cfd4cb41dd",
          "856273a696b442a3b0689958f29540fb",
          "33aaf4257f10405480aa66d9c38ef549"
        ],
        "Left": 6335.8291382714788,
        "Top": 1026.8383323913431,
        "Width": 463.81018504322947,
        "Height": 337.4300307584017,
        "FontSize": 36.0,
        "InitialTop": 1079.8383323913431,
        "InitialHeight": 336.4300307584017,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "051ebdebdf064d61969092475e1126ef",
        "Title": "Получили все трубопроводы(исключены короткие участки\r\n",
        "Nodes": [
          "d4b8f850f7f6494d92f32061fe115f95"
        ],
        "Left": 3528.4860813860578,
        "Top": 1511.6848923781019,
        "Width": 453.73333333333335,
        "Height": 561.0,
        "FontSize": 36.0,
        "InitialTop": 1694.6848923781019,
        "InitialHeight": 145.0,
        "TextblockHeight": 173.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e7d5692f60304ce0b7482c21c1318339",
        "Title": "Получение угла поворота системы кординат элемента\r\n",
        "Nodes": [
          "6c67a889888f4aa08e4455ccb19897c7",
          "f53d5b20f96b48fe810cf470894504bb",
          "a50542cfd895411789ead0c323cd2fe0",
          "83f3a0555c414d5488d93b89392be12b",
          "09a6060fd557401cb2018ef73cdc75e8"
        ],
        "Left": 2497.5786867236311,
        "Top": 1174.0618956473782,
        "Width": 793.92470084790966,
        "Height": 462.85930719620046,
        "FontSize": 36.0,
        "InitialTop": 1314.0618956473782,
        "InitialHeight": 374.85930719620046,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "4d4c8d635c3a40739a2f55062e57bb21",
        "Title": "Получение существующих отверстий АР стены\r\n",
        "Nodes": [
          "392f7cf747ca44bfa257b86c6bb66ab7",
          "6ddc341698d64431b6bc3f6086e209fa",
          "baf090298aba48a3b4d75a1289d96bc8",
          "cb84839938674c319100b702569d5422",
          "2b9749ac8c1d47eb80d2e4bd6626611b",
          "46015ca08c2b49a18da36b22f2cb52dc",
          "4b8c0ce91e5844ba98aff29e4fa9ccb8"
        ],
        "Left": 356.93529145948196,
        "Top": 492.21452282820974,
        "Width": 1172.03822830034,
        "Height": 758.53935164470022,
        "FontSize": 36.0,
        "InitialTop": 588.21452282820974,
        "InitialHeight": 714.53935164470022,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d91ed9a1332b4c8699f42454b5663c2b",
        "Title": "получаем толщину стен",
        "Nodes": [
          "345a643086944f28807f930499e64069"
        ],
        "Left": 3349.9548482919927,
        "Top": 820.27822485093657,
        "Width": 171.01333333333335,
        "Height": 233.0,
        "FontSize": 36.0,
        "InitialTop": 960.27822485093657,
        "InitialHeight": 145.0,
        "TextblockHeight": 130.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7dda9d54ce454d4f84f49f27f46025c9",
        "Title": "получаем толщину стен",
        "Nodes": [
          "173178d17f13464f9c13f69101b03a2d",
          "20f92e57ec0a49288bd7fde242790f0a"
        ],
        "Left": 7394.5239473660095,
        "Top": 1788.573301580057,
        "Width": 657.38298266180027,
        "Height": 154.62968962293962,
        "FontSize": 36.0,
        "InitialTop": 1841.573301580057,
        "InitialHeight": 153.62968962293962,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4fef47a23e504bbea83464752b604978",
        "Title": "вычисляем угол поворота кубика",
        "Nodes": [
          "f3627d84af074a99babebda65dda3162",
          "1940de05fb114007b14adb15015b033e",
          "ba7f4f1fd10446eb9fa137d9eeb13c1c",
          "7be6402fd46c48b1ba766f6b40f17713",
          "39e1df2486374e2bb447dd8030a74f02"
        ],
        "Left": 7167.0127479646035,
        "Top": 1225.5443468295343,
        "Width": 835.58042156416013,
        "Height": 439.77107638010284,
        "FontSize": 36.0,
        "InitialTop": 1278.5443468295343,
        "InitialHeight": 438.77107638010284,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "d02b2627fd93449fb53c6763b2de03d0",
        "Title": "получаем минимальный угол между осями отверстия и перпендикуляром воздуховода",
        "Nodes": [
          "9619da7f0f094efca95df21b241d52f1",
          "9fbdd7ce50b84b1db43db6746c995af9",
          "bfe99d54d4224a46b3132e9b1da2f934",
          "cf5d38881e1342f4a289a0ffa38f4585"
        ],
        "Left": 7465.77184611837,
        "Top": 2169.0674552008722,
        "Width": 501.71483756693397,
        "Height": 664.25884240400319,
        "FontSize": 36.0,
        "InitialTop": 2352.0674552008722,
        "InitialHeight": 523.25884240400319,
        "TextblockHeight": 173.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2e63c5d319f14991af78f7dc459cb3bd",
        "Title": "получаем габариты воздуховодов",
        "Nodes": [
          "c0128977c4424c4d8e114d4d67a94bd9",
          "82b625a8c2654c63b20f305c91f494fe",
          "58811c32b18d4b6da69202a81f053218",
          "a23d37e01e6945eea71fed62cdf8cc62",
          "947235aa76e2441d89227d6512aae784",
          "12a3e2b0aa23436fac04ba49a8e764a8",
          "8ddf23d8187c49279192b816dfa0b617"
        ],
        "Left": 5945.9280509688979,
        "Top": 2381.98653239527,
        "Width": 1329.1188319531648,
        "Height": 482.7499240262805,
        "FontSize": 36.0,
        "InitialTop": 2434.98653239527,
        "InitialHeight": 471.7499240262805,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ead3fb5869a34acba7f7319f0218f509",
        "Title": "решаем большой и малый треугольники и получаем полную ширину",
        "Nodes": [
          "14e76ff450994ae8b44080827a0cb729",
          "eaab049ea55b4dc9ae869bd9d7cfcc6e",
          "b62da573324b45d7986fd4b8f42a6000"
        ],
        "Left": 8348.7432611182739,
        "Top": 2477.4414037304277,
        "Width": 650.13344555620642,
        "Height": 433.46802862858021,
        "FontSize": 36.0,
        "InitialTop": 2617.4414037304277,
        "InitialHeight": 299.46802862858021,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "9b697b828c9f4b8aa6b5145b8659b03e",
        "Title": "Создание строки описывающей отверстия",
        "Nodes": [
          "122d456250ef4d648b96d8235d1736c9",
          "299fbd67329242babe436edda5802e50",
          "8d26dd0bc2314eb48f7cf7585ccd79ad",
          "a142eec1adf24196b745015e2c86b15f",
          "524de66f2e8e40098352a43a0fce195a"
        ],
        "Left": 10001.893646974504,
        "Top": 2361.0936640029668,
        "Width": 1088.963078273151,
        "Height": 607.3634126980005,
        "FontSize": 36.0,
        "InitialTop": 2414.0936640029668,
        "InitialHeight": 526.38799317767371,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "664f8f41dc2f4c35aa61f4f37cadee9c",
        "Title": "Solid отверстия",
        "Nodes": [
          "479f5ffbb3194d9094427d14ed156326"
        ],
        "Left": 3412.9260428093594,
        "Top": -2994.3935712821112,
        "Width": 175.34333333333333,
        "Height": 293.0,
        "FontSize": 36.0,
        "InitialTop": -2898.3935712821112,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cae270ce3b5948ef854d98c5dbc57106",
        "Title": "Получили все трубопроводы(исключены короткие участки\r\n",
        "Nodes": [
          "e2c03c4d4e8a4f0ea4fb5ba86eb38de1"
        ],
        "Left": 2828.0847087759657,
        "Top": -2219.0339799261383,
        "Width": 453.73333333333335,
        "Height": 561.0,
        "FontSize": 36.0,
        "InitialTop": -2036.0339799261383,
        "InitialHeight": 145.0,
        "TextblockHeight": 173.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e1f76c7d72684110a7b1ebf51ff8ea66",
        "Title": "получаем толщину стен",
        "Nodes": [
          "bae354b8bf554c92aff2b93b56fba2e3"
        ],
        "Left": 2532.8986563602921,
        "Top": -3127.9785931876904,
        "Width": 171.01333333333335,
        "Height": 233.0,
        "FontSize": 36.0,
        "InitialTop": -2987.9785931876904,
        "InitialHeight": 145.0,
        "TextblockHeight": 130.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e70fb60a7365464294865ab4525e5a02",
        "Title": "Получение угла поворота системы кординат элемента\r\n",
        "Nodes": [
          "30de4aafabbf4b779b7ce8e07939039d",
          "944aea5de1924d9383aecb042a93105c",
          "0730df86c8a24d8b9483a84b3e7a10ab",
          "e0b1d7435fd5438c8e2727e4838eb4e3",
          "855679ca70bc4b0fadf3c1d4796db3fe"
        ],
        "Left": 1796.7223464486424,
        "Top": -2507.86010447672,
        "Width": 793.92470084790966,
        "Height": 462.85930719620046,
        "FontSize": 36.0,
        "InitialTop": -2367.86010447672,
        "InitialHeight": 374.85930719620046,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "dabf35808b1149a185c40bc4fb2aa2fd",
        "Title": "Получение существующих отверстий КЖ стены\r\n",
        "Nodes": [
          "48cc55f1941446fcae05a9eb6af5f8a4",
          "cf7c9bffbade4eb5868e81af67f76ede",
          "c373e13b0e6e46ed91fe45de917ac246",
          "def15f1139ea40709bd0b6d5f3e07c16",
          "7480c01f59d440b4a5cf3051a656fa94",
          "577050fb1a7e49aeb6245bfcb78993ad",
          "9f13199e496147bda3107022e8bc4f93"
        ],
        "Left": -288.8380432116254,
        "Top": -3241.9312129796704,
        "Width": 1028.03822830034,
        "Height": 758.53935164469749,
        "FontSize": 36.0,
        "InitialTop": -3145.9312129796704,
        "InitialHeight": 714.53935164469749,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d1b371de82534e649897415823ffb854",
        "Title": "Solid стен",
        "Nodes": [
          "5c24e9056fe14cb788f7f6ed3b1279fd",
          "fa77cbe8952540d3b92b7a550b54b5e3",
          "3e23185029704c7fb8536c87fe8542aa"
        ],
        "Left": 1772.238140114192,
        "Top": -3302.7392467171903,
        "Width": 481.29793890535075,
        "Height": 348.54498985754071,
        "FontSize": 36.0,
        "InitialTop": -3249.7392467171903,
        "InitialHeight": 347.54498985754071,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "40041a63e09549b1afe566ce87519df3",
        "Title": "получаем список воздуховодов, их пересечений и отверстий по которым они пересекаются",
        "Nodes": [
          "90c0f265565d4b419beafd7ddba101ce",
          "a7edb86c53d14661b1f8c149eb1f4a36",
          "e376d9b10d744d0bac6c017872c12ea8"
        ],
        "Left": 5374.7381647171433,
        "Top": 14435.142085162506,
        "Width": 652.55215631145256,
        "Height": 832.93410699607011,
        "FontSize": 36.0,
        "InitialTop": 14575.142085162506,
        "InitialHeight": 718.93410699607011,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "128416aa48ff4f8eb29ea27fbf24beb2",
        "Title": "Solid стен",
        "Nodes": [
          "379359733cf647d1b8b555bd81950c72",
          "2c36a6b07f064b3bb67d9873e0475ec0",
          "d291c02860d0406ca74a2931389a0fb8"
        ],
        "Left": 2371.69293003642,
        "Top": 539.56508158948077,
        "Width": 674.27287916953946,
        "Height": 278.79200801737022,
        "FontSize": 36.0,
        "InitialTop": 592.56508158948077,
        "InitialHeight": 225.79200801737022,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "56b6b95ed05a419f93645ed6fa3b2ef4",
        "Title": "Вводим исходные данные",
        "Nodes": [
          "65aa028662c8465ebedb0e22aa2c0a13"
        ],
        "Left": 15333.200601172075,
        "Top": 2451.894058505156,
        "Width": 368.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": 2547.894058505156,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6fb9759b04ac4b6bbea1a1a04cc3a74a",
        "Title": "Проверка: семейство загружено в документ?",
        "Nodes": [
          "48e13c01c0034300b5dfa4130e0b70e4",
          "95ed21a250aa4f4d8f8edb7ae3631f0f",
          "ba435d4687de4bc7a2ad2d85b7b9d5b0",
          "17b1002ff7404b7c8e3cf0916ecca3da",
          "83223959b7e1404bb788e20ac8569c28"
        ],
        "Left": 15799.929771068459,
        "Top": 2076.2507764137254,
        "Width": 965.599925522627,
        "Height": 303.21892293423025,
        "FontSize": 36.0,
        "InitialTop": 2129.2507764137254,
        "InitialHeight": 292.21892293423025,
        "TextblockHeight": 43.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "4757f4106b0e4160839625055b231b42",
        "Title": "Удаление некорректных заданий",
        "Nodes": [
          "becab78fd73a45089ce9e5e8bc0f2dd2",
          "f109a1b926b144f5be9fed2f2e69e81c",
          "2eac51bea13147a4bb11dc60b1728d3f",
          "f4b1fcdda24446ec8e361171eeee6194"
        ],
        "Left": 18871.165860554425,
        "Top": 2683.9038323056216,
        "Width": 917.81388412982051,
        "Height": 466.4937172986547,
        "FontSize": 36.0,
        "InitialTop": 2736.9038323056216,
        "InitialHeight": 443.48788466495535,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f40d4ddcbcfb4936aad6247a58bdbc2b",
        "Title": "Задания от версии, которые не актуальны(Удалить)",
        "Nodes": [
          "cc9b533fc7294422a5373cd266245440",
          "6f540e3ad37f4ce594ea9a2d5e2e8d65",
          "c8c2d4c321bf4edba6dfd90a6f6d8edf",
          "e7b9bdd3b99248a3acb5caf128eeecf0",
          "0cc5ea531c9d4c128c41bf4858431923",
          "903053fea84d4d0dbd3b58c158864374"
        ],
        "Left": 17510.953172354362,
        "Top": 5246.6071905062654,
        "Width": 1811.2208150191545,
        "Height": 606.23170465877593,
        "FontSize": 36.0,
        "InitialTop": 5299.6071905062654,
        "InitialHeight": 583.22587202507566,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "eb882f1b2aab4f5fa3f3a287543aab46",
        "Title": "Запись и удаление предупреждений.",
        "Nodes": [
          "3d4f439711644434ae6f554e7e3ad56e",
          "bc40e67d69254e7a8659b688d4e61fd8",
          "c26d16a443344b098e969f7dae927746",
          "6c2e7ef24c054b4faa043bd972a7bdea",
          "6453be53d05d44bc9577ce59415b09eb",
          "27f9e7711c574270a5302e5d73c382b9"
        ],
        "Left": 19413.425802309284,
        "Top": 4916.5826825929707,
        "Width": 1041.1494105189522,
        "Height": 995.16841881635082,
        "FontSize": 36.0,
        "InitialTop": 4969.5826825929707,
        "InitialHeight": 949.047496810721,
        "TextblockHeight": 43.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "30af6af60e854118a231235190a481f9",
        "Title": "Solid отверстия",
        "Nodes": [
          "74cafa5fb8364bb9b7688f5a4bfd8d33"
        ],
        "Left": 4129.0694834493552,
        "Top": 1155.8288689719072,
        "Width": 175.34333333333333,
        "Height": 267.0,
        "FontSize": 36.0,
        "InitialTop": 1251.8288689719072,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b8db6fc9fd23456494bae38a82f13f89",
        "Title": "Создание строки описывающей отверстия",
        "Nodes": [
          "6d182631b1a74c66922ad869e057526d",
          "367a842d403848c5b43d04f241c98fb4",
          "b18aa04a049f44988950ce1e6100539d",
          "5459f2ec3f2e4bc5b5e82465b4cd2858",
          "ed66625a3ef64a3bbd067fb63c3ada2c"
        ],
        "Left": 9811.8273558068176,
        "Top": -1415.6712650948198,
        "Width": 871.43861170659875,
        "Height": 520.35362607138,
        "FontSize": 36.0,
        "InitialTop": -1362.6712650948198,
        "InitialHeight": 443.10719740647983,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8b21da48a4814f74840213753621305d",
        "Title": "решаем большой и малый треугольники и получаем полную ширину",
        "Nodes": [
          "445ade3679e04e1185e224853d49f8b4",
          "c79d3e6d9d294254bdbf962e35955fba",
          "afa69d758cfd421e858e2b4801e4181f"
        ],
        "Left": 8075.3961741793873,
        "Top": -1386.3333119939798,
        "Width": 650.13344555620915,
        "Height": 433.46802862858021,
        "FontSize": 36.0,
        "InitialTop": -1246.3333119939798,
        "InitialHeight": 299.46802862858021,
        "TextblockHeight": 130.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "2ef8e8cf43634dc9987c8590bc832e51",
        "Title": "Получаем точку центра кубика",
        "Nodes": [
          "eb01c4adfbb046759617c7e8528560ef",
          "4385e93643e64c3da4f6ef83a3216cb7"
        ],
        "Left": 7979.0978033123874,
        "Top": -1853.82303832539,
        "Width": 318.26659040268896,
        "Height": 258.67727710840018,
        "FontSize": 36.0,
        "InitialTop": -1757.82303832539,
        "InitialHeight": 214.67727710840018,
        "TextblockHeight": 86.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "d39e8429a2a94554b1c5a9ffb28ad2b3",
        "Title": "получаем толщину стен",
        "Nodes": [
          "98d879a0537947b989e0527ebb9f00ec",
          "7900a13f624a4dc8965f01b9ed280ddc"
        ],
        "Left": 7121.1768604271265,
        "Top": -2075.20141414435,
        "Width": 657.38298266180027,
        "Height": 154.62968962294053,
        "FontSize": 36.0,
        "InitialTop": -2022.20141414435,
        "InitialHeight": 153.62968962294053,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0cb639f80d21493ab41abacc924fc34b",
        "Title": "вычисляем угол поворота кубика",
        "Nodes": [
          "c1ce1896961e4e3280ae8aed8f2438cb",
          "b7003f3ed65b4d48ba0c9c395b837bd6",
          "39856b7e230147e7a33c9f3c9e3cefaf",
          "6caa073b30ff461ab85fbb1fe9b1d7ca",
          "37cf96df72c04dcb811a69e9fd2ab02b"
        ],
        "Left": 6893.6656610257169,
        "Top": -2638.23036889488,
        "Width": 835.58042156416013,
        "Height": 439.77107638011012,
        "FontSize": 36.0,
        "InitialTop": -2585.23036889488,
        "InitialHeight": 438.77107638011012,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "b28e72f73ad14746846f263f5ab287e3",
        "Title": "получаем минимальный угол между осями отверстия и перпендикуляром воздуховода",
        "Nodes": [
          "d22e0d181d164c2e89cf51ab31fdf164",
          "4adeb07acc09472bb5d7f920bfdb8ad4",
          "048661a15872416fbcc6599ef69a62f9",
          "30af50008c3e49b0bdaf0225f8a34c0d"
        ],
        "Left": 7192.4247591794874,
        "Top": -1694.7072605235398,
        "Width": 501.71483756692942,
        "Height": 664.25884240401,
        "FontSize": 36.0,
        "InitialTop": -1511.7072605235398,
        "InitialHeight": 523.25884240401,
        "TextblockHeight": 173.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "bc32b1e281d64271a12c0358b7d27ecb",
        "Title": "выбор стен по отверстиям",
        "Nodes": [
          "8be21bab945043368036e99eb1b9051a",
          "f278932703794feea34807652231823d",
          "92091317c4944a91a9c3a59b68015612"
        ],
        "Left": 6062.4820513325967,
        "Top": -2836.93638333307,
        "Width": 463.81018504323038,
        "Height": 337.43003075840033,
        "FontSize": 36.0,
        "InitialTop": -2783.93638333307,
        "InitialHeight": 336.43003075840033,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6af3b1df3050443c941b9d4dec2d22e6",
        "Title": "получаем габариты воздуховодов",
        "Nodes": [
          "0467745bb26346579a498ef8a019f126",
          "545feda9838d40b1a588dac4e02294ee",
          "effe104f378145feb068b2129c13098e",
          "304a90d041634e48a122e54d41e4ebc7",
          "fde4348ef7a14109971aa1dfd5b7dd05",
          "f306e72b21ff42559e20fa541405d996",
          "c5e23a8872ea49c89d12a36f0d07d629"
        ],
        "Left": 5672.5809640300167,
        "Top": -1481.7881833291399,
        "Width": 1329.1188319531602,
        "Height": 482.74992402628004,
        "FontSize": 36.0,
        "InitialTop": -1428.7881833291399,
        "InitialHeight": 471.74992402628004,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "09d75922d3e042b6a8fd0cc2d240e26a",
        "Title": "получаем список воздуховодов, их пересечений и отверстий по которым они пересекаются",
        "Nodes": [
          "2c95807ace10441d89d2bd2303b8e67f",
          "9dbe1410e6f745d587cb071a62765676",
          "7410d002beaa4781b779e53a7db5b9f8"
        ],
        "Left": 5451.1793927156768,
        "Top": -2598.92094847578,
        "Width": 432.82771954807049,
        "Height": 921.19675079329,
        "FontSize": 36.0,
        "InitialTop": -2372.92094847578,
        "InitialHeight": 747.19675079329,
        "TextblockHeight": 216.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "3bd52464f52d448995887280d0d5a9cd",
        "Title": "Фильтр пересечений",
        "Nodes": [
          "20c1f8ba26fd4fe6a21c8587c18207da",
          "64ec7aa785bd46c3848325dda4a3c6d8",
          "b0c877e32c314fe0ac4ed0cc0758c0fe",
          "439599a53e974ce58234efd7237d60a1"
        ],
        "Left": 4844.5146470016371,
        "Top": -2807.98198729568,
        "Width": 226.82333333333335,
        "Height": 528.9921492696003,
        "FontSize": 36.0,
        "InitialTop": -2711.98198729568,
        "InitialHeight": 458.9921492696003,
        "TextblockHeight": 86.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "8e7405f6c5fe4832917e91085c3ef33a",
        "Title": "Вектор пересечения трубопровода и отверстия",
        "Nodes": [
          "646dbf8981a94173af6e689500442f59",
          "1a89a9a8b07c46d7af0d1dedf9788bcf",
          "15f8de7a275a42b49969ca6cbe213c61"
        ],
        "Left": 3795.993057129187,
        "Top": -2318.0107247255296,
        "Width": 690.97131716759031,
        "Height": 576.41876112072987,
        "FontSize": 36.0,
        "InitialTop": -2222.0107247255296,
        "InitialHeight": 480.41876112072987,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "925385cbce894a7ab5d39ad9518dd575",
        "Title": "поиск новых заданий  и заданий на удаление",
        "Nodes": [
          "63e3a47eb06a47da8facabeb8c80cda0",
          "e9344a934b2d4574870245c169b27200",
          "64f3340a824e448684d4a778ffdb3e3a",
          "eb507274b6f14694898fd99d1f1f6499",
          "608b346f1db844f2ad6d5fe2ad01858b",
          "8be0a64075af4f3a98490e7f6eb8ed3a",
          "39306901b1e044578be1d0835425e1be",
          "679fb7a3686441899d83e105665e7427"
        ],
        "Left": 17977.870499400655,
        "Top": 3507.7683307559541,
        "Width": 1286.6466294090824,
        "Height": 707.11209104107229,
        "FontSize": 36.0,
        "InitialTop": 3560.7683307559541,
        "InitialHeight": 690.11209104107229,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fbf2d49d96cc4acb93301430c14de3e1",
        "Title": "Запись и удаление предупреждений.",
        "Nodes": [
          "74a33a9a46ee44ec85dee6ec0d475ecc",
          "1ecec1006020467b82c6cd4595bb4efb",
          "0cbf414671534e4d84c33541ac9b5a48",
          "035af58ad3a4426d930dc71885804fa6",
          "475953bb7ec14f3f9f2aa05b4f62f837",
          "f83b8287db2847208daa085f39cf7f2b"
        ],
        "Left": 20215.82654587401,
        "Top": 13232.654028231043,
        "Width": 1041.1494105189995,
        "Height": 995.168418816349,
        "FontSize": 36.0,
        "InitialTop": 13285.654028231043,
        "InitialHeight": 949.04749681071917,
        "TextblockHeight": 43.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "6662154f48c4401a8cc164ff75635504",
        "Title": "Задания от версии, которые не актуальны(Удалить)",
        "Nodes": [
          "9fbdbe1a28e94913a1550ba9b6674581",
          "a31de63be5034a65a29adb893ace953b",
          "502639771ba34ec2ad3faa7e4984c993",
          "c734ce711ff249529aaec66cd02aaa97",
          "da31a3d20e864a0da737a5c20783a1d3",
          "37d07229779641aab66848d1a48edad8"
        ],
        "Left": 18306.953190517008,
        "Top": 13526.173040136064,
        "Width": 1817.6215404213035,
        "Height": 642.73720066705027,
        "FontSize": 36.0,
        "InitialTop": 13579.173040136064,
        "InitialHeight": 619.73136803335,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "21490d9de1f84721b28a19f0c7b11838",
        "Title": "поиск новых заданий  и заданий на удаление",
        "Nodes": [
          "4be7906e3ecb481d98937cf572172982",
          "d30d153d54b4407d90576a4a5183b3cb",
          "1c80f5fceedb4470b1f8ea9dfc13ea3b",
          "56b46f6b41fe4d37ae6b4db55c498da0",
          "de5a0664f27846b888b72dfecaaac2bc",
          "0457d868e60340e48ca5d3bb87e5a141",
          "c665cb169d364f03966706e8a8b5baf6",
          "3cecdb8840ba4b4eb11ec8ebac7fe646"
        ],
        "Left": 18554.982271316385,
        "Top": 11799.669815560081,
        "Width": 1384.9086745607055,
        "Height": 747.6620557806491,
        "FontSize": 36.0,
        "InitialTop": 11852.669815560081,
        "InitialHeight": 730.6620557806491,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "59a0b473444040e599f0b4a9666cc060",
        "Title": "Удаление некорректных заданий",
        "Nodes": [
          "e16769d8e5c4489080d736dad3e974ff",
          "00a661a91bea4a428f303b127edb143b",
          "e06f8ff31a1143bbae4b06ce5cbd2d2a",
          "adbc0c65559f49f793d47082294f777c"
        ],
        "Left": 19664.718276596988,
        "Top": 10999.975177943694,
        "Width": 926.662211652023,
        "Height": 563.82532004306631,
        "FontSize": 36.0,
        "InitialTop": 11052.975177943694,
        "InitialHeight": 536.82532004306631,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f3421399f70d46f39943a3e1f0ddfac0",
        "Title": "Проверка: семейство загружено в документ?",
        "Nodes": [
          "5bc8734a16364fa99cd532e2dcfb5d8a",
          "a6d15f3bbeb744099b882a6af0edb384",
          "24239079a83741c5b129bc03ff29c6fe",
          "fe726967dced41a6b4f1f84fb3e7d4bc",
          "fb2fb1ebba114860a098e8402a9c5d58"
        ],
        "Left": 16276.743600939888,
        "Top": 9823.0450823117626,
        "Width": 965.59992552259791,
        "Height": 303.21892293422934,
        "FontSize": 36.0,
        "InitialTop": 9876.0450823117626,
        "InitialHeight": 292.21892293422934,
        "TextblockHeight": 43.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "24d516c2781642c0b9748276e891fa92",
        "Title": "Вводим исходные данные",
        "Nodes": [
          "fff89da8e6434764bce5c4d32cbd2fad"
        ],
        "Left": 15810.014431043484,
        "Top": 10198.688364403191,
        "Width": 409.0,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": 10294.688364403191,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cfe3a3aa08e645ea80e270c832d015e7",
        "Title": "объединение векторов",
        "Nodes": [
          "2a485df7d58a4ddcb2f9c48e52b59124"
        ],
        "Left": 6267.3218487860458,
        "Top": 1640.1904096241717,
        "Width": 232.76333333333335,
        "Height": 189.0,
        "FontSize": 36.0,
        "InitialTop": 1736.1904096241717,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f34a263ed66647a084ce4344b89c1815",
        "Title": "Выбор всех заданий полы",
        "Nodes": [
          "0e60f40913174f0d8cdc2e82f17c4630",
          "435209598bd04a63a9e554308edd7dfc",
          "d54e3993d01a47acb992b997c89205da"
        ],
        "Left": -39543.880080861105,
        "Top": -1992.4368400007806,
        "Width": 409.0,
        "Height": 364.33305401554026,
        "FontSize": 36.0,
        "InitialTop": -1896.4368400007806,
        "InitialHeight": 320.33305401554026,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6b1b195d8b6f4b7389e8c23b5d5e73bc",
        "Title": "Выбор всех заданий стены",
        "Nodes": [
          "826d0d6ad200423195589f576130b603",
          "788f1c1464784782a8d6ad2b5aec3065",
          "4e8677960f134ab29d4ad5df80c0e502"
        ],
        "Left": -39503.743790222739,
        "Top": -2883.73530478655,
        "Width": 368.0,
        "Height": 364.33305401559937,
        "FontSize": 36.0,
        "InitialTop": -2787.73530478655,
        "InitialHeight": 320.33305401559937,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8ff1e82bdcac45b098b0e81f938b7cc4",
        "Title": "Заполнение истории перемещения и параметра перемещено",
        "Nodes": [
          "1f01185821b248619f78c438898fea82",
          "5f79a8d385904d4ca20ec84177df1253",
          "812a532833de497d9656dc04e3f28174",
          "7d0d2992dc814d4c97ba4f6d007f67c6",
          "d81da4ca732e4b098e4ed2fdf0071fef",
          "6216d6f093b14c488fbaef51cf2db49d",
          "8743561b407b48b69b3eb7ff2e838f51",
          "d7588f6f471d4114aaa3edb78e70600d",
          "d6c878f9c32d443c95ecf16db2546642",
          "740a1af73ee44bbc926f3c7ff10d7a65"
        ],
        "Left": -36172.198081935552,
        "Top": -4119.271023336908,
        "Width": 1533.104478283698,
        "Height": 751.387993324387,
        "FontSize": 36.0,
        "InitialTop": -4066.271023336908,
        "InitialHeight": 750.387993324387,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1ff999fedcf14b988ff5faa84d46f528",
        "Title": "Заполнение истории перемещения и параметра перемещено",
        "Nodes": [
          "2795fecb3b9346a986bb5b81b94c0637",
          "7c4a47e847374bccb6455263ebea3f6e",
          "46c577f9fe6540a692d33e48c9721632",
          "dd3915067d9748db94f279aaf690e4ce",
          "84463155de594baa981d093e58cd7462",
          "f3b41923bfa94f1da98a3ce82b6c9c56"
        ],
        "Left": -35313.2268482753,
        "Top": -1954.7544487627,
        "Width": 1473.5369513780024,
        "Height": 645.22769038958,
        "FontSize": 36.0,
        "InitialTop": -1901.7544487627,
        "InitialHeight": 644.22769038958,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7fd5b0db75e448e3aa5aec6665cf80fb",
        "Title": "Заполнение истории перемещения и параметра перемещено",
        "Nodes": [
          "6b583a3d66b5484b8aeaf04c0f92bfe0",
          "847eb61504a3477ca48d3412a916e924",
          "8055ac8e20624fd7922becbe36e2b8ad",
          "5629c6cfffa443a8991e7632eb983fa7",
          "f5ba883feb704a8985f108594ff06ea2",
          "4b370222cd81432e878c4cde14585e03",
          "466ef2df90c645559d1e2596ba05b8d9"
        ],
        "Left": -37139.178367801767,
        "Top": -841.60667820504364,
        "Width": 1533.104478283698,
        "Height": 718.68574421407993,
        "FontSize": 36.0,
        "InitialTop": -788.60667820504364,
        "InitialHeight": 717.68574421407993,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d71d521f6b3b4ef9bdbe7c3e0f0e2112",
        "Title": "Выбор всех заданий стены",
        "Nodes": [
          "d3caf7be90514a6abac8196d6c614260",
          "f1291ca6ed1243d6a3aeba3c9dc8fc4f",
          "5e6086efc88b41ddbf0081fdf3df7291"
        ],
        "Left": -51257.660650247853,
        "Top": -6323.8875576223272,
        "Width": 368.0,
        "Height": 364.33305401560028,
        "FontSize": 36.0,
        "InitialTop": -6227.8875576223272,
        "InitialHeight": 320.33305401560028,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5a621a8aa3b0404581507e4e2fad5916",
        "Title": "Выбор всех заданий полы",
        "Nodes": [
          "512dd6c66b3943deb1135640090c2546",
          "132f6530eddb43e5bca399ee72771f25",
          "4a0ad03b0d3a473087e800638e32549d"
        ],
        "Left": -51696.044229112253,
        "Top": -6319.2133187291665,
        "Width": 409.0,
        "Height": 364.33305401554935,
        "FontSize": 36.0,
        "InitialTop": -6223.2133187291665,
        "InitialHeight": 320.33305401554935,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e5606b497cf84f70ab0546b11c5c2859",
        "Title": "Интерфейс",
        "Nodes": [
          "c1b60f6a236b43c0b36c8c89fc20daaf",
          "881c97bac6624950a54069a9d33ae291",
          "a89b8cfd32734473a51b477e9a114dc2",
          "cb6ffc8f83d840409b00d156e78c5645",
          "28e3a7d24acb40bca176a24656e4ff87"
        ],
        "Left": -51871.752668575507,
        "Top": -5162.2590255803434,
        "Width": 239.0,
        "Height": 548.071305561074,
        "FontSize": 36.0,
        "InitialTop": -5109.2590255803434,
        "InitialHeight": 519.071305561074,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "9ff642586bac4f4e8aa73cc9dd29d7b4",
        "Title": "параметр вводной",
        "Nodes": [
          "5ba51263a2d5409cbcd28a305885c186",
          "dfa1b219a66946e0a42a6c52d357d962",
          "608323e8fd684d0e9f40fb66c3239f93"
        ],
        "Left": -52903.849450453512,
        "Top": -5623.2471850283791,
        "Width": 231.85455737761367,
        "Height": 339.93531148667535,
        "FontSize": 36.0,
        "InitialTop": -5527.2471850283791,
        "InitialHeight": 320.93531148667535,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ddc3abbe46a3417ba86f90e3407f4c0e",
        "Title": "Вводной параметр",
        "Nodes": [
          "0873c21ee66f4aacbb7c1be7068f67ff",
          "87ba6c9a355d4dbb92428bc30b728327",
          "627cd9d452364036a0ccb6720524fdc0"
        ],
        "Left": -52876.485529807425,
        "Top": -5222.1885261264051,
        "Width": 206.744174382795,
        "Height": 381.12190433580236,
        "FontSize": 36.0,
        "InitialTop": -5126.1885261264051,
        "InitialHeight": 362.12190433580236,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "22ec444ee7f146069f759a1c2a3825d1",
        "Title": "Вводной параметр",
        "Nodes": [
          "ddbc0fe521e5412398fc94b3f55df127",
          "d87dddf6f18643b6821a6ce4877ba2a8",
          "a307022778d149c982ad945a19449c29"
        ],
        "Left": -52916.556263857106,
        "Top": -4833.4445387679352,
        "Width": 234.74417438276589,
        "Height": 381.12190433579963,
        "FontSize": 36.0,
        "InitialTop": -4737.4445387679352,
        "InitialHeight": 362.12190433579963,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "76e316ac3e7044b1bd3da25098d1270d",
        "Title": "Вводной параметр",
        "Nodes": [
          "a939214583ef42f4920a75ced79450ed",
          "d1a3b37a481146c6b0142c96a98f7472",
          "3b685187b5154e0b8637a82e274f3505"
        ],
        "Left": -52932.681655659966,
        "Top": -4447.5750138831627,
        "Width": 213.856703410842,
        "Height": 381.12190433579963,
        "FontSize": 36.0,
        "InitialTop": -4351.5750138831627,
        "InitialHeight": 362.12190433579963,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0bc2fc51f2b84035874af372a702e5dd",
        "Title": "Вводной параметр",
        "Nodes": [
          "535f325acce14d58a4f2ffa4f2049b53",
          "1af0cae0641f4b8282f2a545334f3697",
          "4d8bd426dc514a3e9e6e61e6ccd82652"
        ],
        "Left": -52967.10808548746,
        "Top": -4084.4751119742941,
        "Width": 252.58443965514743,
        "Height": 372.18473443328048,
        "FontSize": 36.0,
        "InitialTop": -3988.4751119742941,
        "InitialHeight": 353.18473443328048,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "40a7545eba344582ae5ac645dd91035e",
        "Title": "Вводной параметр",
        "Nodes": [
          "ab6092f79c5d43a2a7804ec52a0fea23"
        ],
        "Left": 29209.723049588953,
        "Top": 8449.19933085647,
        "Width": 216.0,
        "Height": 179.0,
        "FontSize": 36.0,
        "InitialTop": 8545.19933085647,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "07fbf2248c4b494d9e0cf1b0c3dcd53d",
        "Title": "Вводной параметр",
        "Nodes": [
          "f4d442c301f94f1b9ba6f4f0b338274b"
        ],
        "Left": 29170.51891523457,
        "Top": 9583.9901250348412,
        "Width": 230.0,
        "Height": 164.0,
        "FontSize": 36.0,
        "InitialTop": 9679.9901250348412,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1291d60620b449ae884940ed3acfd6ac",
        "Title": "Интерфейс",
        "Nodes": [
          "ee0a3d456a9c498795ac93f000009f2d",
          "afc2f23c54424c32b8b62335d0883e5d",
          "fcad9efbc63b430bbdd5d93ba7e6e835",
          "2bd053b91abf47d1bbc648cccd0cd186",
          "ab78d5ae7a4c471e825edf26557c52b6"
        ],
        "Left": 30617.018171452237,
        "Top": 8196.9752493743945,
        "Width": 207.01759118089831,
        "Height": 548.0713055610704,
        "FontSize": 36.0,
        "InitialTop": 8249.9752493743945,
        "InitialHeight": 519.0713055610704,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "2382969bc03e421d8c92fe5a909bb036",
        "Title": "Вводной параметр",
        "Nodes": [
          "8b18bf7fc55342a4a784dafc0ea8c814"
        ],
        "Left": 29249.793783638648,
        "Top": 8060.455343498,
        "Width": 212.0,
        "Height": 179.0,
        "FontSize": 36.0,
        "InitialTop": 8156.455343498,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "58585e3a336c46989956a9e5f6434374",
        "Title": "параметр вводной",
        "Nodes": [
          "cd366cb608134ffd8aba1fc4522ef28c"
        ],
        "Left": 29222.429862992554,
        "Top": 7659.3966845960294,
        "Width": 212.0,
        "Height": 179.0,
        "FontSize": 36.0,
        "InitialTop": 7755.3966845960294,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ad9794d2f3764b7c8f214fff0ff9c719",
        "Title": "Вводной параметр",
        "Nodes": [
          "d7badd027cbe471aa92ff6b272b6c6cd"
        ],
        "Left": 29169.942163994998,
        "Top": 9972.4609529185982,
        "Width": 184.0,
        "Height": 164.0,
        "FontSize": 36.0,
        "InitialTop": 10068.460952918598,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "333256b4b9ff45e3a60d7d81e6dc875e",
        "Title": "Вводной параметр",
        "Nodes": [
          "781a19c4f89d49f38e25da714ea5ed5b"
        ],
        "Left": 29194.019005793052,
        "Top": 10366.526732252645,
        "Width": 196.0,
        "Height": 164.0,
        "FontSize": 36.0,
        "InitialTop": 10462.526732252645,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "eba598736813464884066d6dd145c36c",
        "Title": "Вводной параметр",
        "Nodes": [
          "e93877be4c014f5ab25bd3d12a58679c"
        ],
        "Left": 29179.016727170303,
        "Top": 9231.5301127397051,
        "Width": 190.0,
        "Height": 164.0,
        "FontSize": 36.0,
        "InitialTop": 9327.5301127397051,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d51b4492b85e467c999a316ad1be23e1",
        "Title": "Вводной параметр",
        "Nodes": [
          "b3e452db6f34430883241caabb58765f",
          "c720323c44234c59b34e3e1d2b017c44",
          "c4624e32da6d494a928d7f8068c04878"
        ],
        "Left": -52976.042724044273,
        "Top": -3715.7408355753519,
        "Width": 288.10155330628913,
        "Height": 372.18473443328,
        "FontSize": 36.0,
        "InitialTop": -3619.7408355753519,
        "InitialHeight": 353.18473443328,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bfe2389cd8494abba64989f6a7bc744c",
        "Title": "Вводной параметр",
        "Nodes": [
          "8f283baab65f43eda2cf54b1c966f929"
        ],
        "Left": 29193.597657786,
        "Top": 8835.06885574125,
        "Width": 216.0,
        "Height": 179.0,
        "FontSize": 36.0,
        "InitialTop": 8931.06885574125,
        "InitialHeight": 145.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "439d7e7aad6249ebb3de88160d358fca",
        "Title": "Created by: Babuh.AP\r\nModified by: Babuh.AP\r\nVersion: 2\r\nRevit Version: 2021.1.1\r\nDate: 22.08.2022\r\nLast Change: 22.08.2022\r\nCompany: LIST Project (Tyumen, Russia)",
        "Nodes": [],
        "Left": -9954.7843495550987,
        "Top": 7406.0658829202548,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "db8fd86c25224ecfa4038aa04e97bf86",
        "Title": "Описание скрипта\r\n\r\nVer. 2\r\n\r\nСоздание экземпляров семейства\r\n \"(Отв_Задание)_Стены_Прямоугольное\";\r\n\"(Отв_Задание)_Перекрытия_Прямоугольное\"; \r\nв точках пересечения перекрытий из связевого файла  осями воздуховодов, труб и лотков в текущем файле. С заданием габаритов отверстия. С записью параметров: подразделения, получающего задание; подразделения, выдавшего задание; текущей даты, версии создаваемого задания\r\n\r\n",
        "Nodes": [],
        "Left": -9954.7843495550987,
        "Top": 7557.6016227761274,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 33606.602947963736,
    "Y": 2569.5257648405072,
    "Zoom": 0.61643557895869128
  }
}